<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="34343"><g><title>conway`pollster::block_on (7 samples, 0.02%)</title><rect x="0.0175%" y="629" width="0.0204%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="7"/><text x="0.2675%" y="639.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (6 samples, 0.02%)</title><rect x="0.0553%" y="517" width="0.0175%" height="15" fill="rgb(217,0,24)" fg:x="19" fg:w="6"/><text x="0.3053%" y="527.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (5 samples, 0.01%)</title><rect x="0.0582%" y="501" width="0.0146%" height="15" fill="rgb(221,193,54)" fg:x="20" fg:w="5"/><text x="0.3082%" y="511.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (5 samples, 0.01%)</title><rect x="0.0582%" y="485" width="0.0146%" height="15" fill="rgb(248,212,6)" fg:x="20" fg:w="5"/><text x="0.3082%" y="495.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (5 samples, 0.01%)</title><rect x="0.0582%" y="469" width="0.0146%" height="15" fill="rgb(208,68,35)" fg:x="20" fg:w="5"/><text x="0.3082%" y="479.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (5 samples, 0.01%)</title><rect x="0.0582%" y="453" width="0.0146%" height="15" fill="rgb(232,128,0)" fg:x="20" fg:w="5"/><text x="0.3082%" y="463.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (5 samples, 0.01%)</title><rect x="0.0582%" y="437" width="0.0146%" height="15" fill="rgb(207,160,47)" fg:x="20" fg:w="5"/><text x="0.3082%" y="447.50"></text></g><g><title>AppKit`-[NSApplicationFunctionRowController _sync] (5 samples, 0.01%)</title><rect x="0.0582%" y="421" width="0.0146%" height="15" fill="rgb(228,23,34)" fg:x="20" fg:w="5"/><text x="0.3082%" y="431.50"></text></g><g><title>AppKit`-[NSApplicationFunctionRowController _setup] (5 samples, 0.01%)</title><rect x="0.0582%" y="405" width="0.0146%" height="15" fill="rgb(218,30,26)" fg:x="20" fg:w="5"/><text x="0.3082%" y="415.50"></text></g><g><title>conway`conway::ConwayGrid::update (14 samples, 0.04%)</title><rect x="0.1252%" y="133" width="0.0408%" height="15" fill="rgb(220,122,19)" fg:x="43" fg:w="14"/><text x="0.3752%" y="143.50"></text></g><g><title>conway`wgpu::Queue::write_texture (4 samples, 0.01%)</title><rect x="0.1718%" y="117" width="0.0116%" height="15" fill="rgb(250,228,42)" fg:x="59" fg:w="4"/><text x="0.4218%" y="127.50"></text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (4 samples, 0.01%)</title><rect x="0.1718%" y="101" width="0.0116%" height="15" fill="rgb(240,193,28)" fg:x="59" fg:w="4"/><text x="0.4218%" y="111.50"></text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (4 samples, 0.01%)</title><rect x="0.1718%" y="85" width="0.0116%" height="15" fill="rgb(216,20,37)" fg:x="59" fg:w="4"/><text x="0.4218%" y="95.50"></text></g><g><title>conway`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (4 samples, 0.01%)</title><rect x="0.1718%" y="69" width="0.0116%" height="15" fill="rgb(206,188,39)" fg:x="59" fg:w="4"/><text x="0.4218%" y="79.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (26 samples, 0.08%)</title><rect x="0.1106%" y="261" width="0.0757%" height="15" fill="rgb(217,207,13)" fg:x="38" fg:w="26"/><text x="0.3606%" y="271.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (26 samples, 0.08%)</title><rect x="0.1106%" y="245" width="0.0757%" height="15" fill="rgb(231,73,38)" fg:x="38" fg:w="26"/><text x="0.3606%" y="255.50"></text></g><g><title>conway`winit::platform_impl::platform::observer::control_flow_end_handler (25 samples, 0.07%)</title><rect x="0.1136%" y="229" width="0.0728%" height="15" fill="rgb(225,20,46)" fg:x="39" fg:w="25"/><text x="0.3636%" y="239.50"></text></g><g><title>conway`std::panicking::try (25 samples, 0.07%)</title><rect x="0.1136%" y="213" width="0.0728%" height="15" fill="rgb(210,31,41)" fg:x="39" fg:w="25"/><text x="0.3636%" y="223.50"></text></g><g><title>conway`winit::platform_impl::platform::app_state::AppState::cleared (25 samples, 0.07%)</title><rect x="0.1136%" y="197" width="0.0728%" height="15" fill="rgb(221,200,47)" fg:x="39" fg:w="25"/><text x="0.3636%" y="207.50"></text></g><g><title>conway`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (25 samples, 0.07%)</title><rect x="0.1136%" y="181" width="0.0728%" height="15" fill="rgb(226,26,5)" fg:x="39" fg:w="25"/><text x="0.3636%" y="191.50"></text></g><g><title>conway`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (25 samples, 0.07%)</title><rect x="0.1136%" y="165" width="0.0728%" height="15" fill="rgb(249,33,26)" fg:x="39" fg:w="25"/><text x="0.3636%" y="175.50"></text></g><g><title>conway`conway::main::_{{closure}} (25 samples, 0.07%)</title><rect x="0.1136%" y="149" width="0.0728%" height="15" fill="rgb(235,183,28)" fg:x="39" fg:w="25"/><text x="0.3636%" y="159.50"></text></g><g><title>conway`pixels::Pixels::render (7 samples, 0.02%)</title><rect x="0.1660%" y="133" width="0.0204%" height="15" fill="rgb(221,5,38)" fg:x="57" fg:w="7"/><text x="0.4160%" y="143.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (31 samples, 0.09%)</title><rect x="0.1048%" y="389" width="0.0903%" height="15" fill="rgb(247,18,42)" fg:x="36" fg:w="31"/><text x="0.3548%" y="399.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (31 samples, 0.09%)</title><rect x="0.1048%" y="373" width="0.0903%" height="15" fill="rgb(241,131,45)" fg:x="36" fg:w="31"/><text x="0.3548%" y="383.50"></text></g><g><title>AppKit`_DPSNextEvent (31 samples, 0.09%)</title><rect x="0.1048%" y="357" width="0.0903%" height="15" fill="rgb(249,31,29)" fg:x="36" fg:w="31"/><text x="0.3548%" y="367.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (31 samples, 0.09%)</title><rect x="0.1048%" y="341" width="0.0903%" height="15" fill="rgb(225,111,53)" fg:x="36" fg:w="31"/><text x="0.3548%" y="351.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (31 samples, 0.09%)</title><rect x="0.1048%" y="325" width="0.0903%" height="15" fill="rgb(238,160,17)" fg:x="36" fg:w="31"/><text x="0.3548%" y="335.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (31 samples, 0.09%)</title><rect x="0.1048%" y="309" width="0.0903%" height="15" fill="rgb(214,148,48)" fg:x="36" fg:w="31"/><text x="0.3548%" y="319.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (31 samples, 0.09%)</title><rect x="0.1048%" y="293" width="0.0903%" height="15" fill="rgb(232,36,49)" fg:x="36" fg:w="31"/><text x="0.3548%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (31 samples, 0.09%)</title><rect x="0.1048%" y="277" width="0.0903%" height="15" fill="rgb(209,103,24)" fg:x="36" fg:w="31"/><text x="0.3548%" y="287.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (33 samples, 0.10%)</title><rect x="0.1019%" y="485" width="0.0961%" height="15" fill="rgb(229,88,8)" fg:x="35" fg:w="33"/><text x="0.3519%" y="495.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (33 samples, 0.10%)</title><rect x="0.1019%" y="469" width="0.0961%" height="15" fill="rgb(213,181,19)" fg:x="35" fg:w="33"/><text x="0.3519%" y="479.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (33 samples, 0.10%)</title><rect x="0.1019%" y="453" width="0.0961%" height="15" fill="rgb(254,191,54)" fg:x="35" fg:w="33"/><text x="0.3519%" y="463.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (33 samples, 0.10%)</title><rect x="0.1019%" y="437" width="0.0961%" height="15" fill="rgb(241,83,37)" fg:x="35" fg:w="33"/><text x="0.3519%" y="447.50"></text></g><g><title>AppKit`NSControlTrackMouse (33 samples, 0.10%)</title><rect x="0.1019%" y="421" width="0.0961%" height="15" fill="rgb(233,36,39)" fg:x="35" fg:w="33"/><text x="0.3519%" y="431.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (33 samples, 0.10%)</title><rect x="0.1019%" y="405" width="0.0961%" height="15" fill="rgb(226,3,54)" fg:x="35" fg:w="33"/><text x="0.3519%" y="415.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:] (6 samples, 0.02%)</title><rect x="0.2009%" y="469" width="0.0175%" height="15" fill="rgb(245,192,40)" fg:x="69" fg:w="6"/><text x="0.4509%" y="479.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager mouseMoved:] (9 samples, 0.03%)</title><rect x="0.1980%" y="485" width="0.0262%" height="15" fill="rgb(238,167,29)" fg:x="68" fg:w="9"/><text x="0.4480%" y="495.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (48 samples, 0.14%)</title><rect x="0.0990%" y="501" width="0.1398%" height="15" fill="rgb(232,182,51)" fg:x="34" fg:w="48"/><text x="0.3490%" y="511.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (64 samples, 0.19%)</title><rect x="0.0553%" y="533" width="0.1864%" height="15" fill="rgb(231,60,39)" fg:x="19" fg:w="64"/><text x="0.3053%" y="543.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (49 samples, 0.14%)</title><rect x="0.0990%" y="517" width="0.1427%" height="15" fill="rgb(208,69,12)" fg:x="34" fg:w="49"/><text x="0.3490%" y="527.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (68 samples, 0.20%)</title><rect x="0.0495%" y="565" width="0.1980%" height="15" fill="rgb(235,93,37)" fg:x="17" fg:w="68"/><text x="0.2995%" y="575.50"></text></g><g><title>conway`winit::platform_impl::platform::app::send_event (66 samples, 0.19%)</title><rect x="0.0553%" y="549" width="0.1922%" height="15" fill="rgb(213,116,39)" fg:x="19" fg:w="66"/><text x="0.3053%" y="559.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (6 samples, 0.02%)</title><rect x="0.2592%" y="549" width="0.0175%" height="15" fill="rgb(222,207,29)" fg:x="89" fg:w="6"/><text x="0.5092%" y="559.50"></text></g><g><title>HIToolbox`SendEventToEventTarget (6 samples, 0.02%)</title><rect x="0.2592%" y="533" width="0.0175%" height="15" fill="rgb(206,96,30)" fg:x="89" fg:w="6"/><text x="0.5092%" y="543.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (6 samples, 0.02%)</title><rect x="0.2592%" y="517" width="0.0175%" height="15" fill="rgb(218,138,4)" fg:x="89" fg:w="6"/><text x="0.5092%" y="527.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (6 samples, 0.02%)</title><rect x="0.2592%" y="501" width="0.0175%" height="15" fill="rgb(250,191,14)" fg:x="89" fg:w="6"/><text x="0.5092%" y="511.50"></text></g><g><title>HIToolbox`ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (6 samples, 0.02%)</title><rect x="0.2592%" y="485" width="0.0175%" height="15" fill="rgb(239,60,40)" fg:x="89" fg:w="6"/><text x="0.5092%" y="495.50"></text></g><g><title>HIToolbox`FindWindowAndPartFromMouseEvent (6 samples, 0.02%)</title><rect x="0.2592%" y="469" width="0.0175%" height="15" fill="rgb(206,27,48)" fg:x="89" fg:w="6"/><text x="0.5092%" y="479.50"></text></g><g><title>HIToolbox`FindWindow (6 samples, 0.02%)</title><rect x="0.2592%" y="453" width="0.0175%" height="15" fill="rgb(225,35,8)" fg:x="89" fg:w="6"/><text x="0.5092%" y="463.50"></text></g><g><title>HIToolbox`FindWindowOfClass (6 samples, 0.02%)</title><rect x="0.2592%" y="437" width="0.0175%" height="15" fill="rgb(250,213,24)" fg:x="89" fg:w="6"/><text x="0.5092%" y="447.50"></text></g><g><title>HIToolbox`FindWindowCommon(Point, OpaqueWindowPtr**, short*) (6 samples, 0.02%)</title><rect x="0.2592%" y="421" width="0.0175%" height="15" fill="rgb(247,123,22)" fg:x="89" fg:w="6"/><text x="0.5092%" y="431.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (7 samples, 0.02%)</title><rect x="0.2766%" y="533" width="0.0204%" height="15" fill="rgb(231,138,38)" fg:x="95" fg:w="7"/><text x="0.5266%" y="543.50"></text></g><g><title>AE`aeProcessAppleEvent (7 samples, 0.02%)</title><rect x="0.2766%" y="517" width="0.0204%" height="15" fill="rgb(231,145,46)" fg:x="95" fg:w="7"/><text x="0.5266%" y="527.50"></text></g><g><title>AE`0x00007ff815d785e6 (7 samples, 0.02%)</title><rect x="0.2766%" y="501" width="0.0204%" height="15" fill="rgb(251,118,11)" fg:x="95" fg:w="7"/><text x="0.5266%" y="511.50"></text></g><g><title>AE`0x00007ff815d78665 (7 samples, 0.02%)</title><rect x="0.2766%" y="485" width="0.0204%" height="15" fill="rgb(217,147,25)" fg:x="95" fg:w="7"/><text x="0.5266%" y="495.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (7 samples, 0.02%)</title><rect x="0.2766%" y="469" width="0.0204%" height="15" fill="rgb(247,81,37)" fg:x="95" fg:w="7"/><text x="0.5266%" y="479.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (7 samples, 0.02%)</title><rect x="0.2766%" y="453" width="0.0204%" height="15" fill="rgb(209,12,38)" fg:x="95" fg:w="7"/><text x="0.5266%" y="463.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (7 samples, 0.02%)</title><rect x="0.2766%" y="437" width="0.0204%" height="15" fill="rgb(227,1,9)" fg:x="95" fg:w="7"/><text x="0.5266%" y="447.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (7 samples, 0.02%)</title><rect x="0.2766%" y="421" width="0.0204%" height="15" fill="rgb(248,47,43)" fg:x="95" fg:w="7"/><text x="0.5266%" y="431.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (6 samples, 0.02%)</title><rect x="0.2795%" y="405" width="0.0175%" height="15" fill="rgb(221,10,30)" fg:x="96" fg:w="6"/><text x="0.5295%" y="415.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (6 samples, 0.02%)</title><rect x="0.2795%" y="389" width="0.0175%" height="15" fill="rgb(210,229,1)" fg:x="96" fg:w="6"/><text x="0.5295%" y="399.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (6 samples, 0.02%)</title><rect x="0.2795%" y="373" width="0.0175%" height="15" fill="rgb(222,148,37)" fg:x="96" fg:w="6"/><text x="0.5295%" y="383.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (6 samples, 0.02%)</title><rect x="0.2795%" y="357" width="0.0175%" height="15" fill="rgb(234,67,33)" fg:x="96" fg:w="6"/><text x="0.5295%" y="367.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (6 samples, 0.02%)</title><rect x="0.2795%" y="341" width="0.0175%" height="15" fill="rgb(247,98,35)" fg:x="96" fg:w="6"/><text x="0.5295%" y="351.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (6 samples, 0.02%)</title><rect x="0.2795%" y="325" width="0.0175%" height="15" fill="rgb(247,138,52)" fg:x="96" fg:w="6"/><text x="0.5295%" y="335.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (6 samples, 0.02%)</title><rect x="0.2795%" y="309" width="0.0175%" height="15" fill="rgb(213,79,30)" fg:x="96" fg:w="6"/><text x="0.5295%" y="319.50"></text></g><g><title>conway`winit::platform_impl::platform::app_state::AppState::launched (6 samples, 0.02%)</title><rect x="0.2795%" y="293" width="0.0175%" height="15" fill="rgb(246,177,23)" fg:x="96" fg:w="6"/><text x="0.5295%" y="303.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (5 samples, 0.01%)</title><rect x="0.2824%" y="277" width="0.0146%" height="15" fill="rgb(230,62,27)" fg:x="97" fg:w="5"/><text x="0.5324%" y="287.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (4 samples, 0.01%)</title><rect x="0.3203%" y="117" width="0.0116%" height="15" fill="rgb(216,154,8)" fg:x="110" fg:w="4"/><text x="0.5703%" y="127.50"></text></g><g><title>HIToolbox`MBDisplays::ForEachActiveDisplayDo(unsigned char, bool  (9 samples, 0.03%)</title><rect x="0.3145%" y="373" width="0.0262%" height="15" fill="rgb(244,35,45)" fg:x="108" fg:w="9"/><text x="0.5645%" y="383.50"></text></g><g><title>HIToolbox`invocation function for block in MenuBarInstance::ForEachWindowDo(unsigned char, bool  (9 samples, 0.03%)</title><rect x="0.3145%" y="357" width="0.0262%" height="15" fill="rgb(251,115,12)" fg:x="108" fg:w="9"/><text x="0.5645%" y="367.50"></text></g><g><title>HIToolbox`MBWindows::CreateWindowForDisplay (9 samples, 0.03%)</title><rect x="0.3145%" y="341" width="0.0262%" height="15" fill="rgb(240,54,50)" fg:x="108" fg:w="9"/><text x="0.5645%" y="351.50"></text></g><g><title>HIToolbox`ShowHide (7 samples, 0.02%)</title><rect x="0.3203%" y="325" width="0.0204%" height="15" fill="rgb(233,84,52)" fg:x="110" fg:w="7"/><text x="0.5703%" y="335.50"></text></g><g><title>HIToolbox`_ShowHideWindows (7 samples, 0.02%)</title><rect x="0.3203%" y="309" width="0.0204%" height="15" fill="rgb(207,117,47)" fg:x="110" fg:w="7"/><text x="0.5703%" y="319.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (7 samples, 0.02%)</title><rect x="0.3203%" y="293" width="0.0204%" height="15" fill="rgb(249,43,39)" fg:x="110" fg:w="7"/><text x="0.5703%" y="303.50"></text></g><g><title>HIToolbox`HIView::Render (7 samples, 0.02%)</title><rect x="0.3203%" y="277" width="0.0204%" height="15" fill="rgb(209,38,44)" fg:x="110" fg:w="7"/><text x="0.5703%" y="287.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (7 samples, 0.02%)</title><rect x="0.3203%" y="261" width="0.0204%" height="15" fill="rgb(236,212,23)" fg:x="110" fg:w="7"/><text x="0.5703%" y="271.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (7 samples, 0.02%)</title><rect x="0.3203%" y="245" width="0.0204%" height="15" fill="rgb(242,79,21)" fg:x="110" fg:w="7"/><text x="0.5703%" y="255.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (7 samples, 0.02%)</title><rect x="0.3203%" y="229" width="0.0204%" height="15" fill="rgb(211,96,35)" fg:x="110" fg:w="7"/><text x="0.5703%" y="239.50"></text></g><g><title>HIToolbox`HIView::SendDraw (7 samples, 0.02%)</title><rect x="0.3203%" y="213" width="0.0204%" height="15" fill="rgb(253,215,40)" fg:x="110" fg:w="7"/><text x="0.5703%" y="223.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (7 samples, 0.02%)</title><rect x="0.3203%" y="197" width="0.0204%" height="15" fill="rgb(211,81,21)" fg:x="110" fg:w="7"/><text x="0.5703%" y="207.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (7 samples, 0.02%)</title><rect x="0.3203%" y="181" width="0.0204%" height="15" fill="rgb(208,190,38)" fg:x="110" fg:w="7"/><text x="0.5703%" y="191.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (7 samples, 0.02%)</title><rect x="0.3203%" y="165" width="0.0204%" height="15" fill="rgb(235,213,38)" fg:x="110" fg:w="7"/><text x="0.5703%" y="175.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (7 samples, 0.02%)</title><rect x="0.3203%" y="149" width="0.0204%" height="15" fill="rgb(237,122,38)" fg:x="110" fg:w="7"/><text x="0.5703%" y="159.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (7 samples, 0.02%)</title><rect x="0.3203%" y="133" width="0.0204%" height="15" fill="rgb(244,218,35)" fg:x="110" fg:w="7"/><text x="0.5703%" y="143.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (4 samples, 0.01%)</title><rect x="0.3465%" y="133" width="0.0116%" height="15" fill="rgb(240,68,47)" fg:x="119" fg:w="4"/><text x="0.5965%" y="143.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (6 samples, 0.02%)</title><rect x="0.3436%" y="149" width="0.0175%" height="15" fill="rgb(210,16,53)" fg:x="118" fg:w="6"/><text x="0.5936%" y="159.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (19 samples, 0.06%)</title><rect x="0.3087%" y="501" width="0.0553%" height="15" fill="rgb(235,124,12)" fg:x="106" fg:w="19"/><text x="0.5587%" y="511.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (17 samples, 0.05%)</title><rect x="0.3145%" y="485" width="0.0495%" height="15" fill="rgb(224,169,11)" fg:x="108" fg:w="17"/><text x="0.5645%" y="495.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (17 samples, 0.05%)</title><rect x="0.3145%" y="469" width="0.0495%" height="15" fill="rgb(250,166,2)" fg:x="108" fg:w="17"/><text x="0.5645%" y="479.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (17 samples, 0.05%)</title><rect x="0.3145%" y="453" width="0.0495%" height="15" fill="rgb(242,216,29)" fg:x="108" fg:w="17"/><text x="0.5645%" y="463.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (17 samples, 0.05%)</title><rect x="0.3145%" y="437" width="0.0495%" height="15" fill="rgb(230,116,27)" fg:x="108" fg:w="17"/><text x="0.5645%" y="447.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (17 samples, 0.05%)</title><rect x="0.3145%" y="421" width="0.0495%" height="15" fill="rgb(228,99,48)" fg:x="108" fg:w="17"/><text x="0.5645%" y="431.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (17 samples, 0.05%)</title><rect x="0.3145%" y="405" width="0.0495%" height="15" fill="rgb(253,11,6)" fg:x="108" fg:w="17"/><text x="0.5645%" y="415.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (17 samples, 0.05%)</title><rect x="0.3145%" y="389" width="0.0495%" height="15" fill="rgb(247,143,39)" fg:x="108" fg:w="17"/><text x="0.5645%" y="399.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (8 samples, 0.02%)</title><rect x="0.3407%" y="373" width="0.0233%" height="15" fill="rgb(236,97,10)" fg:x="117" fg:w="8"/><text x="0.5907%" y="383.50"></text></g><g><title>HIToolbox`ShowHide (7 samples, 0.02%)</title><rect x="0.3436%" y="357" width="0.0204%" height="15" fill="rgb(233,208,19)" fg:x="118" fg:w="7"/><text x="0.5936%" y="367.50"></text></g><g><title>HIToolbox`_ShowHideWindows (7 samples, 0.02%)</title><rect x="0.3436%" y="341" width="0.0204%" height="15" fill="rgb(216,164,2)" fg:x="118" fg:w="7"/><text x="0.5936%" y="351.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (7 samples, 0.02%)</title><rect x="0.3436%" y="325" width="0.0204%" height="15" fill="rgb(220,129,5)" fg:x="118" fg:w="7"/><text x="0.5936%" y="335.50"></text></g><g><title>HIToolbox`HIView::Render (7 samples, 0.02%)</title><rect x="0.3436%" y="309" width="0.0204%" height="15" fill="rgb(242,17,10)" fg:x="118" fg:w="7"/><text x="0.5936%" y="319.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (7 samples, 0.02%)</title><rect x="0.3436%" y="293" width="0.0204%" height="15" fill="rgb(242,107,0)" fg:x="118" fg:w="7"/><text x="0.5936%" y="303.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (7 samples, 0.02%)</title><rect x="0.3436%" y="277" width="0.0204%" height="15" fill="rgb(251,28,31)" fg:x="118" fg:w="7"/><text x="0.5936%" y="287.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (7 samples, 0.02%)</title><rect x="0.3436%" y="261" width="0.0204%" height="15" fill="rgb(233,223,10)" fg:x="118" fg:w="7"/><text x="0.5936%" y="271.50"></text></g><g><title>HIToolbox`HIView::SendDraw (7 samples, 0.02%)</title><rect x="0.3436%" y="245" width="0.0204%" height="15" fill="rgb(215,21,27)" fg:x="118" fg:w="7"/><text x="0.5936%" y="255.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (7 samples, 0.02%)</title><rect x="0.3436%" y="229" width="0.0204%" height="15" fill="rgb(232,23,21)" fg:x="118" fg:w="7"/><text x="0.5936%" y="239.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (7 samples, 0.02%)</title><rect x="0.3436%" y="213" width="0.0204%" height="15" fill="rgb(244,5,23)" fg:x="118" fg:w="7"/><text x="0.5936%" y="223.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (7 samples, 0.02%)</title><rect x="0.3436%" y="197" width="0.0204%" height="15" fill="rgb(226,81,46)" fg:x="118" fg:w="7"/><text x="0.5936%" y="207.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (7 samples, 0.02%)</title><rect x="0.3436%" y="181" width="0.0204%" height="15" fill="rgb(247,70,30)" fg:x="118" fg:w="7"/><text x="0.5936%" y="191.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (7 samples, 0.02%)</title><rect x="0.3436%" y="165" width="0.0204%" height="15" fill="rgb(212,68,19)" fg:x="118" fg:w="7"/><text x="0.5936%" y="175.50"></text></g><g><title>CoreGraphics`CGContextClearRect (4 samples, 0.01%)</title><rect x="0.3873%" y="213" width="0.0116%" height="15" fill="rgb(240,187,13)" fg:x="133" fg:w="4"/><text x="0.6373%" y="223.50"></text></g><g><title>CoreGraphics`CGContextFillRect (4 samples, 0.01%)</title><rect x="0.3873%" y="197" width="0.0116%" height="15" fill="rgb(223,113,26)" fg:x="133" fg:w="4"/><text x="0.6373%" y="207.50"></text></g><g><title>CoreGraphics`CGContextFillRects (4 samples, 0.01%)</title><rect x="0.3873%" y="181" width="0.0116%" height="15" fill="rgb(206,192,2)" fg:x="133" fg:w="4"/><text x="0.6373%" y="191.50"></text></g><g><title>CoreGraphics`ripc_DrawRects (4 samples, 0.01%)</title><rect x="0.3873%" y="165" width="0.0116%" height="15" fill="rgb(241,108,4)" fg:x="133" fg:w="4"/><text x="0.6373%" y="175.50"></text></g><g><title>CoreGraphics`ripc_Render (4 samples, 0.01%)</title><rect x="0.3873%" y="149" width="0.0116%" height="15" fill="rgb(247,173,49)" fg:x="133" fg:w="4"/><text x="0.6373%" y="159.50"></text></g><g><title>CoreGraphics`RIPLayerBltShape (4 samples, 0.01%)</title><rect x="0.3873%" y="133" width="0.0116%" height="15" fill="rgb(224,114,35)" fg:x="133" fg:w="4"/><text x="0.6373%" y="143.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (5 samples, 0.01%)</title><rect x="0.3873%" y="229" width="0.0146%" height="15" fill="rgb(245,159,27)" fg:x="133" fg:w="5"/><text x="0.6373%" y="239.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (6 samples, 0.02%)</title><rect x="0.3873%" y="245" width="0.0175%" height="15" fill="rgb(245,172,44)" fg:x="133" fg:w="6"/><text x="0.6373%" y="255.50"></text></g><g><title>HIToolbox`HIView::Render (7 samples, 0.02%)</title><rect x="0.3873%" y="405" width="0.0204%" height="15" fill="rgb(236,23,11)" fg:x="133" fg:w="7"/><text x="0.6373%" y="415.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (7 samples, 0.02%)</title><rect x="0.3873%" y="389" width="0.0204%" height="15" fill="rgb(205,117,38)" fg:x="133" fg:w="7"/><text x="0.6373%" y="399.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (7 samples, 0.02%)</title><rect x="0.3873%" y="373" width="0.0204%" height="15" fill="rgb(237,72,25)" fg:x="133" fg:w="7"/><text x="0.6373%" y="383.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (7 samples, 0.02%)</title><rect x="0.3873%" y="357" width="0.0204%" height="15" fill="rgb(244,70,9)" fg:x="133" fg:w="7"/><text x="0.6373%" y="367.50"></text></g><g><title>HIToolbox`HIView::SendDraw (7 samples, 0.02%)</title><rect x="0.3873%" y="341" width="0.0204%" height="15" fill="rgb(217,125,39)" fg:x="133" fg:w="7"/><text x="0.6373%" y="351.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (7 samples, 0.02%)</title><rect x="0.3873%" y="325" width="0.0204%" height="15" fill="rgb(235,36,10)" fg:x="133" fg:w="7"/><text x="0.6373%" y="335.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (7 samples, 0.02%)</title><rect x="0.3873%" y="309" width="0.0204%" height="15" fill="rgb(251,123,47)" fg:x="133" fg:w="7"/><text x="0.6373%" y="319.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (7 samples, 0.02%)</title><rect x="0.3873%" y="293" width="0.0204%" height="15" fill="rgb(221,13,13)" fg:x="133" fg:w="7"/><text x="0.6373%" y="303.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (7 samples, 0.02%)</title><rect x="0.3873%" y="277" width="0.0204%" height="15" fill="rgb(238,131,9)" fg:x="133" fg:w="7"/><text x="0.6373%" y="287.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (7 samples, 0.02%)</title><rect x="0.3873%" y="261" width="0.0204%" height="15" fill="rgb(211,50,8)" fg:x="133" fg:w="7"/><text x="0.6373%" y="271.50"></text></g><g><title>HIToolbox`FlushAllBuffers(__CFRunLoopObserver*, unsigned long, void*) (8 samples, 0.02%)</title><rect x="0.3873%" y="437" width="0.0233%" height="15" fill="rgb(245,182,24)" fg:x="133" fg:w="8"/><text x="0.6373%" y="447.50"></text></g><g><title>HIToolbox`FlushWindowObject(WindowData*, void**, unsigned char) (8 samples, 0.02%)</title><rect x="0.3873%" y="421" width="0.0233%" height="15" fill="rgb(242,14,37)" fg:x="133" fg:w="8"/><text x="0.6373%" y="431.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (8 samples, 0.02%)</title><rect x="0.4251%" y="389" width="0.0233%" height="15" fill="rgb(246,228,12)" fg:x="146" fg:w="8"/><text x="0.6751%" y="399.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (8 samples, 0.02%)</title><rect x="0.4251%" y="373" width="0.0233%" height="15" fill="rgb(213,55,15)" fg:x="146" fg:w="8"/><text x="0.6751%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (8 samples, 0.02%)</title><rect x="0.4251%" y="357" width="0.0233%" height="15" fill="rgb(209,9,3)" fg:x="146" fg:w="8"/><text x="0.6751%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (8 samples, 0.02%)</title><rect x="0.4251%" y="341" width="0.0233%" height="15" fill="rgb(230,59,30)" fg:x="146" fg:w="8"/><text x="0.6751%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.02%)</title><rect x="0.4251%" y="325" width="0.0233%" height="15" fill="rgb(209,121,21)" fg:x="146" fg:w="8"/><text x="0.6751%" y="335.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (15 samples, 0.04%)</title><rect x="0.4135%" y="405" width="0.0437%" height="15" fill="rgb(220,109,13)" fg:x="142" fg:w="15"/><text x="0.6635%" y="415.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (20 samples, 0.06%)</title><rect x="0.4106%" y="437" width="0.0582%" height="15" fill="rgb(232,18,1)" fg:x="141" fg:w="20"/><text x="0.6606%" y="447.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (20 samples, 0.06%)</title><rect x="0.4106%" y="421" width="0.0582%" height="15" fill="rgb(215,41,42)" fg:x="141" fg:w="20"/><text x="0.6606%" y="431.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (29 samples, 0.08%)</title><rect x="0.3873%" y="453" width="0.0844%" height="15" fill="rgb(224,123,36)" fg:x="133" fg:w="29"/><text x="0.6373%" y="463.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (33 samples, 0.10%)</title><rect x="0.3814%" y="469" width="0.0961%" height="15" fill="rgb(240,125,3)" fg:x="131" fg:w="33"/><text x="0.6314%" y="479.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (12 samples, 0.03%)</title><rect x="0.5125%" y="453" width="0.0349%" height="15" fill="rgb(205,98,50)" fg:x="176" fg:w="12"/><text x="0.7625%" y="463.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (5 samples, 0.01%)</title><rect x="0.5474%" y="453" width="0.0146%" height="15" fill="rgb(205,185,37)" fg:x="188" fg:w="5"/><text x="0.7974%" y="463.50"></text></g><g><title>CoreFoundation`CFSetGetCount (5 samples, 0.01%)</title><rect x="0.5707%" y="453" width="0.0146%" height="15" fill="rgb(238,207,15)" fg:x="196" fg:w="5"/><text x="0.8207%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_runloop_queue_poke (4 samples, 0.01%)</title><rect x="0.5940%" y="405" width="0.0116%" height="15" fill="rgb(213,199,42)" fg:x="204" fg:w="4"/><text x="0.8440%" y="415.50"></text></g><g><title>libapp_launch_measurement.dylib`__alm_execute_when_main_queue_idle_with_condition_block_invoke (7 samples, 0.02%)</title><rect x="0.6057%" y="357" width="0.0204%" height="15" fill="rgb(235,201,11)" fg:x="208" fg:w="7"/><text x="0.8557%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (9 samples, 0.03%)</title><rect x="0.6057%" y="389" width="0.0262%" height="15" fill="rgb(207,46,11)" fg:x="208" fg:w="9"/><text x="0.8557%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (9 samples, 0.03%)</title><rect x="0.6057%" y="373" width="0.0262%" height="15" fill="rgb(241,35,35)" fg:x="208" fg:w="9"/><text x="0.8557%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_runloop_queue_poke (4 samples, 0.01%)</title><rect x="0.6319%" y="389" width="0.0116%" height="15" fill="rgb(243,32,47)" fg:x="217" fg:w="4"/><text x="0.8819%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (14 samples, 0.04%)</title><rect x="0.6057%" y="405" width="0.0408%" height="15" fill="rgb(247,202,23)" fg:x="208" fg:w="14"/><text x="0.8557%" y="415.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (22 samples, 0.06%)</title><rect x="0.5882%" y="453" width="0.0641%" height="15" fill="rgb(219,102,11)" fg:x="202" fg:w="22"/><text x="0.8382%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (22 samples, 0.06%)</title><rect x="0.5882%" y="437" width="0.0641%" height="15" fill="rgb(243,110,44)" fg:x="202" fg:w="22"/><text x="0.8382%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (22 samples, 0.06%)</title><rect x="0.5882%" y="421" width="0.0641%" height="15" fill="rgb(222,74,54)" fg:x="202" fg:w="22"/><text x="0.8382%" y="431.50"></text></g><g><title>AppKit`__35-[_NSMenuShortcutUpdater schedule:]_block_invoke (5 samples, 0.01%)</title><rect x="0.6522%" y="421" width="0.0146%" height="15" fill="rgb(216,99,12)" fg:x="224" fg:w="5"/><text x="0.9022%" y="431.50"></text></g><g><title>AppKit`UpdateKeyboardAwareShortcutsForCurrentInputSource (5 samples, 0.01%)</title><rect x="0.6522%" y="405" width="0.0146%" height="15" fill="rgb(226,22,26)" fg:x="224" fg:w="5"/><text x="0.9022%" y="415.50"></text></g><g><title>AppKit`___NSMainRunLoopPerformBlockInModes_block_invoke (4 samples, 0.01%)</title><rect x="0.6668%" y="421" width="0.0116%" height="15" fill="rgb(217,163,10)" fg:x="229" fg:w="4"/><text x="0.9168%" y="431.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (18 samples, 0.05%)</title><rect x="0.6522%" y="437" width="0.0524%" height="15" fill="rgb(213,25,53)" fg:x="224" fg:w="18"/><text x="0.9022%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (19 samples, 0.06%)</title><rect x="0.6522%" y="453" width="0.0553%" height="15" fill="rgb(252,105,26)" fg:x="224" fg:w="19"/><text x="0.9022%" y="463.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (4 samples, 0.01%)</title><rect x="0.7454%" y="437" width="0.0116%" height="15" fill="rgb(220,39,43)" fg:x="256" fg:w="4"/><text x="0.9954%" y="447.50"></text></g><g><title>CoreFoundation`CFRelease (5 samples, 0.01%)</title><rect x="0.7571%" y="437" width="0.0146%" height="15" fill="rgb(229,68,48)" fg:x="260" fg:w="5"/><text x="1.0071%" y="447.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPush (4 samples, 0.01%)</title><rect x="0.7745%" y="437" width="0.0116%" height="15" fill="rgb(252,8,32)" fg:x="266" fg:w="4"/><text x="1.0245%" y="447.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (4 samples, 0.01%)</title><rect x="0.7745%" y="421" width="0.0116%" height="15" fill="rgb(223,20,43)" fg:x="266" fg:w="4"/><text x="1.0245%" y="431.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (11 samples, 0.03%)</title><rect x="0.7949%" y="357" width="0.0320%" height="15" fill="rgb(229,81,49)" fg:x="273" fg:w="11"/><text x="1.0449%" y="367.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (11 samples, 0.03%)</title><rect x="0.7949%" y="341" width="0.0320%" height="15" fill="rgb(236,28,36)" fg:x="273" fg:w="11"/><text x="1.0449%" y="351.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (12 samples, 0.03%)</title><rect x="0.7949%" y="373" width="0.0349%" height="15" fill="rgb(249,185,26)" fg:x="273" fg:w="12"/><text x="1.0449%" y="383.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (15 samples, 0.04%)</title><rect x="0.7949%" y="389" width="0.0437%" height="15" fill="rgb(249,174,33)" fg:x="273" fg:w="15"/><text x="1.0449%" y="399.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (17 samples, 0.05%)</title><rect x="0.7920%" y="405" width="0.0495%" height="15" fill="rgb(233,201,37)" fg:x="272" fg:w="17"/><text x="1.0420%" y="415.50"></text></g><g><title>AppKit`-[NSTextLayer display] (4 samples, 0.01%)</title><rect x="0.8532%" y="341" width="0.0116%" height="15" fill="rgb(221,78,26)" fg:x="293" fg:w="4"/><text x="1.1032%" y="351.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.01%)</title><rect x="0.8532%" y="325" width="0.0116%" height="15" fill="rgb(250,127,30)" fg:x="293" fg:w="4"/><text x="1.1032%" y="335.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke (4 samples, 0.01%)</title><rect x="0.8532%" y="309" width="0.0116%" height="15" fill="rgb(230,49,44)" fg:x="293" fg:w="4"/><text x="1.1032%" y="319.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.01%)</title><rect x="0.8532%" y="293" width="0.0116%" height="15" fill="rgb(229,67,23)" fg:x="293" fg:w="4"/><text x="1.1032%" y="303.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke_2 (4 samples, 0.01%)</title><rect x="0.8532%" y="277" width="0.0116%" height="15" fill="rgb(249,83,47)" fg:x="293" fg:w="4"/><text x="1.1032%" y="287.50"></text></g><g><title>QuartzCore`-[CALayer _display] (4 samples, 0.01%)</title><rect x="0.8532%" y="261" width="0.0116%" height="15" fill="rgb(215,43,3)" fg:x="293" fg:w="4"/><text x="1.1032%" y="271.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Layer::display_ (4 samples, 0.01%)</title><rect x="0.8532%" y="245" width="0.0116%" height="15" fill="rgb(238,154,13)" fg:x="293" fg:w="4"/><text x="1.1032%" y="255.50"></text></g><g><title>QuartzCore`CABackingStoreUpdate_ (4 samples, 0.01%)</title><rect x="0.8532%" y="229" width="0.0116%" height="15" fill="rgb(219,56,2)" fg:x="293" fg:w="4"/><text x="1.1032%" y="239.50"></text></g><g><title>AppKit`-[NSControl updateLayer] (4 samples, 0.01%)</title><rect x="0.8677%" y="261" width="0.0116%" height="15" fill="rgb(233,0,4)" fg:x="298" fg:w="4"/><text x="1.1177%" y="271.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (4 samples, 0.01%)</title><rect x="0.8677%" y="245" width="0.0116%" height="15" fill="rgb(235,30,7)" fg:x="298" fg:w="4"/><text x="1.1177%" y="255.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (4 samples, 0.01%)</title><rect x="0.8677%" y="229" width="0.0116%" height="15" fill="rgb(250,79,13)" fg:x="298" fg:w="4"/><text x="1.1177%" y="239.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (10 samples, 0.03%)</title><rect x="0.8532%" y="357" width="0.0291%" height="15" fill="rgb(211,146,34)" fg:x="293" fg:w="10"/><text x="1.1032%" y="367.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (5 samples, 0.01%)</title><rect x="0.8677%" y="341" width="0.0146%" height="15" fill="rgb(228,22,38)" fg:x="298" fg:w="5"/><text x="1.1177%" y="351.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (5 samples, 0.01%)</title><rect x="0.8677%" y="325" width="0.0146%" height="15" fill="rgb(235,168,5)" fg:x="298" fg:w="5"/><text x="1.1177%" y="335.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (5 samples, 0.01%)</title><rect x="0.8677%" y="309" width="0.0146%" height="15" fill="rgb(221,155,16)" fg:x="298" fg:w="5"/><text x="1.1177%" y="319.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (5 samples, 0.01%)</title><rect x="0.8677%" y="293" width="0.0146%" height="15" fill="rgb(215,215,53)" fg:x="298" fg:w="5"/><text x="1.1177%" y="303.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (5 samples, 0.01%)</title><rect x="0.8677%" y="277" width="0.0146%" height="15" fill="rgb(223,4,10)" fg:x="298" fg:w="5"/><text x="1.1177%" y="287.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (15 samples, 0.04%)</title><rect x="0.8473%" y="373" width="0.0437%" height="15" fill="rgb(234,103,6)" fg:x="291" fg:w="15"/><text x="1.0973%" y="383.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (4 samples, 0.01%)</title><rect x="0.8939%" y="293" width="0.0116%" height="15" fill="rgb(227,97,0)" fg:x="307" fg:w="4"/><text x="1.1439%" y="303.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForDisplay_block_invoke (5 samples, 0.01%)</title><rect x="0.8939%" y="325" width="0.0146%" height="15" fill="rgb(234,150,53)" fg:x="307" fg:w="5"/><text x="1.1439%" y="335.50"></text></g><g><title>AppKit`-[NSWindow displayIfNeeded] (5 samples, 0.01%)</title><rect x="0.8939%" y="309" width="0.0146%" height="15" fill="rgb(228,201,54)" fg:x="307" fg:w="5"/><text x="1.1439%" y="319.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (43 samples, 0.13%)</title><rect x="0.7891%" y="421" width="0.1252%" height="15" fill="rgb(222,22,37)" fg:x="271" fg:w="43"/><text x="1.0391%" y="431.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (25 samples, 0.07%)</title><rect x="0.8415%" y="405" width="0.0728%" height="15" fill="rgb(237,53,32)" fg:x="289" fg:w="25"/><text x="1.0915%" y="415.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (23 samples, 0.07%)</title><rect x="0.8473%" y="389" width="0.0670%" height="15" fill="rgb(233,25,53)" fg:x="291" fg:w="23"/><text x="1.0973%" y="399.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (8 samples, 0.02%)</title><rect x="0.8910%" y="373" width="0.0233%" height="15" fill="rgb(210,40,34)" fg:x="306" fg:w="8"/><text x="1.1410%" y="383.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (8 samples, 0.02%)</title><rect x="0.8910%" y="357" width="0.0233%" height="15" fill="rgb(241,220,44)" fg:x="306" fg:w="8"/><text x="1.1410%" y="367.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (7 samples, 0.02%)</title><rect x="0.8939%" y="341" width="0.0204%" height="15" fill="rgb(235,28,35)" fg:x="307" fg:w="7"/><text x="1.1439%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::observer_callback (6 samples, 0.02%)</title><rect x="0.9172%" y="421" width="0.0175%" height="15" fill="rgb(210,56,17)" fg:x="315" fg:w="6"/><text x="1.1672%" y="431.50"></text></g><g><title>ViewBridge`0x7ff8178ccd37 (7 samples, 0.02%)</title><rect x="0.9434%" y="405" width="0.0204%" height="15" fill="rgb(224,130,29)" fg:x="324" fg:w="7"/><text x="1.1934%" y="415.50"></text></g><g><title>ViewBridge`0x7ff8178d0ca5 (8 samples, 0.02%)</title><rect x="0.9434%" y="421" width="0.0233%" height="15" fill="rgb(235,212,8)" fg:x="324" fg:w="8"/><text x="1.1934%" y="431.50"></text></g><g><title>conway`conway::main::_{{closure}} (4 samples, 0.01%)</title><rect x="0.9900%" y="357" width="0.0116%" height="15" fill="rgb(223,33,50)" fg:x="340" fg:w="4"/><text x="1.2400%" y="367.50"></text></g><g><title>conway`winit_input_helper::winit_input_helper::WinitInputHelper::step (4 samples, 0.01%)</title><rect x="0.9900%" y="341" width="0.0116%" height="15" fill="rgb(219,149,13)" fg:x="340" fg:w="4"/><text x="1.2400%" y="351.50"></text></g><g><title>conway`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (6 samples, 0.02%)</title><rect x="0.9871%" y="373" width="0.0175%" height="15" fill="rgb(250,156,29)" fg:x="339" fg:w="6"/><text x="1.2371%" y="383.50"></text></g><g><title>conway`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (8 samples, 0.02%)</title><rect x="0.9871%" y="389" width="0.0233%" height="15" fill="rgb(216,193,19)" fg:x="339" fg:w="8"/><text x="1.2371%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.01%)</title><rect x="1.0104%" y="389" width="0.0146%" height="15" fill="rgb(216,135,14)" fg:x="347" fg:w="5"/><text x="1.2604%" y="399.50"></text></g><g><title>conway`winit::platform_impl::platform::app_state::AppState::wakeup (19 samples, 0.06%)</title><rect x="0.9725%" y="405" width="0.0553%" height="15" fill="rgb(241,47,5)" fg:x="334" fg:w="19"/><text x="1.2225%" y="415.50"></text></g><g><title>conway`winit::platform_impl::platform::observer::control_flow_begin_handler (22 samples, 0.06%)</title><rect x="0.9667%" y="421" width="0.0641%" height="15" fill="rgb(233,42,35)" fg:x="332" fg:w="22"/><text x="1.2167%" y="431.50"></text></g><g><title>conway`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (4 samples, 0.01%)</title><rect x="1.1007%" y="373" width="0.0116%" height="15" fill="rgb(231,13,6)" fg:x="378" fg:w="4"/><text x="1.3507%" y="383.50"></text></g><g><title>conway`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events (8 samples, 0.02%)</title><rect x="1.1123%" y="373" width="0.0233%" height="15" fill="rgb(207,181,40)" fg:x="382" fg:w="8"/><text x="1.3623%" y="383.50"></text></g><g><title>conway`std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (4 samples, 0.01%)</title><rect x="1.1240%" y="357" width="0.0116%" height="15" fill="rgb(254,173,49)" fg:x="386" fg:w="4"/><text x="1.3740%" y="367.50"></text></g><g><title>conway`conway::ConwayGrid::update (13,202 samples, 38.44%)</title><rect x="9.3236%" y="325" width="38.4416%" height="15" fill="rgb(221,1,38)" fg:x="3202" fg:w="13202"/><text x="9.5736%" y="335.50">conway`conway::ConwayGrid::update</text></g><g><title>conway`core::ptr::drop_in_place&lt;&amp;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="47.8263%" y="261" width="0.0146%" height="15" fill="rgb(206,124,46)" fg:x="16425" fg:w="5"/><text x="48.0763%" y="271.50"></text></g><g><title>conway`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="47.8176%" y="277" width="0.0262%" height="15" fill="rgb(249,21,11)" fg:x="16422" fg:w="9"/><text x="48.0676%" y="287.50"></text></g><g><title>conway`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (12 samples, 0.03%)</title><rect x="47.8118%" y="293" width="0.0349%" height="15" fill="rgb(222,201,40)" fg:x="16420" fg:w="12"/><text x="48.0618%" y="303.50"></text></g><g><title>conway`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.04%)</title><rect x="47.9748%" y="277" width="0.0437%" height="15" fill="rgb(235,61,29)" fg:x="16476" fg:w="15"/><text x="48.2248%" y="287.50"></text></g><g><title>conway`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.03%)</title><rect x="47.9894%" y="261" width="0.0291%" height="15" fill="rgb(219,207,3)" fg:x="16481" fg:w="10"/><text x="48.2394%" y="271.50"></text></g><g><title>conway`alloc::raw_vec::finish_grow (10 samples, 0.03%)</title><rect x="47.9894%" y="245" width="0.0291%" height="15" fill="rgb(222,56,46)" fg:x="16481" fg:w="10"/><text x="48.2394%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (7 samples, 0.02%)</title><rect x="47.9981%" y="229" width="0.0204%" height="15" fill="rgb(239,76,54)" fg:x="16484" fg:w="7"/><text x="48.2481%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.01%)</title><rect x="48.0040%" y="213" width="0.0146%" height="15" fill="rgb(231,124,27)" fg:x="16486" fg:w="5"/><text x="48.2540%" y="223.50"></text></g><g><title>conway`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="48.0243%" y="277" width="0.0175%" height="15" fill="rgb(249,195,6)" fg:x="16493" fg:w="6"/><text x="48.2743%" y="287.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (9 samples, 0.03%)</title><rect x="48.1059%" y="213" width="0.0262%" height="15" fill="rgb(237,174,47)" fg:x="16521" fg:w="9"/><text x="48.3559%" y="223.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (138 samples, 0.40%)</title><rect x="48.1321%" y="197" width="0.4018%" height="15" fill="rgb(206,201,31)" fg:x="16530" fg:w="138"/><text x="48.3821%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (132 samples, 0.38%)</title><rect x="48.1496%" y="181" width="0.3844%" height="15" fill="rgb(231,57,52)" fg:x="16536" fg:w="132"/><text x="48.3996%" y="191.50"></text></g><g><title>libdispatch.dylib`dispatch_group_enter (6 samples, 0.02%)</title><rect x="48.5368%" y="197" width="0.0175%" height="15" fill="rgb(248,177,22)" fg:x="16669" fg:w="6"/><text x="48.7868%" y="207.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (147 samples, 0.43%)</title><rect x="48.1321%" y="213" width="0.4280%" height="15" fill="rgb(215,211,37)" fg:x="16530" fg:w="147"/><text x="48.3821%" y="223.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageFinalizeShmemHeader (6 samples, 0.02%)</title><rect x="48.5630%" y="213" width="0.0175%" height="15" fill="rgb(241,128,51)" fg:x="16678" fg:w="6"/><text x="48.8130%" y="223.50"></text></g><g><title>Metal`_mtlIOAccelCommandBufferStorageBeginSegmentList (5 samples, 0.01%)</title><rect x="48.5659%" y="197" width="0.0146%" height="15" fill="rgb(227,165,31)" fg:x="16679" fg:w="5"/><text x="48.8159%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (5 samples, 0.01%)</title><rect x="48.5863%" y="213" width="0.0146%" height="15" fill="rgb(228,167,24)" fg:x="16686" fg:w="5"/><text x="48.8363%" y="223.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (177 samples, 0.52%)</title><rect x="48.0942%" y="229" width="0.5154%" height="15" fill="rgb(228,143,12)" fg:x="16517" fg:w="177"/><text x="48.3442%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (186 samples, 0.54%)</title><rect x="48.0826%" y="245" width="0.5416%" height="15" fill="rgb(249,149,8)" fg:x="16513" fg:w="186"/><text x="48.3326%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="48.6125%" y="229" width="0.0116%" height="15" fill="rgb(243,35,44)" fg:x="16695" fg:w="4"/><text x="48.8625%" y="239.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (6 samples, 0.02%)</title><rect x="48.6475%" y="213" width="0.0175%" height="15" fill="rgb(246,89,9)" fg:x="16707" fg:w="6"/><text x="48.8975%" y="223.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (6 samples, 0.02%)</title><rect x="48.6475%" y="197" width="0.0175%" height="15" fill="rgb(233,213,13)" fg:x="16707" fg:w="6"/><text x="48.8975%" y="207.50"></text></g><g><title>conway`metal::nsstring_from_str (7 samples, 0.02%)</title><rect x="48.6475%" y="229" width="0.0204%" height="15" fill="rgb(233,141,41)" fg:x="16707" fg:w="7"/><text x="48.8975%" y="239.50"></text></g><g><title>conway`metal::commandbuffer::CommandBufferRef::set_label (8 samples, 0.02%)</title><rect x="48.6475%" y="245" width="0.0233%" height="15" fill="rgb(239,167,4)" fg:x="16707" fg:w="8"/><text x="48.8975%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (5 samples, 0.01%)</title><rect x="48.6737%" y="245" width="0.0146%" height="15" fill="rgb(209,217,16)" fg:x="16716" fg:w="5"/><text x="48.9237%" y="255.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (6 samples, 0.02%)</title><rect x="48.6882%" y="245" width="0.0175%" height="15" fill="rgb(219,88,35)" fg:x="16721" fg:w="6"/><text x="48.9382%" y="255.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (218 samples, 0.63%)</title><rect x="48.0797%" y="261" width="0.6348%" height="15" fill="rgb(220,193,23)" fg:x="16512" fg:w="218"/><text x="48.3297%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.03%)</title><rect x="48.7232%" y="261" width="0.0262%" height="15" fill="rgb(230,90,52)" fg:x="16733" fg:w="9"/><text x="48.9732%" y="271.50"></text></g><g><title>conway`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (241 samples, 0.70%)</title><rect x="48.0564%" y="277" width="0.7017%" height="15" fill="rgb(252,106,19)" fg:x="16504" fg:w="241"/><text x="48.3064%" y="287.50"></text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (6 samples, 0.02%)</title><rect x="48.7669%" y="261" width="0.0175%" height="15" fill="rgb(206,74,20)" fg:x="16748" fg:w="6"/><text x="49.0169%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="48.7727%" y="245" width="0.0116%" height="15" fill="rgb(230,138,44)" fg:x="16750" fg:w="4"/><text x="49.0227%" y="255.50"></text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&lt;wgpu_hal::metal::Api&gt;&gt; (13 samples, 0.04%)</title><rect x="48.7639%" y="277" width="0.0379%" height="15" fill="rgb(235,182,43)" fg:x="16747" fg:w="13"/><text x="49.0139%" y="287.50"></text></g><g><title>conway`wgpu_core::command::memory_init::_&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_texture_memory (5 samples, 0.01%)</title><rect x="48.8164%" y="277" width="0.0146%" height="15" fill="rgb(242,16,51)" fg:x="16765" fg:w="5"/><text x="49.0664%" y="287.50"></text></g><g><title>conway`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="48.8455%" y="261" width="0.0116%" height="15" fill="rgb(248,9,4)" fg:x="16775" fg:w="4"/><text x="49.0955%" y="271.50"></text></g><g><title>IOAccelerator`IOAccelResourceRelease (5 samples, 0.01%)</title><rect x="48.9212%" y="229" width="0.0146%" height="15" fill="rgb(210,31,22)" fg:x="16801" fg:w="5"/><text x="49.1712%" y="239.50"></text></g><g><title>CoreFoundation`CFRelease (6 samples, 0.02%)</title><rect x="48.9532%" y="213" width="0.0175%" height="15" fill="rgb(239,54,39)" fg:x="16812" fg:w="6"/><text x="49.2032%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (404 samples, 1.18%)</title><rect x="49.0493%" y="149" width="1.1764%" height="15" fill="rgb(230,99,41)" fg:x="16845" fg:w="404"/><text x="49.2993%" y="159.50"></text></g><g><title>IOKit`io_connect_method (413 samples, 1.20%)</title><rect x="49.0289%" y="165" width="1.2026%" height="15" fill="rgb(253,106,12)" fg:x="16838" fg:w="413"/><text x="49.2789%" y="175.50"></text></g><g><title>IOAccelerator`ioAccelResourceFinalize (431 samples, 1.25%)</title><rect x="48.9881%" y="197" width="1.2550%" height="15" fill="rgb(213,46,41)" fg:x="16824" fg:w="431"/><text x="49.2381%" y="207.50"></text></g><g><title>IOKit`IOConnectCallMethod (420 samples, 1.22%)</title><rect x="49.0202%" y="181" width="1.2230%" height="15" fill="rgb(215,133,35)" fg:x="16835" fg:w="420"/><text x="49.2702%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="50.2460%" y="197" width="0.0116%" height="15" fill="rgb(213,28,5)" fg:x="17256" fg:w="4"/><text x="50.4960%" y="207.50"></text></g><g><title>CoreFoundation`_CFRelease (444 samples, 1.29%)</title><rect x="48.9707%" y="213" width="1.2928%" height="15" fill="rgb(215,77,49)" fg:x="16818" fg:w="444"/><text x="49.2207%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (5 samples, 0.01%)</title><rect x="50.2897%" y="149" width="0.0146%" height="15" fill="rgb(248,100,22)" fg:x="17271" fg:w="5"/><text x="50.5397%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (14 samples, 0.04%)</title><rect x="50.2664%" y="181" width="0.0408%" height="15" fill="rgb(208,67,9)" fg:x="17263" fg:w="14"/><text x="50.5164%" y="191.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (13 samples, 0.04%)</title><rect x="50.2693%" y="165" width="0.0379%" height="15" fill="rgb(219,133,21)" fg:x="17264" fg:w="13"/><text x="50.5193%" y="175.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (16 samples, 0.05%)</title><rect x="50.2664%" y="197" width="0.0466%" height="15" fill="rgb(246,46,29)" fg:x="17263" fg:w="16"/><text x="50.5164%" y="207.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (24 samples, 0.07%)</title><rect x="50.2664%" y="213" width="0.0699%" height="15" fill="rgb(246,185,52)" fg:x="17263" fg:w="24"/><text x="50.5164%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="50.3159%" y="197" width="0.0204%" height="15" fill="rgb(252,136,11)" fg:x="17280" fg:w="7"/><text x="50.5659%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (4 samples, 0.01%)</title><rect x="50.3363%" y="213" width="0.0116%" height="15" fill="rgb(219,138,53)" fg:x="17287" fg:w="4"/><text x="50.5863%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (4 samples, 0.01%)</title><rect x="50.3363%" y="197" width="0.0116%" height="15" fill="rgb(211,51,23)" fg:x="17287" fg:w="4"/><text x="50.5863%" y="207.50"></text></g><g><title>Metal`-[MTLIOAccelResource dealloc] (491 samples, 1.43%)</title><rect x="48.9357%" y="229" width="1.4297%" height="15" fill="rgb(247,221,28)" fg:x="16806" fg:w="491"/><text x="49.1857%" y="239.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer dealloc] (513 samples, 1.49%)</title><rect x="48.8921%" y="245" width="1.4938%" height="15" fill="rgb(251,222,45)" fg:x="16791" fg:w="513"/><text x="49.1421%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.01%)</title><rect x="50.3742%" y="229" width="0.0116%" height="15" fill="rgb(217,162,53)" fg:x="17300" fg:w="4"/><text x="50.6242%" y="239.50"></text></g><g><title>conway`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (524 samples, 1.53%)</title><rect x="48.8717%" y="261" width="1.5258%" height="15" fill="rgb(229,93,14)" fg:x="16784" fg:w="524"/><text x="49.1217%" y="271.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer deleteContextStateDescriptor:] (11 samples, 0.03%)</title><rect x="50.4586%" y="213" width="0.0320%" height="15" fill="rgb(209,67,49)" fg:x="17329" fg:w="11"/><text x="50.7086%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.01%)</title><rect x="50.4790%" y="197" width="0.0116%" height="15" fill="rgb(213,87,29)" fg:x="17336" fg:w="4"/><text x="50.7290%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::terminate (26 samples, 0.08%)</title><rect x="50.4906%" y="213" width="0.0757%" height="15" fill="rgb(205,151,52)" fg:x="17340" fg:w="26"/><text x="50.7406%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (23 samples, 0.07%)</title><rect x="50.4994%" y="197" width="0.0670%" height="15" fill="rgb(253,215,39)" fg:x="17343" fg:w="23"/><text x="50.7494%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt; &gt;::~__hash_table (10 samples, 0.03%)</title><rect x="50.5663%" y="213" width="0.0291%" height="15" fill="rgb(221,220,41)" fg:x="17366" fg:w="10"/><text x="50.8163%" y="223.50"></text></g><g><title>CoreFoundation`_CFRelease (10 samples, 0.03%)</title><rect x="50.6508%" y="165" width="0.0291%" height="15" fill="rgb(218,133,21)" fg:x="17395" fg:w="10"/><text x="50.9008%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="50.7265%" y="133" width="0.0116%" height="15" fill="rgb(221,193,43)" fg:x="17421" fg:w="4"/><text x="50.9765%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.04%)</title><rect x="50.7003%" y="149" width="0.0437%" height="15" fill="rgb(240,128,52)" fg:x="17412" fg:w="15"/><text x="50.9503%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.06%)</title><rect x="50.6857%" y="165" width="0.0641%" height="15" fill="rgb(253,114,12)" fg:x="17407" fg:w="22"/><text x="50.9357%" y="175.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (35 samples, 0.10%)</title><rect x="50.6508%" y="181" width="0.1019%" height="15" fill="rgb(215,223,47)" fg:x="17395" fg:w="35"/><text x="50.9008%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_release (6 samples, 0.02%)</title><rect x="50.7585%" y="181" width="0.0175%" height="15" fill="rgb(248,225,23)" fg:x="17432" fg:w="6"/><text x="51.0085%" y="191.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (58 samples, 0.17%)</title><rect x="50.6158%" y="197" width="0.1689%" height="15" fill="rgb(250,108,0)" fg:x="17383" fg:w="58"/><text x="50.8658%" y="207.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (75 samples, 0.22%)</title><rect x="50.5955%" y="213" width="0.2184%" height="15" fill="rgb(228,208,7)" fg:x="17376" fg:w="75"/><text x="50.8455%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (25 samples, 0.07%)</title><rect x="50.8284%" y="213" width="0.0728%" height="15" fill="rgb(244,45,10)" fg:x="17456" fg:w="25"/><text x="51.0784%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.02%)</title><rect x="50.8779%" y="197" width="0.0233%" height="15" fill="rgb(207,125,25)" fg:x="17473" fg:w="8"/><text x="51.1279%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (160 samples, 0.47%)</title><rect x="50.4382%" y="229" width="0.4659%" height="15" fill="rgb(210,195,18)" fg:x="17322" fg:w="160"/><text x="50.6882%" y="239.50"></text></g><g><title>conway`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.50%)</title><rect x="50.4237%" y="245" width="0.5037%" height="15" fill="rgb(249,80,12)" fg:x="17317" fg:w="173"/><text x="50.6737%" y="255.50"></text></g><g><title>conway`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (8 samples, 0.02%)</title><rect x="50.9274%" y="245" width="0.0233%" height="15" fill="rgb(221,65,9)" fg:x="17490" fg:w="8"/><text x="51.1774%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="50.9827%" y="245" width="0.0116%" height="15" fill="rgb(235,49,36)" fg:x="17509" fg:w="4"/><text x="51.2327%" y="255.50"></text></g><g><title>conway`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (214 samples, 0.62%)</title><rect x="50.4062%" y="261" width="0.6231%" height="15" fill="rgb(225,32,20)" fg:x="17311" fg:w="214"/><text x="50.6562%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="51.0089%" y="245" width="0.0204%" height="15" fill="rgb(215,141,46)" fg:x="17518" fg:w="7"/><text x="51.2589%" y="255.50"></text></g><g><title>conway`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (26 samples, 0.08%)</title><rect x="51.0293%" y="261" width="0.0757%" height="15" fill="rgb(250,160,47)" fg:x="17525" fg:w="26"/><text x="51.2793%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.02%)</title><rect x="51.1400%" y="261" width="0.0175%" height="15" fill="rgb(216,222,40)" fg:x="17563" fg:w="6"/><text x="51.3900%" y="271.50"></text></g><g><title>conway`wgpu_core::device::Device&lt;A&gt;::maintain (808 samples, 2.35%)</title><rect x="48.8309%" y="277" width="2.3527%" height="15" fill="rgb(234,217,39)" fg:x="16770" fg:w="808"/><text x="49.0809%" y="287.50">c..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.01%)</title><rect x="51.1691%" y="261" width="0.0146%" height="15" fill="rgb(207,178,40)" fg:x="17573" fg:w="5"/><text x="51.4191%" y="271.50"></text></g><g><title>conway`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::post_submit (8 samples, 0.02%)</title><rect x="51.2011%" y="277" width="0.0233%" height="15" fill="rgb(221,136,13)" fg:x="17584" fg:w="8"/><text x="51.4511%" y="287.50"></text></g><g><title>conway`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="51.2128%" y="261" width="0.0116%" height="15" fill="rgb(249,199,10)" fg:x="17588" fg:w="4"/><text x="51.4628%" y="271.50"></text></g><g><title>conway`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::track_submission (7 samples, 0.02%)</title><rect x="51.2244%" y="277" width="0.0204%" height="15" fill="rgb(249,222,13)" fg:x="17592" fg:w="7"/><text x="51.4744%" y="287.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder dealloc] (4 samples, 0.01%)</title><rect x="51.2826%" y="245" width="0.0116%" height="15" fill="rgb(244,185,38)" fg:x="17612" fg:w="4"/><text x="51.5326%" y="255.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::endEncoding (6 samples, 0.02%)</title><rect x="51.2972%" y="229" width="0.0175%" height="15" fill="rgb(236,202,9)" fg:x="17617" fg:w="6"/><text x="51.5472%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder endEncoding] (18 samples, 0.05%)</title><rect x="51.2943%" y="245" width="0.0524%" height="15" fill="rgb(250,229,37)" fg:x="17616" fg:w="18"/><text x="51.5443%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.01%)</title><rect x="51.3467%" y="245" width="0.0116%" height="15" fill="rgb(206,174,23)" fg:x="17634" fg:w="4"/><text x="51.5967%" y="255.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_encoding (29 samples, 0.08%)</title><rect x="51.2768%" y="261" width="0.0844%" height="15" fill="rgb(211,33,43)" fg:x="17610" fg:w="29"/><text x="51.5268%" y="271.50"></text></g><g><title>conway`wgpu_core::device::queue::PendingWrites&lt;A&gt;::pre_submit (34 samples, 0.10%)</title><rect x="51.2739%" y="277" width="0.0990%" height="15" fill="rgb(245,58,50)" fg:x="17609" fg:w="34"/><text x="51.5239%" y="287.50"></text></g><g><title>conway`wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_tracker (4 samples, 0.01%)</title><rect x="51.3904%" y="277" width="0.0116%" height="15" fill="rgb(244,68,36)" fg:x="17649" fg:w="4"/><text x="51.6404%" y="287.50"></text></g><g><title>conway`wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (5 samples, 0.01%)</title><rect x="51.4020%" y="277" width="0.0146%" height="15" fill="rgb(232,229,15)" fg:x="17653" fg:w="5"/><text x="51.6520%" y="287.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (12 samples, 0.03%)</title><rect x="51.4224%" y="277" width="0.0349%" height="15" fill="rgb(254,30,23)" fg:x="17660" fg:w="12"/><text x="51.6724%" y="287.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (10 samples, 0.03%)</title><rect x="51.4574%" y="277" width="0.0291%" height="15" fill="rgb(235,160,14)" fg:x="17672" fg:w="10"/><text x="51.7074%" y="287.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (7 samples, 0.02%)</title><rect x="51.4981%" y="213" width="0.0204%" height="15" fill="rgb(212,155,44)" fg:x="17686" fg:w="7"/><text x="51.7481%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:] (8 samples, 0.02%)</title><rect x="51.4981%" y="229" width="0.0233%" height="15" fill="rgb(226,2,50)" fg:x="17686" fg:w="8"/><text x="51.7481%" y="239.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (4 samples, 0.01%)</title><rect x="51.5214%" y="229" width="0.0116%" height="15" fill="rgb(234,177,6)" fg:x="17694" fg:w="4"/><text x="51.7714%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (13 samples, 0.04%)</title><rect x="51.4981%" y="245" width="0.0379%" height="15" fill="rgb(217,24,9)" fg:x="17686" fg:w="13"/><text x="51.7481%" y="255.50"></text></g><g><title>conway`metal::commandbuffer::CommandBufferRef::set_label (10 samples, 0.03%)</title><rect x="51.5360%" y="245" width="0.0291%" height="15" fill="rgb(220,13,46)" fg:x="17699" fg:w="10"/><text x="51.7860%" y="255.50"></text></g><g><title>conway`metal::nsstring_from_str (10 samples, 0.03%)</title><rect x="51.5360%" y="229" width="0.0291%" height="15" fill="rgb(239,221,27)" fg:x="17699" fg:w="10"/><text x="51.7860%" y="239.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (9 samples, 0.03%)</title><rect x="51.5389%" y="213" width="0.0262%" height="15" fill="rgb(222,198,25)" fg:x="17700" fg:w="9"/><text x="51.7889%" y="223.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (9 samples, 0.03%)</title><rect x="51.5389%" y="197" width="0.0262%" height="15" fill="rgb(211,99,13)" fg:x="17700" fg:w="9"/><text x="51.7889%" y="207.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (27 samples, 0.08%)</title><rect x="51.4923%" y="277" width="0.0786%" height="15" fill="rgb(232,111,31)" fg:x="17684" fg:w="27"/><text x="51.7423%" y="287.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (26 samples, 0.08%)</title><rect x="51.4952%" y="261" width="0.0757%" height="15" fill="rgb(245,82,37)" fg:x="17685" fg:w="26"/><text x="51.7452%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.02%)</title><rect x="51.5738%" y="277" width="0.0233%" height="15" fill="rgb(227,149,46)" fg:x="17712" fg:w="8"/><text x="51.8238%" y="287.50"></text></g><g><title>conway`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (1,290 samples, 3.76%)</title><rect x="47.8758%" y="293" width="3.7562%" height="15" fill="rgb(218,36,50)" fg:x="16442" fg:w="1290"/><text x="48.1258%" y="303.50">conw..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="51.6117%" y="277" width="0.0204%" height="15" fill="rgb(226,80,48)" fg:x="17725" fg:w="7"/><text x="51.8617%" y="287.50"></text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::queue_submit (1,326 samples, 3.86%)</title><rect x="47.7972%" y="309" width="3.8610%" height="15" fill="rgb(238,224,15)" fg:x="16415" fg:w="1326"/><text x="48.0472%" y="319.50">conw..</text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::texture_create_view (4 samples, 0.01%)</title><rect x="51.6670%" y="309" width="0.0116%" height="15" fill="rgb(241,136,10)" fg:x="17744" fg:w="4"/><text x="51.9170%" y="319.50"></text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu::Texture&gt; (11 samples, 0.03%)</title><rect x="51.7049%" y="293" width="0.0320%" height="15" fill="rgb(208,32,45)" fg:x="17757" fg:w="11"/><text x="51.9549%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="51.7252%" y="277" width="0.0116%" height="15" fill="rgb(207,135,9)" fg:x="17764" fg:w="4"/><text x="51.9752%" y="287.50"></text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu::SurfaceTexture&gt; (14 samples, 0.04%)</title><rect x="51.7019%" y="309" width="0.0408%" height="15" fill="rgb(206,86,44)" fg:x="17756" fg:w="14"/><text x="51.9519%" y="319.50"></text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu::Texture&gt; (4 samples, 0.01%)</title><rect x="51.7427%" y="309" width="0.0116%" height="15" fill="rgb(245,177,15)" fg:x="17770" fg:w="4"/><text x="51.9927%" y="319.50"></text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::texture_view_drop (4 samples, 0.01%)</title><rect x="51.7544%" y="293" width="0.0116%" height="15" fill="rgb(206,64,50)" fg:x="17774" fg:w="4"/><text x="52.0044%" y="303.50"></text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu::TextureView&gt; (6 samples, 0.02%)</title><rect x="51.7544%" y="309" width="0.0175%" height="15" fill="rgb(234,36,40)" fg:x="17774" fg:w="6"/><text x="52.0044%" y="319.50"></text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu_core::track::UsageScope&lt;wgpu_hal::gles::Api&gt;&gt; (5 samples, 0.01%)</title><rect x="51.8184%" y="229" width="0.0146%" height="15" fill="rgb(213,64,8)" fg:x="17796" fg:w="5"/><text x="52.0684%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::setupDatabufferSpace (7 samples, 0.02%)</title><rect x="52.0397%" y="149" width="0.0204%" height="15" fill="rgb(210,75,36)" fg:x="17872" fg:w="7"/><text x="52.2897%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::preparePipeline (15 samples, 0.04%)</title><rect x="52.0339%" y="165" width="0.0437%" height="15" fill="rgb(229,88,21)" fg:x="17870" fg:w="15"/><text x="52.2839%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt; &gt;::__emplace_unique_key_args&lt;unsigned int, std::__1::pair&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt;(unsigned int const&amp;, std::__1::pair (4 samples, 0.01%)</title><rect x="52.0921%" y="149" width="0.0116%" height="15" fill="rgb(252,204,47)" fg:x="17890" fg:w="4"/><text x="52.3421%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::writePSState (8 samples, 0.02%)</title><rect x="52.0834%" y="165" width="0.0233%" height="15" fill="rgb(208,77,27)" fg:x="17887" fg:w="8"/><text x="52.3334%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::writeVSState (6 samples, 0.02%)</title><rect x="52.1125%" y="165" width="0.0175%" height="15" fill="rgb(221,76,26)" fg:x="17897" fg:w="6"/><text x="52.3625%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateConstants::writeConstantState (6 samples, 0.02%)</title><rect x="52.1358%" y="165" width="0.0175%" height="15" fill="rgb(225,139,18)" fg:x="17905" fg:w="6"/><text x="52.3858%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateSamplers::writeIf (4 samples, 0.01%)</title><rect x="52.1533%" y="165" width="0.0116%" height="15" fill="rgb(230,137,11)" fg:x="17911" fg:w="4"/><text x="52.4033%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateVertexFetch&lt;CommandStreamRender, IntelMTLRender::sBindVertexBuffers&gt;::write (4 samples, 0.01%)</title><rect x="52.1678%" y="165" width="0.0116%" height="15" fill="rgb(212,28,1)" fg:x="17916" fg:w="4"/><text x="52.4178%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`ShaderBindingStage::updateBindingTableData (9 samples, 0.03%)</title><rect x="52.1882%" y="165" width="0.0262%" height="15" fill="rgb(248,164,17)" fg:x="17923" fg:w="9"/><text x="52.4382%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`ShaderBindingStage::writePointer (4 samples, 0.01%)</title><rect x="52.2173%" y="165" width="0.0116%" height="15" fill="rgb(222,171,42)" fg:x="17933" fg:w="4"/><text x="52.4673%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (77 samples, 0.22%)</title><rect x="52.0106%" y="181" width="0.2242%" height="15" fill="rgb(243,84,45)" fg:x="17862" fg:w="77"/><text x="52.2606%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawPrimitives (84 samples, 0.24%)</title><rect x="52.0048%" y="197" width="0.2446%" height="15" fill="rgb(252,49,23)" fg:x="17860" fg:w="84"/><text x="52.2548%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:] (88 samples, 0.26%)</title><rect x="51.9960%" y="213" width="0.2562%" height="15" fill="rgb(215,19,7)" fg:x="17857" fg:w="88"/><text x="52.2460%" y="223.50"></text></g><g><title>conway`bit_vec::BitVec&lt;B&gt;::grow (10 samples, 0.03%)</title><rect x="52.2814%" y="213" width="0.0291%" height="15" fill="rgb(238,81,41)" fg:x="17955" fg:w="10"/><text x="52.5314%" y="223.50"></text></g><g><title>conway`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.03%)</title><rect x="52.2843%" y="197" width="0.0262%" height="15" fill="rgb(210,199,37)" fg:x="17956" fg:w="9"/><text x="52.5343%" y="207.50"></text></g><g><title>conway`alloc::raw_vec::finish_grow (9 samples, 0.03%)</title><rect x="52.2843%" y="181" width="0.0262%" height="15" fill="rgb(244,192,49)" fg:x="17956" fg:w="9"/><text x="52.5343%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.03%)</title><rect x="52.2843%" y="165" width="0.0262%" height="15" fill="rgb(226,211,11)" fg:x="17956" fg:w="9"/><text x="52.5343%" y="175.50"></text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (4 samples, 0.01%)</title><rect x="52.3134%" y="213" width="0.0116%" height="15" fill="rgb(236,162,54)" fg:x="17966" fg:w="4"/><text x="52.5634%" y="223.50"></text></g><g><title>conway`wgpu_core::command::CommandEncoder&lt;A&gt;::close (6 samples, 0.02%)</title><rect x="52.3309%" y="213" width="0.0175%" height="15" fill="rgb(220,229,9)" fg:x="17972" fg:w="6"/><text x="52.5809%" y="223.50"></text></g><g><title>conway`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="52.3367%" y="197" width="0.0116%" height="15" fill="rgb(250,87,22)" fg:x="17974" fg:w="4"/><text x="52.5867%" y="207.50"></text></g><g><title>conway`wgpu_core::command::bind::Binder::assign_group (4 samples, 0.01%)</title><rect x="52.3484%" y="213" width="0.0116%" height="15" fill="rgb(239,43,17)" fg:x="17978" fg:w="4"/><text x="52.5984%" y="223.50"></text></g><g><title>CoreFoundation`_CFRelease (7 samples, 0.02%)</title><rect x="52.4066%" y="149" width="0.0204%" height="15" fill="rgb(231,177,25)" fg:x="17998" fg:w="7"/><text x="52.6566%" y="159.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (12 samples, 0.03%)</title><rect x="52.4037%" y="165" width="0.0349%" height="15" fill="rgb(219,179,1)" fg:x="17997" fg:w="12"/><text x="52.6537%" y="175.50"></text></g><g><title>Metal`-[_MTLCommandEncoder dealloc] (16 samples, 0.05%)</title><rect x="52.3979%" y="181" width="0.0466%" height="15" fill="rgb(238,219,53)" fg:x="17995" fg:w="16"/><text x="52.6479%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder dealloc] (19 samples, 0.06%)</title><rect x="52.3920%" y="197" width="0.0553%" height="15" fill="rgb(232,167,36)" fg:x="17993" fg:w="19"/><text x="52.6420%" y="207.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (4 samples, 0.01%)</title><rect x="52.4474%" y="197" width="0.0116%" height="15" fill="rgb(244,19,51)" fg:x="18012" fg:w="4"/><text x="52.6974%" y="207.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal dealloc] (7 samples, 0.02%)</title><rect x="52.4910%" y="117" width="0.0204%" height="15" fill="rgb(224,6,22)" fg:x="18027" fg:w="7"/><text x="52.7410%" y="127.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal dealloc] (16 samples, 0.05%)</title><rect x="52.4910%" y="133" width="0.0466%" height="15" fill="rgb(224,145,5)" fg:x="18027" fg:w="16"/><text x="52.7410%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderPass::~IGRenderPass (22 samples, 0.06%)</title><rect x="52.4910%" y="149" width="0.0641%" height="15" fill="rgb(234,130,49)" fg:x="18027" fg:w="22"/><text x="52.7410%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::~IGAccelRenderCommandEncoder (34 samples, 0.10%)</title><rect x="52.4910%" y="165" width="0.0990%" height="15" fill="rgb(254,6,2)" fg:x="18027" fg:w="34"/><text x="52.7410%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.02%)</title><rect x="52.5726%" y="149" width="0.0175%" height="15" fill="rgb(208,96,46)" fg:x="18055" fg:w="6"/><text x="52.8226%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder endEncoding] (14 samples, 0.04%)</title><rect x="52.5959%" y="165" width="0.0408%" height="15" fill="rgb(239,3,39)" fg:x="18063" fg:w="14"/><text x="52.8459%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="52.6250%" y="149" width="0.0116%" height="15" fill="rgb(233,210,1)" fg:x="18073" fg:w="4"/><text x="52.8750%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (55 samples, 0.16%)</title><rect x="52.6599%" y="149" width="0.1601%" height="15" fill="rgb(244,137,37)" fg:x="18085" fg:w="55"/><text x="52.9099%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_large (9 samples, 0.03%)</title><rect x="52.8201%" y="149" width="0.0262%" height="15" fill="rgb(240,136,2)" fg:x="18140" fg:w="9"/><text x="53.0701%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (136 samples, 0.40%)</title><rect x="52.4619%" y="181" width="0.3960%" height="15" fill="rgb(239,18,37)" fg:x="18017" fg:w="136"/><text x="52.7119%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (71 samples, 0.21%)</title><rect x="52.6512%" y="165" width="0.2067%" height="15" fill="rgb(218,185,22)" fg:x="18082" fg:w="71"/><text x="52.9012%" y="175.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (140 samples, 0.41%)</title><rect x="52.4590%" y="197" width="0.4077%" height="15" fill="rgb(225,218,4)" fg:x="18016" fg:w="140"/><text x="52.7090%" y="207.50"></text></g><g><title>conway`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (167 samples, 0.49%)</title><rect x="52.3920%" y="213" width="0.4863%" height="15" fill="rgb(230,182,32)" fg:x="17993" fg:w="167"/><text x="52.6420%" y="223.50"></text></g><g><title>conway`wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (4 samples, 0.01%)</title><rect x="52.9249%" y="197" width="0.0116%" height="15" fill="rgb(242,56,43)" fg:x="18176" fg:w="4"/><text x="53.1749%" y="207.50"></text></g><g><title>conway`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="52.9511%" y="181" width="0.0116%" height="15" fill="rgb(233,99,24)" fg:x="18185" fg:w="4"/><text x="53.2011%" y="191.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureStateSet::set_size (5 samples, 0.01%)</title><rect x="52.9744%" y="181" width="0.0146%" height="15" fill="rgb(234,209,42)" fg:x="18193" fg:w="5"/><text x="53.2244%" y="191.50"></text></g><g><title>conway`wgpu_core::track::UsageScope&lt;A&gt;::new (16 samples, 0.05%)</title><rect x="52.9482%" y="197" width="0.0466%" height="15" fill="rgb(227,7,12)" fg:x="18184" fg:w="16"/><text x="53.1982%" y="207.50"></text></g><g><title>conway`wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (14 samples, 0.04%)</title><rect x="53.0035%" y="197" width="0.0408%" height="15" fill="rgb(245,203,43)" fg:x="18203" fg:w="14"/><text x="53.2535%" y="207.50"></text></g><g><title>conway`wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (8 samples, 0.02%)</title><rect x="53.0210%" y="181" width="0.0233%" height="15" fill="rgb(238,205,33)" fg:x="18209" fg:w="8"/><text x="53.2710%" y="191.50"></text></g><g><title>conway`alloc::vec::Vec&lt;T,A&gt;::resize (7 samples, 0.02%)</title><rect x="53.0239%" y="165" width="0.0204%" height="15" fill="rgb(231,56,7)" fg:x="18210" fg:w="7"/><text x="53.2739%" y="175.50"></text></g><g><title>conway`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="53.0297%" y="149" width="0.0146%" height="15" fill="rgb(244,186,29)" fg:x="18212" fg:w="5"/><text x="53.2797%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelState::IntelState (4 samples, 0.01%)</title><rect x="53.0618%" y="133" width="0.0116%" height="15" fill="rgb(234,111,31)" fg:x="18223" fg:w="4"/><text x="53.3118%" y="143.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.02%)</title><rect x="53.0734%" y="133" width="0.0175%" height="15" fill="rgb(241,149,10)" fg:x="18227" fg:w="6"/><text x="53.3234%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.02%)</title><rect x="53.0734%" y="117" width="0.0175%" height="15" fill="rgb(249,206,44)" fg:x="18227" fg:w="6"/><text x="53.3234%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.02%)</title><rect x="53.0734%" y="101" width="0.0175%" height="15" fill="rgb(251,153,30)" fg:x="18227" fg:w="6"/><text x="53.3234%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.01%)</title><rect x="53.0792%" y="85" width="0.0116%" height="15" fill="rgb(239,152,38)" fg:x="18229" fg:w="4"/><text x="53.3292%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initContextStateDescriptorForEngine:] (11 samples, 0.03%)</title><rect x="53.0618%" y="149" width="0.0320%" height="15" fill="rgb(249,139,47)" fg:x="18223" fg:w="11"/><text x="53.3118%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderMeshShaderEmulation::IGRenderMeshShaderEmulation (17 samples, 0.05%)</title><rect x="53.1171%" y="117" width="0.0495%" height="15" fill="rgb(244,64,35)" fg:x="18242" fg:w="17"/><text x="53.3671%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="53.1491%" y="101" width="0.0175%" height="15" fill="rgb(216,46,15)" fg:x="18253" fg:w="6"/><text x="53.3991%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateBindingTable::IGRenderStateBindingTable (14 samples, 0.04%)</title><rect x="53.1666%" y="117" width="0.0408%" height="15" fill="rgb(250,74,19)" fg:x="18259" fg:w="14"/><text x="53.4166%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.04%)</title><rect x="53.1695%" y="101" width="0.0379%" height="15" fill="rgb(249,42,33)" fg:x="18260" fg:w="13"/><text x="53.4195%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateBindless::IGRenderStateBindless (8 samples, 0.02%)</title><rect x="53.2073%" y="117" width="0.0233%" height="15" fill="rgb(242,149,17)" fg:x="18273" fg:w="8"/><text x="53.4573%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.02%)</title><rect x="53.2132%" y="101" width="0.0175%" height="15" fill="rgb(244,29,21)" fg:x="18275" fg:w="6"/><text x="53.4632%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.02%)</title><rect x="53.2132%" y="85" width="0.0175%" height="15" fill="rgb(220,130,37)" fg:x="18275" fg:w="6"/><text x="53.4632%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateSamplers::IGRenderStateSamplers (4 samples, 0.01%)</title><rect x="53.2306%" y="117" width="0.0116%" height="15" fill="rgb(211,67,2)" fg:x="18281" fg:w="4"/><text x="53.4806%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (49 samples, 0.14%)</title><rect x="53.1083%" y="133" width="0.1427%" height="15" fill="rgb(235,68,52)" fg:x="18239" fg:w="49"/><text x="53.3583%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`CommandStreamPrimary::allocAndBindPrimary (5 samples, 0.01%)</title><rect x="53.2714%" y="117" width="0.0146%" height="15" fill="rgb(246,142,3)" fg:x="18295" fg:w="5"/><text x="53.5214%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGBufferMemory&lt;31ul&gt;::init (4 samples, 0.01%)</title><rect x="53.3005%" y="69" width="0.0116%" height="15" fill="rgb(241,25,7)" fg:x="18305" fg:w="4"/><text x="53.5505%" y="79.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`ShaderBindingStage::init (11 samples, 0.03%)</title><rect x="53.2918%" y="85" width="0.0320%" height="15" fill="rgb(242,119,39)" fg:x="18302" fg:w="11"/><text x="53.5418%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateBindingTable::init (15 samples, 0.04%)</title><rect x="53.2889%" y="101" width="0.0437%" height="15" fill="rgb(241,98,45)" fg:x="18301" fg:w="15"/><text x="53.5389%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (24 samples, 0.07%)</title><rect x="53.2860%" y="117" width="0.0699%" height="15" fill="rgb(254,28,30)" fg:x="18300" fg:w="24"/><text x="53.5360%" y="127.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="53.3442%" y="101" width="0.0116%" height="15" fill="rgb(241,142,54)" fg:x="18320" fg:w="4"/><text x="53.5942%" y="111.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (7 samples, 0.02%)</title><rect x="53.4228%" y="53" width="0.0204%" height="15" fill="rgb(222,85,15)" fg:x="18347" fg:w="7"/><text x="53.6728%" y="63.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::writeIndirectStateBaseAddress (17 samples, 0.05%)</title><rect x="53.3966%" y="69" width="0.0495%" height="15" fill="rgb(210,85,47)" fg:x="18338" fg:w="17"/><text x="53.6466%" y="79.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::writePipelineFlush (5 samples, 0.01%)</title><rect x="53.4490%" y="69" width="0.0146%" height="15" fill="rgb(224,206,25)" fg:x="18356" fg:w="5"/><text x="53.6990%" y="79.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderClearEncoder::writeBindingTablePS (6 samples, 0.02%)</title><rect x="53.4665%" y="69" width="0.0175%" height="15" fill="rgb(243,201,19)" fg:x="18362" fg:w="6"/><text x="53.7165%" y="79.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderClearEncoder::writeBlendState (5 samples, 0.01%)</title><rect x="53.4840%" y="69" width="0.0146%" height="15" fill="rgb(236,59,4)" fg:x="18368" fg:w="5"/><text x="53.7340%" y="79.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderClearEncoder::writePSState (7 samples, 0.02%)</title><rect x="53.4985%" y="69" width="0.0204%" height="15" fill="rgb(254,179,45)" fg:x="18373" fg:w="7"/><text x="53.7485%" y="79.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (59 samples, 0.17%)</title><rect x="53.3588%" y="85" width="0.1718%" height="15" fill="rgb(226,14,10)" fg:x="18325" fg:w="59"/><text x="53.6088%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`void std::__1::list&lt;sClearPass, std::__1::allocator&lt;sClearPass&gt; &gt;::emplace_back&lt;&gt; (4 samples, 0.01%)</title><rect x="53.5509%" y="53" width="0.0116%" height="15" fill="rgb(244,27,41)" fg:x="18391" fg:w="4"/><text x="53.8009%" y="63.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderClearEncoder::setupClearPasses (6 samples, 0.02%)</title><rect x="53.5509%" y="69" width="0.0175%" height="15" fill="rgb(235,35,32)" fg:x="18391" fg:w="6"/><text x="53.8009%" y="79.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`ColorClearData::getRGBA (5 samples, 0.01%)</title><rect x="53.5713%" y="53" width="0.0146%" height="15" fill="rgb(218,68,31)" fg:x="18398" fg:w="5"/><text x="53.8213%" y="63.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderClearEncoder::setupVertexData (7 samples, 0.02%)</title><rect x="53.5684%" y="69" width="0.0204%" height="15" fill="rgb(207,120,37)" fg:x="18397" fg:w="7"/><text x="53.8184%" y="79.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderClearEncoder::IGRenderClearEncoder (19 samples, 0.06%)</title><rect x="53.5364%" y="85" width="0.0553%" height="15" fill="rgb(227,98,0)" fg:x="18386" fg:w="19"/><text x="53.7864%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (84 samples, 0.24%)</title><rect x="53.3588%" y="101" width="0.2446%" height="15" fill="rgb(207,7,3)" fg:x="18325" fg:w="84"/><text x="53.6088%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderPass::generateClearData (4 samples, 0.01%)</title><rect x="53.6092%" y="85" width="0.0116%" height="15" fill="rgb(206,98,19)" fg:x="18411" fg:w="4"/><text x="53.8592%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderPass::generateDepthStencilState (4 samples, 0.01%)</title><rect x="53.6208%" y="85" width="0.0116%" height="15" fill="rgb(217,5,26)" fg:x="18415" fg:w="4"/><text x="53.8708%" y="95.50"></text></g><g><title>IOAccelerator`ioAccelResourceListAddNewGroupAndResource (4 samples, 0.01%)</title><rect x="53.6645%" y="69" width="0.0116%" height="15" fill="rgb(235,190,38)" fg:x="18430" fg:w="4"/><text x="53.9145%" y="79.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderPass::generateSurfaceState (15 samples, 0.04%)</title><rect x="53.6354%" y="85" width="0.0437%" height="15" fill="rgb(247,86,24)" fg:x="18420" fg:w="15"/><text x="53.8854%" y="95.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal validate:width:height:] (8 samples, 0.02%)</title><rect x="53.6907%" y="85" width="0.0233%" height="15" fill="rgb(205,101,16)" fg:x="18439" fg:w="8"/><text x="53.9407%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderPass::initWithDescriptor (44 samples, 0.13%)</title><rect x="53.6092%" y="101" width="0.1281%" height="15" fill="rgb(246,168,33)" fg:x="18411" fg:w="44"/><text x="53.8592%" y="111.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.02%)</title><rect x="53.7169%" y="85" width="0.0204%" height="15" fill="rgb(231,114,1)" fg:x="18448" fg:w="7"/><text x="53.9669%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (135 samples, 0.39%)</title><rect x="53.3559%" y="117" width="0.3931%" height="15" fill="rgb(207,184,53)" fg:x="18324" fg:w="135"/><text x="53.6059%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelDevice fixedHeapAllocator:] (4 samples, 0.01%)</title><rect x="53.7606%" y="101" width="0.0116%" height="15" fill="rgb(224,95,51)" fg:x="18463" fg:w="4"/><text x="54.0106%" y="111.50"></text></g><g><title>Metal`MTLResourceListAddResource (7 samples, 0.02%)</title><rect x="53.7839%" y="85" width="0.0204%" height="15" fill="rgb(212,188,45)" fg:x="18471" fg:w="7"/><text x="54.0339%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (28 samples, 0.08%)</title><rect x="53.7722%" y="101" width="0.0815%" height="15" fill="rgb(223,154,38)" fg:x="18467" fg:w="28"/><text x="54.0222%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (16 samples, 0.05%)</title><rect x="53.8072%" y="85" width="0.0466%" height="15" fill="rgb(251,22,52)" fg:x="18479" fg:w="16"/><text x="54.0572%" y="95.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::initialize (39 samples, 0.11%)</title><rect x="53.7606%" y="117" width="0.1136%" height="15" fill="rgb(229,209,22)" fg:x="18463" fg:w="39"/><text x="54.0106%" y="127.50"></text></g><g><title>libobjc.A.dylib`objc_retain (6 samples, 0.02%)</title><rect x="53.8567%" y="101" width="0.0175%" height="15" fill="rgb(234,138,34)" fg:x="18496" fg:w="6"/><text x="54.1067%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (217 samples, 0.63%)</title><rect x="53.2510%" y="133" width="0.6319%" height="15" fill="rgb(212,95,11)" fg:x="18288" fg:w="217"/><text x="53.5010%" y="143.50"></text></g><g><title>Metal`-[MTLIOAccelRenderCommandEncoder initWithCommandBuffer:descriptor:] (7 samples, 0.02%)</title><rect x="53.8858%" y="133" width="0.0204%" height="15" fill="rgb(240,179,47)" fg:x="18506" fg:w="7"/><text x="54.1358%" y="143.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder initWithCommandBuffer:] (6 samples, 0.02%)</title><rect x="53.8887%" y="117" width="0.0175%" height="15" fill="rgb(240,163,11)" fg:x="18507" fg:w="6"/><text x="54.1387%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (291 samples, 0.85%)</title><rect x="53.0938%" y="149" width="0.8473%" height="15" fill="rgb(236,37,12)" fg:x="18234" fg:w="291"/><text x="53.3438%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="53.9266%" y="133" width="0.0146%" height="15" fill="rgb(232,164,16)" fg:x="18520" fg:w="5"/><text x="54.1766%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (5 samples, 0.01%)</title><rect x="53.9266%" y="117" width="0.0146%" height="15" fill="rgb(244,205,15)" fg:x="18520" fg:w="5"/><text x="54.1766%" y="127.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (5 samples, 0.01%)</title><rect x="53.9528%" y="149" width="0.0146%" height="15" fill="rgb(223,117,47)" fg:x="18529" fg:w="5"/><text x="54.2028%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (5 samples, 0.01%)</title><rect x="53.9528%" y="133" width="0.0146%" height="15" fill="rgb(244,107,35)" fg:x="18529" fg:w="5"/><text x="54.2028%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (318 samples, 0.93%)</title><rect x="53.0618%" y="165" width="0.9260%" height="15" fill="rgb(205,140,8)" fg:x="18223" fg:w="318"/><text x="53.3118%" y="175.50"></text></g><g><title>Metal`+[MTLRenderPassColorAttachmentDescriptorArray alloc] (4 samples, 0.01%)</title><rect x="54.0052%" y="117" width="0.0116%" height="15" fill="rgb(228,84,46)" fg:x="18547" fg:w="4"/><text x="54.2552%" y="127.50"></text></g><g><title>Metal`+[MTLRenderPassSampleBufferAttachmentDescriptorArray allocWithZone:] (4 samples, 0.01%)</title><rect x="54.0168%" y="117" width="0.0116%" height="15" fill="rgb(254,188,9)" fg:x="18551" fg:w="4"/><text x="54.2668%" y="127.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal init] (16 samples, 0.05%)</title><rect x="53.9877%" y="149" width="0.0466%" height="15" fill="rgb(206,112,54)" fg:x="18541" fg:w="16"/><text x="54.2377%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (13 samples, 0.04%)</title><rect x="53.9964%" y="133" width="0.0379%" height="15" fill="rgb(216,84,49)" fg:x="18544" fg:w="13"/><text x="54.2464%" y="143.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptor allocWithZone:] (6 samples, 0.02%)</title><rect x="54.0401%" y="133" width="0.0175%" height="15" fill="rgb(214,194,35)" fg:x="18559" fg:w="6"/><text x="54.2901%" y="143.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (5 samples, 0.01%)</title><rect x="54.0430%" y="117" width="0.0146%" height="15" fill="rgb(249,28,3)" fg:x="18560" fg:w="5"/><text x="54.2930%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (5 samples, 0.01%)</title><rect x="54.0430%" y="101" width="0.0146%" height="15" fill="rgb(222,56,52)" fg:x="18560" fg:w="5"/><text x="54.2930%" y="111.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (7 samples, 0.02%)</title><rect x="54.0401%" y="149" width="0.0204%" height="15" fill="rgb(245,217,50)" fg:x="18559" fg:w="7"/><text x="54.2901%" y="159.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptor renderPassDescriptor] (26 samples, 0.08%)</title><rect x="53.9877%" y="165" width="0.0757%" height="15" fill="rgb(213,201,24)" fg:x="18541" fg:w="26"/><text x="54.2377%" y="175.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:] (5 samples, 0.01%)</title><rect x="54.0692%" y="165" width="0.0146%" height="15" fill="rgb(248,116,28)" fg:x="18569" fg:w="5"/><text x="54.3192%" y="175.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (4 samples, 0.01%)</title><rect x="54.0984%" y="101" width="0.0116%" height="15" fill="rgb(219,72,43)" fg:x="18579" fg:w="4"/><text x="54.3484%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="54.0984%" y="85" width="0.0116%" height="15" fill="rgb(209,138,14)" fg:x="18579" fg:w="4"/><text x="54.3484%" y="95.50"></text></g><g><title>conway`metal::nsstring_from_str (7 samples, 0.02%)</title><rect x="54.0925%" y="149" width="0.0204%" height="15" fill="rgb(222,18,33)" fg:x="18577" fg:w="7"/><text x="54.3425%" y="159.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (5 samples, 0.01%)</title><rect x="54.0984%" y="133" width="0.0146%" height="15" fill="rgb(213,199,7)" fg:x="18579" fg:w="5"/><text x="54.3484%" y="143.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (5 samples, 0.01%)</title><rect x="54.0984%" y="117" width="0.0146%" height="15" fill="rgb(250,110,10)" fg:x="18579" fg:w="5"/><text x="54.3484%" y="127.50"></text></g><g><title>conway`metal::encoder::CommandEncoderRef::set_label (10 samples, 0.03%)</title><rect x="54.0925%" y="165" width="0.0291%" height="15" fill="rgb(248,123,6)" fg:x="18577" fg:w="10"/><text x="54.3425%" y="175.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (378 samples, 1.10%)</title><rect x="53.0559%" y="181" width="1.1007%" height="15" fill="rgb(206,91,31)" fg:x="18221" fg:w="378"/><text x="53.3059%" y="191.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (391 samples, 1.14%)</title><rect x="53.0472%" y="197" width="1.1385%" height="15" fill="rgb(211,154,13)" fg:x="18218" fg:w="391"/><text x="53.2972%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.02%)</title><rect x="54.1624%" y="181" width="0.0233%" height="15" fill="rgb(225,148,7)" fg:x="18601" fg:w="8"/><text x="54.4124%" y="191.50"></text></g><g><title>conway`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (452 samples, 1.32%)</title><rect x="52.8783%" y="213" width="1.3161%" height="15" fill="rgb(220,160,43)" fg:x="18160" fg:w="452"/><text x="53.1283%" y="223.50"></text></g><g><title>conway`wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_usage_scope (6 samples, 0.02%)</title><rect x="54.2323%" y="213" width="0.0175%" height="15" fill="rgb(213,52,39)" fg:x="18625" fg:w="6"/><text x="54.4823%" y="223.50"></text></g><g><title>conway`wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_bind_group (7 samples, 0.02%)</title><rect x="54.2585%" y="213" width="0.0204%" height="15" fill="rgb(243,137,7)" fg:x="18634" fg:w="7"/><text x="54.5085%" y="223.50"></text></g><g><title>conway`wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_single (5 samples, 0.01%)</title><rect x="54.2789%" y="213" width="0.0146%" height="15" fill="rgb(230,79,13)" fg:x="18641" fg:w="5"/><text x="54.5289%" y="223.50"></text></g><g><title>conway`wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (10 samples, 0.03%)</title><rect x="54.2935%" y="213" width="0.0291%" height="15" fill="rgb(247,105,23)" fg:x="18646" fg:w="10"/><text x="54.5435%" y="223.50"></text></g><g><title>conway`alloc::vec::Vec&lt;T,A&gt;::resize (7 samples, 0.02%)</title><rect x="54.3022%" y="197" width="0.0204%" height="15" fill="rgb(223,179,41)" fg:x="18649" fg:w="7"/><text x="54.5522%" y="207.50"></text></g><g><title>conway`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="54.3051%" y="181" width="0.0175%" height="15" fill="rgb(218,9,34)" fg:x="18650" fg:w="6"/><text x="54.5551%" y="191.50"></text></g><g><title>conway`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="54.3080%" y="165" width="0.0146%" height="15" fill="rgb(222,106,8)" fg:x="18651" fg:w="5"/><text x="54.5580%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="54.3080%" y="149" width="0.0146%" height="15" fill="rgb(211,220,0)" fg:x="18651" fg:w="5"/><text x="54.5580%" y="159.50"></text></g><g><title>conway`wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (11 samples, 0.03%)</title><rect x="54.3226%" y="213" width="0.0320%" height="15" fill="rgb(229,52,16)" fg:x="18656" fg:w="11"/><text x="54.5726%" y="223.50"></text></g><g><title>conway`wgpu_core::hub::Storage&lt;T,I&gt;::get (4 samples, 0.01%)</title><rect x="54.3430%" y="197" width="0.0116%" height="15" fill="rgb(212,155,18)" fg:x="18663" fg:w="4"/><text x="54.5930%" y="207.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (5 samples, 0.01%)</title><rect x="54.3575%" y="213" width="0.0146%" height="15" fill="rgb(242,21,14)" fg:x="18668" fg:w="5"/><text x="54.6075%" y="223.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (5 samples, 0.01%)</title><rect x="54.3721%" y="213" width="0.0146%" height="15" fill="rgb(222,19,48)" fg:x="18673" fg:w="5"/><text x="54.6221%" y="223.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (7 samples, 0.02%)</title><rect x="54.4216%" y="117" width="0.0204%" height="15" fill="rgb(232,45,27)" fg:x="18690" fg:w="7"/><text x="54.6716%" y="127.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="54.4682%" y="117" width="0.0116%" height="15" fill="rgb(249,103,42)" fg:x="18706" fg:w="4"/><text x="54.7182%" y="127.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (24 samples, 0.07%)</title><rect x="54.4187%" y="133" width="0.0699%" height="15" fill="rgb(246,81,33)" fg:x="18689" fg:w="24"/><text x="54.6687%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (41 samples, 0.12%)</title><rect x="54.4128%" y="149" width="0.1194%" height="15" fill="rgb(252,33,42)" fg:x="18687" fg:w="41"/><text x="54.6628%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="54.4973%" y="133" width="0.0349%" height="15" fill="rgb(209,212,41)" fg:x="18716" fg:w="12"/><text x="54.7473%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (12 samples, 0.03%)</title><rect x="54.4973%" y="117" width="0.0349%" height="15" fill="rgb(207,154,6)" fg:x="18716" fg:w="12"/><text x="54.7473%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (8 samples, 0.02%)</title><rect x="54.5089%" y="101" width="0.0233%" height="15" fill="rgb(223,64,47)" fg:x="18720" fg:w="8"/><text x="54.7589%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:] (51 samples, 0.15%)</title><rect x="54.4041%" y="165" width="0.1485%" height="15" fill="rgb(211,161,38)" fg:x="18684" fg:w="51"/><text x="54.6541%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="54.5410%" y="149" width="0.0116%" height="15" fill="rgb(219,138,40)" fg:x="18731" fg:w="4"/><text x="54.7910%" y="159.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (4 samples, 0.01%)</title><rect x="54.5584%" y="165" width="0.0116%" height="15" fill="rgb(241,228,46)" fg:x="18737" fg:w="4"/><text x="54.8084%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.01%)</title><rect x="54.5584%" y="149" width="0.0116%" height="15" fill="rgb(223,209,38)" fg:x="18737" fg:w="4"/><text x="54.8084%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (66 samples, 0.19%)</title><rect x="54.3983%" y="181" width="0.1922%" height="15" fill="rgb(236,164,45)" fg:x="18682" fg:w="66"/><text x="54.6483%" y="191.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (6 samples, 0.02%)</title><rect x="54.5905%" y="181" width="0.0175%" height="15" fill="rgb(231,15,5)" fg:x="18748" fg:w="6"/><text x="54.8405%" y="191.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (4 samples, 0.01%)</title><rect x="54.6312%" y="117" width="0.0116%" height="15" fill="rgb(252,35,15)" fg:x="18762" fg:w="4"/><text x="54.8812%" y="127.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (6 samples, 0.02%)</title><rect x="54.6429%" y="117" width="0.0175%" height="15" fill="rgb(248,181,18)" fg:x="18766" fg:w="6"/><text x="54.8929%" y="127.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (19 samples, 0.06%)</title><rect x="54.6108%" y="149" width="0.0553%" height="15" fill="rgb(233,39,42)" fg:x="18755" fg:w="19"/><text x="54.8608%" y="159.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (19 samples, 0.06%)</title><rect x="54.6108%" y="133" width="0.0553%" height="15" fill="rgb(238,110,33)" fg:x="18755" fg:w="19"/><text x="54.8608%" y="143.50"></text></g><g><title>conway`metal::nsstring_from_str (23 samples, 0.07%)</title><rect x="54.6079%" y="165" width="0.0670%" height="15" fill="rgb(233,195,10)" fg:x="18754" fg:w="23"/><text x="54.8579%" y="175.50"></text></g><g><title>conway`metal::commandbuffer::CommandBufferRef::set_label (25 samples, 0.07%)</title><rect x="54.6079%" y="181" width="0.0728%" height="15" fill="rgb(254,105,3)" fg:x="18754" fg:w="25"/><text x="54.8579%" y="191.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (106 samples, 0.31%)</title><rect x="54.3925%" y="197" width="0.3087%" height="15" fill="rgb(221,225,9)" fg:x="18680" fg:w="106"/><text x="54.6425%" y="207.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (110 samples, 0.32%)</title><rect x="54.3866%" y="213" width="0.3203%" height="15" fill="rgb(224,227,45)" fg:x="18678" fg:w="110"/><text x="54.6366%" y="223.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_bind_group (7 samples, 0.02%)</title><rect x="54.7069%" y="213" width="0.0204%" height="15" fill="rgb(229,198,43)" fg:x="18788" fg:w="7"/><text x="54.9569%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateBindingTable::set (7 samples, 0.02%)</title><rect x="54.7564%" y="181" width="0.0204%" height="15" fill="rgb(206,209,35)" fg:x="18805" fg:w="7"/><text x="55.0064%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`ShaderBindingStage::setBTILayoutIndices (6 samples, 0.02%)</title><rect x="54.7593%" y="165" width="0.0175%" height="15" fill="rgb(245,195,53)" fg:x="18806" fg:w="6"/><text x="55.0093%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateConstants::set (5 samples, 0.01%)</title><rect x="54.7768%" y="181" width="0.0146%" height="15" fill="rgb(240,92,26)" fg:x="18812" fg:w="5"/><text x="55.0268%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.01%)</title><rect x="54.7768%" y="165" width="0.0146%" height="15" fill="rgb(207,40,23)" fg:x="18812" fg:w="5"/><text x="55.0268%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::setPipelineState (23 samples, 0.07%)</title><rect x="54.7302%" y="197" width="0.0670%" height="15" fill="rgb(223,111,35)" fg:x="18796" fg:w="23"/><text x="54.9802%" y="207.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_render_pipeline (27 samples, 0.08%)</title><rect x="54.7273%" y="213" width="0.0786%" height="15" fill="rgb(229,147,28)" fg:x="18795" fg:w="27"/><text x="54.9773%" y="223.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_scissor_rect (7 samples, 0.02%)</title><rect x="54.8059%" y="213" width="0.0204%" height="15" fill="rgb(211,29,28)" fg:x="18822" fg:w="7"/><text x="55.0559%" y="223.50"></text></g><g><title>conway`metal::encoder::RenderCommandEncoderRef::set_scissor_rect (4 samples, 0.01%)</title><rect x="54.8147%" y="197" width="0.0116%" height="15" fill="rgb(228,72,33)" fg:x="18825" fg:w="4"/><text x="55.0647%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder setScissorRect:] (4 samples, 0.01%)</title><rect x="54.8147%" y="181" width="0.0116%" height="15" fill="rgb(205,214,31)" fg:x="18825" fg:w="4"/><text x="55.0647%" y="191.50"></text></g><g><title>conway`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1,028 samples, 2.99%)</title><rect x="51.8621%" y="229" width="2.9933%" height="15" fill="rgb(224,111,15)" fg:x="17811" fg:w="1028"/><text x="52.1121%" y="239.50">con..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="54.8438%" y="213" width="0.0116%" height="15" fill="rgb(253,21,26)" fg:x="18835" fg:w="4"/><text x="55.0938%" y="223.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (5 samples, 0.01%)</title><rect x="54.8991%" y="229" width="0.0146%" height="15" fill="rgb(245,139,43)" fg:x="18854" fg:w="5"/><text x="55.1491%" y="239.50"></text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (1,071 samples, 3.12%)</title><rect x="51.7980%" y="245" width="3.1185%" height="15" fill="rgb(252,170,7)" fg:x="17789" fg:w="1071"/><text x="52.0480%" y="255.50">con..</text></g><g><title>conway`&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (1,077 samples, 3.14%)</title><rect x="51.7893%" y="277" width="3.1360%" height="15" fill="rgb(231,118,14)" fg:x="17786" fg:w="1077"/><text x="52.0393%" y="287.50">con..</text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (1,076 samples, 3.13%)</title><rect x="51.7922%" y="261" width="3.1331%" height="15" fill="rgb(238,83,0)" fg:x="17787" fg:w="1076"/><text x="52.0422%" y="271.50">con..</text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (1,085 samples, 3.16%)</title><rect x="51.7864%" y="293" width="3.1593%" height="15" fill="rgb(221,39,39)" fg:x="17785" fg:w="1085"/><text x="52.0364%" y="303.50">con..</text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu_core::command::render::RenderPass&gt; (4 samples, 0.01%)</title><rect x="54.9340%" y="277" width="0.0116%" height="15" fill="rgb(222,119,46)" fg:x="18866" fg:w="4"/><text x="55.1840%" y="287.50"></text></g><g><title>conway`core::ptr::drop_in_place&lt;wgpu_core::command::BasePass&lt;wgpu_core::command::draw::RenderCommand&gt;&gt; (4 samples, 0.01%)</title><rect x="54.9340%" y="261" width="0.0116%" height="15" fill="rgb(222,165,49)" fg:x="18866" fg:w="4"/><text x="55.1840%" y="271.50"></text></g><g><title>conway`wgpu_core::command::render::RenderPass::new (4 samples, 0.01%)</title><rect x="54.9661%" y="245" width="0.0116%" height="15" fill="rgb(219,113,52)" fg:x="18877" fg:w="4"/><text x="55.2161%" y="255.50"></text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_begin_render_pass (12 samples, 0.03%)</title><rect x="54.9573%" y="261" width="0.0349%" height="15" fill="rgb(214,7,15)" fg:x="18874" fg:w="12"/><text x="55.2073%" y="271.50"></text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::command_encoder_begin_render_pass (20 samples, 0.06%)</title><rect x="54.9544%" y="277" width="0.0582%" height="15" fill="rgb(235,32,4)" fg:x="18873" fg:w="20"/><text x="55.2044%" y="287.50"></text></g><g><title>conway`wgpu::CommandEncoder::begin_render_pass (23 samples, 0.07%)</title><rect x="54.9544%" y="293" width="0.0670%" height="15" fill="rgb(238,90,54)" fg:x="18873" fg:w="23"/><text x="55.2044%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="55.0330%" y="197" width="0.0146%" height="15" fill="rgb(213,208,19)" fg:x="18900" fg:w="5"/><text x="55.2830%" y="207.50"></text></g><g><title>conway`alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="55.0243%" y="245" width="0.0320%" height="15" fill="rgb(233,156,4)" fg:x="18897" fg:w="11"/><text x="55.2743%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.03%)</title><rect x="55.0272%" y="229" width="0.0291%" height="15" fill="rgb(207,194,5)" fg:x="18898" fg:w="10"/><text x="55.2772%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (9 samples, 0.03%)</title><rect x="55.0301%" y="213" width="0.0262%" height="15" fill="rgb(206,111,30)" fg:x="18899" fg:w="9"/><text x="55.2801%" y="223.50"></text></g><g><title>conway`wgpu::RenderPass::draw (13 samples, 0.04%)</title><rect x="55.0214%" y="293" width="0.0379%" height="15" fill="rgb(243,70,54)" fg:x="18896" fg:w="13"/><text x="55.2714%" y="303.50"></text></g><g><title>conway`wgpu_render_pass_draw (13 samples, 0.04%)</title><rect x="55.0214%" y="277" width="0.0379%" height="15" fill="rgb(242,28,8)" fg:x="18896" fg:w="13"/><text x="55.2714%" y="287.50"></text></g><g><title>conway`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.04%)</title><rect x="55.0214%" y="261" width="0.0379%" height="15" fill="rgb(219,106,18)" fg:x="18896" fg:w="13"/><text x="55.2714%" y="271.50"></text></g><g><title>conway`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.02%)</title><rect x="55.0622%" y="261" width="0.0233%" height="15" fill="rgb(244,222,10)" fg:x="18910" fg:w="8"/><text x="55.3122%" y="271.50"></text></g><g><title>conway`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="55.0651%" y="245" width="0.0204%" height="15" fill="rgb(236,179,52)" fg:x="18911" fg:w="7"/><text x="55.3151%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="55.0651%" y="229" width="0.0204%" height="15" fill="rgb(213,23,39)" fg:x="18911" fg:w="7"/><text x="55.3151%" y="239.50"></text></g><g><title>conway`wgpu::RenderPass::set_pipeline (12 samples, 0.03%)</title><rect x="55.0593%" y="293" width="0.0349%" height="15" fill="rgb(238,48,10)" fg:x="18909" fg:w="12"/><text x="55.3093%" y="303.50"></text></g><g><title>conway`wgpu_render_pass_set_pipeline (11 samples, 0.03%)</title><rect x="55.0622%" y="277" width="0.0320%" height="15" fill="rgb(251,196,23)" fg:x="18910" fg:w="11"/><text x="55.3122%" y="287.50"></text></g><g><title>conway`pixels::renderers::ScalingRenderer::render (1,144 samples, 3.33%)</title><rect x="51.7718%" y="309" width="3.3311%" height="15" fill="rgb(250,152,24)" fg:x="17780" fg:w="1144"/><text x="52.0218%" y="319.50">con..</text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_finish (5 samples, 0.01%)</title><rect x="55.1058%" y="277" width="0.0146%" height="15" fill="rgb(209,150,17)" fg:x="18925" fg:w="5"/><text x="55.3558%" y="287.50"></text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::command_encoder_finish (8 samples, 0.02%)</title><rect x="55.1058%" y="293" width="0.0233%" height="15" fill="rgb(234,202,34)" fg:x="18925" fg:w="8"/><text x="55.3558%" y="303.50"></text></g><g><title>conway`wgpu::CommandEncoder::finish (10 samples, 0.03%)</title><rect x="55.1029%" y="309" width="0.0291%" height="15" fill="rgb(253,148,53)" fg:x="18924" fg:w="10"/><text x="55.3529%" y="319.50"></text></g><g><title>conway`wgpu_core::command::CommandBuffer&lt;A&gt;::new (8 samples, 0.02%)</title><rect x="55.2048%" y="245" width="0.0233%" height="15" fill="rgb(218,129,16)" fg:x="18959" fg:w="8"/><text x="55.4548%" y="255.50"></text></g><g><title>conway`wgpu_core::hub::Storage&lt;T,I&gt;::get (5 samples, 0.01%)</title><rect x="55.2369%" y="245" width="0.0146%" height="15" fill="rgb(216,85,19)" fg:x="18970" fg:w="5"/><text x="55.4869%" y="255.50"></text></g><g><title>conway`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (35 samples, 0.10%)</title><rect x="55.1757%" y="261" width="0.1019%" height="15" fill="rgb(235,228,7)" fg:x="18949" fg:w="35"/><text x="55.4257%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="55.2660%" y="245" width="0.0116%" height="15" fill="rgb(245,175,0)" fg:x="18980" fg:w="4"/><text x="55.5160%" y="255.50"></text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_command_encoder (49 samples, 0.14%)</title><rect x="55.1408%" y="277" width="0.1427%" height="15" fill="rgb(208,168,36)" fg:x="18937" fg:w="49"/><text x="55.3908%" y="287.50"></text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::device_create_command_encoder (50 samples, 0.15%)</title><rect x="55.1408%" y="293" width="0.1456%" height="15" fill="rgb(246,171,24)" fg:x="18937" fg:w="50"/><text x="55.3908%" y="303.50"></text></g><g><title>conway`wgpu::Device::create_command_encoder (54 samples, 0.16%)</title><rect x="55.1321%" y="309" width="0.1572%" height="15" fill="rgb(215,142,24)" fg:x="18934" fg:w="54"/><text x="55.3821%" y="319.50"></text></g><g><title>conway`hashbrown::set::HashSet&lt;T,S,A&gt;::insert (9 samples, 0.03%)</title><rect x="55.3301%" y="245" width="0.0262%" height="15" fill="rgb(250,187,7)" fg:x="19002" fg:w="9"/><text x="55.5801%" y="255.50"></text></g><g><title>conway`wgpu_core::command::transfer::validate_texture_copy_range (6 samples, 0.02%)</title><rect x="55.3650%" y="245" width="0.0175%" height="15" fill="rgb(228,66,33)" fg:x="19014" fg:w="6"/><text x="55.6150%" y="255.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (6 samples, 0.02%)</title><rect x="55.3883%" y="213" width="0.0175%" height="15" fill="rgb(234,215,21)" fg:x="19022" fg:w="6"/><text x="55.6383%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::IntelStateHeaps (7 samples, 0.02%)</title><rect x="55.4378%" y="149" width="0.0204%" height="15" fill="rgb(222,191,20)" fg:x="19039" fg:w="7"/><text x="55.6878%" y="159.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (11 samples, 0.03%)</title><rect x="55.4902%" y="133" width="0.0320%" height="15" fill="rgb(245,79,54)" fg:x="19057" fg:w="11"/><text x="55.7402%" y="143.50"></text></g><g><title>Metal`MTLResourceListRelease (7 samples, 0.02%)</title><rect x="55.5426%" y="117" width="0.0204%" height="15" fill="rgb(240,10,37)" fg:x="19075" fg:w="7"/><text x="55.7926%" y="127.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStoragePoolCreateStorage (10 samples, 0.03%)</title><rect x="55.5397%" y="133" width="0.0291%" height="15" fill="rgb(214,192,32)" fg:x="19074" fg:w="10"/><text x="55.7897%" y="143.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (5 samples, 0.01%)</title><rect x="55.5863%" y="133" width="0.0146%" height="15" fill="rgb(209,36,54)" fg:x="19090" fg:w="5"/><text x="55.8363%" y="143.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (52 samples, 0.15%)</title><rect x="55.4582%" y="149" width="0.1514%" height="15" fill="rgb(220,10,11)" fg:x="19046" fg:w="52"/><text x="55.7082%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (87 samples, 0.25%)</title><rect x="55.4291%" y="165" width="0.2533%" height="15" fill="rgb(221,106,17)" fg:x="19036" fg:w="87"/><text x="55.6791%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.05%)</title><rect x="55.6358%" y="149" width="0.0466%" height="15" fill="rgb(251,142,44)" fg:x="19107" fg:w="16"/><text x="55.8858%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (16 samples, 0.05%)</title><rect x="55.6358%" y="133" width="0.0466%" height="15" fill="rgb(238,13,15)" fg:x="19107" fg:w="16"/><text x="55.8858%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (10 samples, 0.03%)</title><rect x="55.6533%" y="117" width="0.0291%" height="15" fill="rgb(208,107,27)" fg:x="19113" fg:w="10"/><text x="55.9033%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:] (96 samples, 0.28%)</title><rect x="55.4261%" y="181" width="0.2795%" height="15" fill="rgb(205,136,37)" fg:x="19035" fg:w="96"/><text x="55.6761%" y="191.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:] (4 samples, 0.01%)</title><rect x="55.7086%" y="181" width="0.0116%" height="15" fill="rgb(250,205,27)" fg:x="19132" fg:w="4"/><text x="55.9586%" y="191.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (7 samples, 0.02%)</title><rect x="55.7202%" y="181" width="0.0204%" height="15" fill="rgb(210,80,43)" fg:x="19136" fg:w="7"/><text x="55.9702%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="55.7202%" y="165" width="0.0204%" height="15" fill="rgb(247,160,36)" fg:x="19136" fg:w="7"/><text x="55.9702%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="55.7202%" y="149" width="0.0204%" height="15" fill="rgb(234,13,49)" fg:x="19136" fg:w="7"/><text x="55.9702%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (6 samples, 0.02%)</title><rect x="55.7406%" y="181" width="0.0175%" height="15" fill="rgb(234,122,0)" fg:x="19143" fg:w="6"/><text x="55.9906%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (118 samples, 0.34%)</title><rect x="55.4174%" y="197" width="0.3436%" height="15" fill="rgb(207,146,38)" fg:x="19032" fg:w="118"/><text x="55.6674%" y="207.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (6 samples, 0.02%)</title><rect x="55.7610%" y="197" width="0.0175%" height="15" fill="rgb(207,177,25)" fg:x="19150" fg:w="6"/><text x="56.0110%" y="207.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (7 samples, 0.02%)</title><rect x="55.8396%" y="133" width="0.0204%" height="15" fill="rgb(211,178,42)" fg:x="19177" fg:w="7"/><text x="56.0896%" y="143.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (5 samples, 0.01%)</title><rect x="55.8600%" y="133" width="0.0146%" height="15" fill="rgb(230,69,54)" fg:x="19184" fg:w="5"/><text x="56.1100%" y="143.50"></text></g><g><title>CoreFoundation`__CFStrHashEightBit2 (5 samples, 0.01%)</title><rect x="55.8746%" y="133" width="0.0146%" height="15" fill="rgb(214,135,41)" fg:x="19189" fg:w="5"/><text x="56.1246%" y="143.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (32 samples, 0.09%)</title><rect x="55.7989%" y="165" width="0.0932%" height="15" fill="rgb(237,67,25)" fg:x="19163" fg:w="32"/><text x="56.0489%" y="175.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (31 samples, 0.09%)</title><rect x="55.8018%" y="149" width="0.0903%" height="15" fill="rgb(222,189,50)" fg:x="19164" fg:w="31"/><text x="56.0518%" y="159.50"></text></g><g><title>conway`metal::nsstring_from_str (40 samples, 0.12%)</title><rect x="55.7930%" y="181" width="0.1165%" height="15" fill="rgb(245,148,34)" fg:x="19161" fg:w="40"/><text x="56.0430%" y="191.50"></text></g><g><title>conway`metal::commandbuffer::CommandBufferRef::set_label (54 samples, 0.16%)</title><rect x="55.7785%" y="197" width="0.1572%" height="15" fill="rgb(222,29,6)" fg:x="19156" fg:w="54"/><text x="56.0285%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.02%)</title><rect x="55.9124%" y="181" width="0.0233%" height="15" fill="rgb(221,189,43)" fg:x="19202" fg:w="8"/><text x="56.1624%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (4 samples, 0.01%)</title><rect x="55.9415%" y="197" width="0.0116%" height="15" fill="rgb(207,36,27)" fg:x="19212" fg:w="4"/><text x="56.1915%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (7 samples, 0.02%)</title><rect x="55.9532%" y="197" width="0.0204%" height="15" fill="rgb(217,90,24)" fg:x="19216" fg:w="7"/><text x="56.2032%" y="207.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (194 samples, 0.56%)</title><rect x="55.4174%" y="213" width="0.5649%" height="15" fill="rgb(224,66,35)" fg:x="19032" fg:w="194"/><text x="55.6674%" y="223.50"></text></g><g><title>conway`wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (210 samples, 0.61%)</title><rect x="55.3825%" y="245" width="0.6115%" height="15" fill="rgb(221,13,50)" fg:x="19020" fg:w="210"/><text x="55.6325%" y="255.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (210 samples, 0.61%)</title><rect x="55.3825%" y="229" width="0.6115%" height="15" fill="rgb(236,68,49)" fg:x="19020" fg:w="210"/><text x="55.6325%" y="239.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer contents] (4 samples, 0.01%)</title><rect x="55.9998%" y="229" width="0.0116%" height="15" fill="rgb(229,146,28)" fg:x="19232" fg:w="4"/><text x="56.2498%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelDevice getUniqueID:clampMax:] (7 samples, 0.02%)</title><rect x="56.0638%" y="165" width="0.0204%" height="15" fill="rgb(225,31,38)" fg:x="19254" fg:w="7"/><text x="56.3138%" y="175.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (8 samples, 0.02%)</title><rect x="56.1454%" y="85" width="0.0233%" height="15" fill="rgb(250,208,3)" fg:x="19282" fg:w="8"/><text x="56.3954%" y="95.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (7 samples, 0.02%)</title><rect x="56.1483%" y="69" width="0.0204%" height="15" fill="rgb(246,54,23)" fg:x="19283" fg:w="7"/><text x="56.3983%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (434 samples, 1.26%)</title><rect x="56.1803%" y="53" width="1.2637%" height="15" fill="rgb(243,76,11)" fg:x="19294" fg:w="434"/><text x="56.4303%" y="63.50"></text></g><g><title>IOKit`io_connect_method (440 samples, 1.28%)</title><rect x="56.1687%" y="69" width="1.2812%" height="15" fill="rgb(245,21,50)" fg:x="19290" fg:w="440"/><text x="56.4187%" y="79.50"></text></g><g><title>IOKit`IOConnectCallMethod (442 samples, 1.29%)</title><rect x="56.1687%" y="85" width="1.2870%" height="15" fill="rgb(228,9,43)" fg:x="19290" fg:w="442"/><text x="56.4187%" y="95.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (759 samples, 2.21%)</title><rect x="56.1279%" y="101" width="2.2101%" height="15" fill="rgb(208,100,47)" fg:x="19276" fg:w="759"/><text x="56.3779%" y="111.50">I..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (303 samples, 0.88%)</title><rect x="57.4557%" y="85" width="0.8823%" height="15" fill="rgb(232,26,8)" fg:x="19732" fg:w="303"/><text x="57.7057%" y="95.50"></text></g><g><title>libdyld.dylib`dyld_program_sdk_at_least (9 samples, 0.03%)</title><rect x="58.3525%" y="101" width="0.0262%" height="15" fill="rgb(216,166,38)" fg:x="20040" fg:w="9"/><text x="58.6025%" y="111.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (7 samples, 0.02%)</title><rect x="58.3787%" y="101" width="0.0204%" height="15" fill="rgb(251,202,51)" fg:x="20049" fg:w="7"/><text x="58.6287%" y="111.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (4 samples, 0.01%)</title><rect x="58.3874%" y="85" width="0.0116%" height="15" fill="rgb(254,216,34)" fg:x="20052" fg:w="4"/><text x="58.6374%" y="95.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (790 samples, 2.30%)</title><rect x="56.1075%" y="117" width="2.3003%" height="15" fill="rgb(251,32,27)" fg:x="19269" fg:w="790"/><text x="56.3575%" y="127.50">M..</text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (803 samples, 2.34%)</title><rect x="56.0959%" y="133" width="2.3382%" height="15" fill="rgb(208,127,28)" fg:x="19265" fg:w="803"/><text x="56.3459%" y="143.50">M..</text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (808 samples, 2.35%)</title><rect x="56.0842%" y="165" width="2.3527%" height="15" fill="rgb(224,137,22)" fg:x="19261" fg:w="808"/><text x="56.3342%" y="175.50">M..</text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:gpuAddress:args:argsSize:deallocator:] (808 samples, 2.35%)</title><rect x="56.0842%" y="149" width="2.3527%" height="15" fill="rgb(254,70,32)" fg:x="19261" fg:w="808"/><text x="56.3342%" y="159.50">M..</text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (820 samples, 2.39%)</title><rect x="56.0551%" y="181" width="2.3877%" height="15" fill="rgb(229,75,37)" fg:x="19251" fg:w="820"/><text x="56.3051%" y="191.50">Ap..</text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (6 samples, 0.02%)</title><rect x="58.4515%" y="181" width="0.0175%" height="15" fill="rgb(252,64,23)" fg:x="20074" fg:w="6"/><text x="58.7015%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.02%)</title><rect x="58.4515%" y="165" width="0.0175%" height="15" fill="rgb(232,162,48)" fg:x="20074" fg:w="6"/><text x="58.7015%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.02%)</title><rect x="58.4515%" y="149" width="0.0175%" height="15" fill="rgb(246,160,12)" fg:x="20074" fg:w="6"/><text x="58.7015%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="58.4544%" y="133" width="0.0146%" height="15" fill="rgb(247,166,0)" fg:x="20075" fg:w="5"/><text x="58.7044%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (836 samples, 2.43%)</title><rect x="56.0434%" y="197" width="2.4343%" height="15" fill="rgb(249,219,21)" fg:x="19247" fg:w="836"/><text x="56.2934%" y="207.50">Ap..</text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (7 samples, 0.02%)</title><rect x="58.4981%" y="133" width="0.0204%" height="15" fill="rgb(205,209,3)" fg:x="20090" fg:w="7"/><text x="58.7481%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="58.5068%" y="117" width="0.0116%" height="15" fill="rgb(243,44,1)" fg:x="20093" fg:w="4"/><text x="58.7568%" y="127.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (7 samples, 0.02%)</title><rect x="58.5185%" y="133" width="0.0204%" height="15" fill="rgb(206,159,16)" fg:x="20097" fg:w="7"/><text x="58.7685%" y="143.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (19 samples, 0.06%)</title><rect x="58.4923%" y="165" width="0.0553%" height="15" fill="rgb(244,77,30)" fg:x="20088" fg:w="19"/><text x="58.7423%" y="175.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (19 samples, 0.06%)</title><rect x="58.4923%" y="149" width="0.0553%" height="15" fill="rgb(218,69,12)" fg:x="20088" fg:w="19"/><text x="58.7423%" y="159.50"></text></g><g><title>conway`metal::nsstring_from_str (20 samples, 0.06%)</title><rect x="58.4923%" y="181" width="0.0582%" height="15" fill="rgb(212,87,7)" fg:x="20088" fg:w="20"/><text x="58.7423%" y="191.50"></text></g><g><title>conway`metal::resource::ResourceRef::set_label (26 samples, 0.08%)</title><rect x="58.4894%" y="197" width="0.0757%" height="15" fill="rgb(245,114,25)" fg:x="20087" fg:w="26"/><text x="58.7394%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="58.5505%" y="181" width="0.0146%" height="15" fill="rgb(210,61,42)" fg:x="20108" fg:w="5"/><text x="58.8005%" y="191.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (875 samples, 2.55%)</title><rect x="56.0376%" y="213" width="2.5478%" height="15" fill="rgb(211,52,33)" fg:x="19245" fg:w="875"/><text x="56.2876%" y="223.50">co..</text></g><g><title>conway`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (883 samples, 2.57%)</title><rect x="56.0172%" y="229" width="2.5711%" height="15" fill="rgb(234,58,33)" fg:x="19238" fg:w="883"/><text x="56.2672%" y="239.50">co..</text></g><g><title>conway`wgpu_core::device::queue::prepare_staging_buffer (898 samples, 2.61%)</title><rect x="55.9939%" y="245" width="2.6148%" height="15" fill="rgb(220,115,36)" fg:x="19230" fg:w="898"/><text x="56.2439%" y="255.50">co..</text></g><g><title>conway`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::map_buffer (7 samples, 0.02%)</title><rect x="58.5884%" y="229" width="0.0204%" height="15" fill="rgb(243,153,54)" fg:x="20121" fg:w="7"/><text x="58.8384%" y="239.50"></text></g><g><title>conway`metal::buffer::BufferRef::contents (6 samples, 0.02%)</title><rect x="58.5913%" y="213" width="0.0175%" height="15" fill="rgb(251,47,18)" fg:x="20122" fg:w="6"/><text x="58.8413%" y="223.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_single (8 samples, 0.02%)</title><rect x="58.6175%" y="245" width="0.0233%" height="15" fill="rgb(242,102,42)" fg:x="20131" fg:w="8"/><text x="58.8675%" y="255.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::initializeIndirectState (5 samples, 0.01%)</title><rect x="58.7631%" y="149" width="0.0146%" height="15" fill="rgb(234,31,38)" fg:x="20181" fg:w="5"/><text x="59.0131%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::updateBlitKernels (20 samples, 0.06%)</title><rect x="58.7776%" y="149" width="0.0582%" height="15" fill="rgb(221,117,51)" fg:x="20186" fg:w="20"/><text x="59.0276%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.04%)</title><rect x="58.7951%" y="133" width="0.0408%" height="15" fill="rgb(212,20,18)" fg:x="20192" fg:w="14"/><text x="59.0451%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (29 samples, 0.08%)</title><rect x="58.8621%" y="117" width="0.0844%" height="15" fill="rgb(245,133,36)" fg:x="20215" fg:w="29"/><text x="59.1121%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.05%)</title><rect x="58.8970%" y="101" width="0.0495%" height="15" fill="rgb(212,6,19)" fg:x="20227" fg:w="17"/><text x="59.1470%" y="111.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="58.9523%" y="117" width="0.0146%" height="15" fill="rgb(218,1,36)" fg:x="20246" fg:w="5"/><text x="59.2023%" y="127.50"></text></g><g><title>libobjc.A.dylib`objc_retain (5 samples, 0.01%)</title><rect x="58.9669%" y="117" width="0.0146%" height="15" fill="rgb(246,84,54)" fg:x="20251" fg:w="5"/><text x="59.2169%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::initialize (45 samples, 0.13%)</title><rect x="58.8533%" y="133" width="0.1310%" height="15" fill="rgb(242,110,6)" fg:x="20212" fg:w="45"/><text x="59.1033%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelEncoderBase::getStateHeaps (52 samples, 0.15%)</title><rect x="58.8446%" y="149" width="0.1514%" height="15" fill="rgb(214,47,5)" fg:x="20209" fg:w="52"/><text x="59.0946%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="58.9844%" y="133" width="0.0116%" height="15" fill="rgb(218,159,25)" fg:x="20257" fg:w="4"/><text x="59.2344%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelEncoderBase::writePipeControl (4 samples, 0.01%)</title><rect x="58.9960%" y="149" width="0.0116%" height="15" fill="rgb(215,211,28)" fg:x="20261" fg:w="4"/><text x="59.2460%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::preparePipeline (94 samples, 0.27%)</title><rect x="58.7398%" y="165" width="0.2737%" height="15" fill="rgb(238,59,32)" fg:x="20173" fg:w="94"/><text x="58.9898%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGBL::CBAddCommand (4 samples, 0.01%)</title><rect x="59.0222%" y="165" width="0.0116%" height="15" fill="rgb(226,82,3)" fg:x="20270" fg:w="4"/><text x="59.2722%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGBL::CBAddCommand (7 samples, 0.02%)</title><rect x="59.0892%" y="149" width="0.0204%" height="15" fill="rgb(240,164,32)" fg:x="20293" fg:w="7"/><text x="59.3392%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="59.0979%" y="133" width="0.0116%" height="15" fill="rgb(232,46,7)" fg:x="20296" fg:w="4"/><text x="59.3479%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGBL::blit3d_prepare_commands (36 samples, 0.10%)</title><rect x="59.0368%" y="165" width="0.1048%" height="15" fill="rgb(229,129,53)" fg:x="20275" fg:w="36"/><text x="59.2868%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::programBlit (149 samples, 0.43%)</title><rect x="58.7165%" y="181" width="0.4339%" height="15" fill="rgb(234,188,29)" fg:x="20165" fg:w="149"/><text x="58.9665%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`MTLIG::getIntelTextureFormatIndex (5 samples, 0.01%)</title><rect x="59.1562%" y="181" width="0.0146%" height="15" fill="rgb(246,141,4)" fg:x="20316" fg:w="5"/><text x="59.4062%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.02%)</title><rect x="59.1736%" y="149" width="0.0175%" height="15" fill="rgb(229,23,39)" fg:x="20322" fg:w="6"/><text x="59.4236%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="59.1736%" y="133" width="0.0175%" height="15" fill="rgb(206,12,3)" fg:x="20322" fg:w="6"/><text x="59.4236%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`void std::__1::vector&lt;IGBL::BlitRectPair, std::__1::allocator&lt;IGBL::BlitRectPair&gt; &gt;::__push_back_slow_path&lt;IGBL::BlitRectPair const&amp;&gt; (8 samples, 0.02%)</title><rect x="59.1707%" y="181" width="0.0233%" height="15" fill="rgb(252,226,20)" fg:x="20321" fg:w="8"/><text x="59.4207%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`std::__1::__split_buffer&lt;IGBL::BlitRectPair, std::__1::allocator&lt;IGBL::BlitRectPair&gt;&amp;&gt;::__split_buffer(unsigned long, unsigned long, std::__1::allocator (7 samples, 0.02%)</title><rect x="59.1736%" y="165" width="0.0204%" height="15" fill="rgb(216,123,35)" fg:x="20322" fg:w="7"/><text x="59.4236%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToTexture (190 samples, 0.55%)</title><rect x="58.6553%" y="197" width="0.5532%" height="15" fill="rgb(212,68,40)" fg:x="20144" fg:w="190"/><text x="58.9053%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.02%)</title><rect x="59.2260%" y="197" width="0.0204%" height="15" fill="rgb(254,125,32)" fg:x="20340" fg:w="7"/><text x="59.4760%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:] (206 samples, 0.60%)</title><rect x="58.6524%" y="213" width="0.5998%" height="15" fill="rgb(253,97,22)" fg:x="20143" fg:w="206"/><text x="58.9024%" y="223.50"></text></g><g><title>conway`metal::encoder::BlitCommandEncoderRef::copy_from_buffer_to_texture (213 samples, 0.62%)</title><rect x="58.6466%" y="229" width="0.6202%" height="15" fill="rgb(241,101,14)" fg:x="20141" fg:w="213"/><text x="58.8966%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToTexture (5 samples, 0.01%)</title><rect x="59.2522%" y="213" width="0.0146%" height="15" fill="rgb(238,103,29)" fg:x="20349" fg:w="5"/><text x="59.5022%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::IGAccelBlitCommandEncoder (6 samples, 0.02%)</title><rect x="59.3105%" y="165" width="0.0175%" height="15" fill="rgb(233,195,47)" fg:x="20369" fg:w="6"/><text x="59.5605%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`CommandStreamDataBuffer::bind (6 samples, 0.02%)</title><rect x="59.3483%" y="133" width="0.0175%" height="15" fill="rgb(246,218,30)" fg:x="20382" fg:w="6"/><text x="59.5983%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`CommandStreamPrimary::allocAndBindPrimary (19 samples, 0.06%)</title><rect x="59.3338%" y="149" width="0.0553%" height="15" fill="rgb(219,145,47)" fg:x="20377" fg:w="19"/><text x="59.5838%" y="159.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageBeginSegment (5 samples, 0.01%)</title><rect x="59.3745%" y="133" width="0.0146%" height="15" fill="rgb(243,12,26)" fg:x="20391" fg:w="5"/><text x="59.6245%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGBufferMemory&lt;1ul&gt;::init (17 samples, 0.05%)</title><rect x="59.3920%" y="149" width="0.0495%" height="15" fill="rgb(214,87,16)" fg:x="20397" fg:w="17"/><text x="59.6420%" y="159.50"></text></g><g><title>Metal`MTLResourceListAddResource (15 samples, 0.04%)</title><rect x="59.3978%" y="133" width="0.0437%" height="15" fill="rgb(208,99,42)" fg:x="20399" fg:w="15"/><text x="59.6478%" y="143.50"></text></g><g><title>Metal`MTLResourceListAddHashValue(MTLResourceListPrivate&amp;, unsigned long long) (4 samples, 0.01%)</title><rect x="59.4299%" y="117" width="0.0116%" height="15" fill="rgb(253,99,2)" fg:x="20410" fg:w="4"/><text x="59.6799%" y="127.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="59.4503%" y="149" width="0.0116%" height="15" fill="rgb(220,168,23)" fg:x="20417" fg:w="4"/><text x="59.7003%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::beginEncoding (48 samples, 0.14%)</title><rect x="59.3280%" y="165" width="0.1398%" height="15" fill="rgb(242,38,24)" fg:x="20375" fg:w="48"/><text x="59.5780%" y="175.50"></text></g><g><title>Metal`-[_MTLCommandBuffer errorOptions] (5 samples, 0.01%)</title><rect x="59.4823%" y="149" width="0.0146%" height="15" fill="rgb(225,182,9)" fg:x="20428" fg:w="5"/><text x="59.7323%" y="159.50"></text></g><g><title>Metal`-[_MTLCommandEncoder initWithCommandBuffer:] (16 samples, 0.05%)</title><rect x="59.4968%" y="149" width="0.0466%" height="15" fill="rgb(243,178,37)" fg:x="20433" fg:w="16"/><text x="59.7468%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (4 samples, 0.01%)</title><rect x="59.5580%" y="149" width="0.0116%" height="15" fill="rgb(232,139,19)" fg:x="20454" fg:w="4"/><text x="59.8080%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder initWithCommandBuffer:] (35 samples, 0.10%)</title><rect x="59.4735%" y="165" width="0.1019%" height="15" fill="rgb(225,201,24)" fg:x="20425" fg:w="35"/><text x="59.7235%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder initWithCommandBuffer:stateDescriptor:] (104 samples, 0.30%)</title><rect x="59.2959%" y="181" width="0.3028%" height="15" fill="rgb(221,47,46)" fg:x="20364" fg:w="104"/><text x="59.5459%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelState::IntelState (14 samples, 0.04%)</title><rect x="59.6075%" y="165" width="0.0408%" height="15" fill="rgb(249,23,13)" fg:x="20471" fg:w="14"/><text x="59.8575%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (11 samples, 0.03%)</title><rect x="59.6483%" y="165" width="0.0320%" height="15" fill="rgb(219,9,5)" fg:x="20485" fg:w="11"/><text x="59.8983%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.03%)</title><rect x="59.6512%" y="149" width="0.0291%" height="15" fill="rgb(254,171,16)" fg:x="20486" fg:w="10"/><text x="59.9012%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.03%)</title><rect x="59.6541%" y="133" width="0.0262%" height="15" fill="rgb(230,171,20)" fg:x="20487" fg:w="9"/><text x="59.9041%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (7 samples, 0.02%)</title><rect x="59.6599%" y="117" width="0.0204%" height="15" fill="rgb(210,71,41)" fg:x="20489" fg:w="7"/><text x="59.9099%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initContextStateDescriptorForEngine:] (36 samples, 0.10%)</title><rect x="59.5988%" y="181" width="0.1048%" height="15" fill="rgb(206,173,20)" fg:x="20468" fg:w="36"/><text x="59.8488%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="59.6803%" y="165" width="0.0233%" height="15" fill="rgb(233,88,34)" fg:x="20496" fg:w="8"/><text x="59.9303%" y="175.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (4 samples, 0.01%)</title><rect x="59.7269%" y="181" width="0.0116%" height="15" fill="rgb(223,209,46)" fg:x="20512" fg:w="4"/><text x="59.9769%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.01%)</title><rect x="59.7269%" y="165" width="0.0116%" height="15" fill="rgb(250,43,18)" fg:x="20512" fg:w="4"/><text x="59.9769%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="59.7385%" y="181" width="0.0146%" height="15" fill="rgb(208,13,10)" fg:x="20516" fg:w="5"/><text x="59.9885%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.01%)</title><rect x="59.7531%" y="181" width="0.0116%" height="15" fill="rgb(212,200,36)" fg:x="20521" fg:w="4"/><text x="60.0031%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer blitCommandEncoder] (166 samples, 0.48%)</title><rect x="59.2930%" y="197" width="0.4834%" height="15" fill="rgb(225,90,30)" fg:x="20363" fg:w="166"/><text x="59.5430%" y="207.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (174 samples, 0.51%)</title><rect x="59.2843%" y="213" width="0.5067%" height="15" fill="rgb(236,182,39)" fg:x="20360" fg:w="174"/><text x="59.5343%" y="223.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::copy_buffer_to_texture (396 samples, 1.15%)</title><rect x="58.6466%" y="245" width="1.1531%" height="15" fill="rgb(212,144,35)" fg:x="20141" fg:w="396"/><text x="58.8966%" y="255.50"></text></g><g><title>conway`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (180 samples, 0.52%)</title><rect x="59.2755%" y="229" width="0.5241%" height="15" fill="rgb(228,63,44)" fg:x="20357" fg:w="180"/><text x="59.5255%" y="239.50"></text></g><g><title>conway`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (2,091 samples, 6.09%)</title><rect x="55.3155%" y="261" width="6.0886%" height="15" fill="rgb(228,109,6)" fg:x="18997" fg:w="2091"/><text x="55.5655%" y="271.50">conway`w..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (544 samples, 1.58%)</title><rect x="59.8201%" y="245" width="1.5840%" height="15" fill="rgb(238,117,24)" fg:x="20544" fg:w="544"/><text x="60.0701%" y="255.50"></text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (2,115 samples, 6.16%)</title><rect x="55.2922%" y="277" width="6.1585%" height="15" fill="rgb(242,26,26)" fg:x="18989" fg:w="2115"/><text x="55.5422%" y="287.50">conway`&lt;..</text></g><g><title>conway`wgpu_types::TextureFormat::describe (4 samples, 0.01%)</title><rect x="61.4390%" y="261" width="0.0116%" height="15" fill="rgb(221,92,48)" fg:x="21100" fg:w="4"/><text x="61.6890%" y="271.50"></text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (2,117 samples, 6.16%)</title><rect x="55.2922%" y="293" width="6.1643%" height="15" fill="rgb(209,209,32)" fg:x="18989" fg:w="2117"/><text x="55.5422%" y="303.50">conway`&lt;..</text></g><g><title>conway`wgpu::Queue::write_texture (2,122 samples, 6.18%)</title><rect x="55.2893%" y="309" width="6.1788%" height="15" fill="rgb(221,70,22)" fg:x="18988" fg:w="2122"/><text x="55.5393%" y="319.50">conway`w..</text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (4 samples, 0.01%)</title><rect x="61.4565%" y="293" width="0.0116%" height="15" fill="rgb(248,145,5)" fg:x="21106" fg:w="4"/><text x="61.7065%" y="303.50"></text></g><g><title>conway`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (4 samples, 0.01%)</title><rect x="61.6254%" y="245" width="0.0116%" height="15" fill="rgb(226,116,26)" fg:x="21164" fg:w="4"/><text x="61.8754%" y="255.50"></text></g><g><title>conway`wgpu_core::hub::FutureId&lt;I,T&gt;::assign (4 samples, 0.01%)</title><rect x="61.6807%" y="245" width="0.0116%" height="15" fill="rgb(244,5,17)" fg:x="21183" fg:w="4"/><text x="61.9307%" y="255.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureTracker&lt;A&gt;::insert_single (10 samples, 0.03%)</title><rect x="61.7244%" y="245" width="0.0291%" height="15" fill="rgb(252,159,33)" fg:x="21198" fg:w="10"/><text x="61.9744%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (291 samples, 0.85%)</title><rect x="62.0650%" y="133" width="0.8473%" height="15" fill="rgb(206,71,0)" fg:x="21315" fg:w="291"/><text x="62.3150%" y="143.50"></text></g><g><title>IOKit`io_connect_method (300 samples, 0.87%)</title><rect x="62.0418%" y="149" width="0.8735%" height="15" fill="rgb(233,118,54)" fg:x="21307" fg:w="300"/><text x="62.2918%" y="159.50"></text></g><g><title>IOKit`IOConnectCallMethod (315 samples, 0.92%)</title><rect x="62.0214%" y="165" width="0.9172%" height="15" fill="rgb(234,83,48)" fg:x="21300" fg:w="315"/><text x="62.2714%" y="175.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent init] (323 samples, 0.94%)</title><rect x="62.0126%" y="181" width="0.9405%" height="15" fill="rgb(228,3,54)" fg:x="21297" fg:w="323"/><text x="62.2626%" y="191.50"></text></g><g><title>QuartzCore`-[CALayer allowsWeakReference] (4 samples, 0.01%)</title><rect x="62.9706%" y="165" width="0.0116%" height="15" fill="rgb(226,155,13)" fg:x="21626" fg:w="4"/><text x="63.2206%" y="175.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:] (350 samples, 1.02%)</title><rect x="62.0010%" y="197" width="1.0191%" height="15" fill="rgb(241,28,37)" fg:x="21293" fg:w="350"/><text x="62.2510%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (18 samples, 0.05%)</title><rect x="62.9677%" y="181" width="0.0524%" height="15" fill="rgb(233,93,10)" fg:x="21625" fg:w="18"/><text x="63.2177%" y="191.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (8 samples, 0.02%)</title><rect x="62.9968%" y="165" width="0.0233%" height="15" fill="rgb(225,113,19)" fg:x="21635" fg:w="8"/><text x="63.2468%" y="175.50"></text></g><g><title>libobjc.A.dylib`weak_entry_for_referent(weak_table_t*, objc_object*) (4 samples, 0.01%)</title><rect x="63.0085%" y="149" width="0.0116%" height="15" fill="rgb(241,2,18)" fg:x="21639" fg:w="4"/><text x="63.2585%" y="159.50"></text></g><g><title>IOSurface`IOSurfaceClientGetDetachModeCode (5 samples, 0.01%)</title><rect x="63.0754%" y="165" width="0.0146%" height="15" fill="rgb(228,207,21)" fg:x="21662" fg:w="5"/><text x="63.3254%" y="175.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (20 samples, 0.06%)</title><rect x="63.0667%" y="181" width="0.0582%" height="15" fill="rgb(213,211,35)" fg:x="21659" fg:w="20"/><text x="63.3167%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.03%)</title><rect x="63.0987%" y="165" width="0.0262%" height="15" fill="rgb(209,83,10)" fg:x="21670" fg:w="9"/><text x="63.3487%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="63.1017%" y="149" width="0.0233%" height="15" fill="rgb(209,164,1)" fg:x="21671" fg:w="8"/><text x="63.3517%" y="159.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderArray init] (4 samples, 0.01%)</title><rect x="63.1395%" y="149" width="0.0116%" height="15" fill="rgb(213,184,43)" fg:x="21684" fg:w="4"/><text x="63.3895%" y="159.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (10 samples, 0.03%)</title><rect x="63.2094%" y="101" width="0.0291%" height="15" fill="rgb(231,61,34)" fg:x="21708" fg:w="10"/><text x="63.4594%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (10 samples, 0.03%)</title><rect x="63.2094%" y="85" width="0.0291%" height="15" fill="rgb(235,75,3)" fg:x="21708" fg:w="10"/><text x="63.4594%" y="95.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (18 samples, 0.05%)</title><rect x="63.2007%" y="133" width="0.0524%" height="15" fill="rgb(220,106,47)" fg:x="21705" fg:w="18"/><text x="63.4507%" y="143.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (15 samples, 0.04%)</title><rect x="63.2094%" y="117" width="0.0437%" height="15" fill="rgb(210,196,33)" fg:x="21708" fg:w="15"/><text x="63.4594%" y="127.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (5 samples, 0.01%)</title><rect x="63.2589%" y="133" width="0.0146%" height="15" fill="rgb(229,154,42)" fg:x="21725" fg:w="5"/><text x="63.5089%" y="143.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (4 samples, 0.01%)</title><rect x="63.2793%" y="133" width="0.0116%" height="15" fill="rgb(228,114,26)" fg:x="21732" fg:w="4"/><text x="63.5293%" y="143.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (48 samples, 0.14%)</title><rect x="63.1599%" y="149" width="0.1398%" height="15" fill="rgb(208,144,1)" fg:x="21691" fg:w="48"/><text x="63.4099%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.03%)</title><rect x="63.2997%" y="149" width="0.0291%" height="15" fill="rgb(239,112,37)" fg:x="21739" fg:w="10"/><text x="63.5497%" y="159.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (73 samples, 0.21%)</title><rect x="63.1279%" y="165" width="0.2126%" height="15" fill="rgb(210,96,50)" fg:x="21680" fg:w="73"/><text x="63.3779%" y="175.50"></text></g><g><title>QuartzCore`release_sample(unsigned int, unsigned long long, void*) (.9331) (4 samples, 0.01%)</title><rect x="63.3404%" y="165" width="0.0116%" height="15" fill="rgb(222,178,2)" fg:x="21753" fg:w="4"/><text x="63.5904%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`find_zone_and_free (4 samples, 0.01%)</title><rect x="63.3637%" y="165" width="0.0116%" height="15" fill="rgb(226,74,18)" fg:x="21761" fg:w="4"/><text x="63.6137%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.01%)</title><rect x="63.3754%" y="165" width="0.0116%" height="15" fill="rgb(225,67,54)" fg:x="21765" fg:w="4"/><text x="63.6254%" y="175.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (91 samples, 0.26%)</title><rect x="63.1249%" y="181" width="0.2650%" height="15" fill="rgb(251,92,32)" fg:x="21679" fg:w="91"/><text x="63.3749%" y="191.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (130 samples, 0.38%)</title><rect x="63.0230%" y="197" width="0.3785%" height="15" fill="rgb(228,149,22)" fg:x="21644" fg:w="130"/><text x="63.2730%" y="207.50"></text></g><g><title>QuartzCore`allocate_drawable_texture(id&lt;MTLDevice&gt;, __IOSurface*, unsigned int, unsigned int, MTLPixelFormat, unsigned long long, bool, NSString*) (4 samples, 0.01%)</title><rect x="63.4278%" y="181" width="0.0116%" height="15" fill="rgb(243,54,13)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelDevice newTextureWithDescriptor:iosurface:plane:] (4 samples, 0.01%)</title><rect x="63.4278%" y="165" width="0.0116%" height="15" fill="rgb(243,180,28)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelTexture initWithDevice:descriptor:iosurface:plane:field:args:argsSize:] (4 samples, 0.01%)</title><rect x="63.4278%" y="149" width="0.0116%" height="15" fill="rgb(208,167,24)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelTexture initWithDevice:descriptor:iosurface:plane:field:args:argsSize:] (4 samples, 0.01%)</title><rect x="63.4278%" y="133" width="0.0116%" height="15" fill="rgb(245,73,45)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="143.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (4 samples, 0.01%)</title><rect x="63.4278%" y="117" width="0.0116%" height="15" fill="rgb(237,203,48)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="127.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (4 samples, 0.01%)</title><rect x="63.4278%" y="101" width="0.0116%" height="15" fill="rgb(211,197,16)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="111.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (4 samples, 0.01%)</title><rect x="63.4278%" y="85" width="0.0116%" height="15" fill="rgb(243,99,51)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="95.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.01%)</title><rect x="63.4278%" y="69" width="0.0116%" height="15" fill="rgb(215,123,29)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="79.50"></text></g><g><title>IOKit`io_connect_method (4 samples, 0.01%)</title><rect x="63.4278%" y="53" width="0.0116%" height="15" fill="rgb(239,186,37)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.01%)</title><rect x="63.4278%" y="37" width="0.0116%" height="15" fill="rgb(252,136,39)" fg:x="21783" fg:w="4"/><text x="63.6778%" y="47.50"></text></g><g><title>QuartzCore`x_list_remove_head (10 samples, 0.03%)</title><rect x="63.4394%" y="181" width="0.0291%" height="15" fill="rgb(223,213,32)" fg:x="21787" fg:w="10"/><text x="63.6894%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.03%)</title><rect x="63.4394%" y="165" width="0.0291%" height="15" fill="rgb(233,115,5)" fg:x="21787" fg:w="10"/><text x="63.6894%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="63.4540%" y="149" width="0.0146%" height="15" fill="rgb(207,226,44)" fg:x="21792" fg:w="5"/><text x="63.7040%" y="159.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (19 samples, 0.06%)</title><rect x="63.4161%" y="197" width="0.0553%" height="15" fill="rgb(208,126,0)" fg:x="21779" fg:w="19"/><text x="63.6661%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_sema4_timedwait (11 samples, 0.03%)</title><rect x="63.4802%" y="181" width="0.0320%" height="15" fill="rgb(244,66,21)" fg:x="21801" fg:w="11"/><text x="63.7302%" y="191.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (156 samples, 0.45%)</title><rect x="63.4773%" y="197" width="0.4542%" height="15" fill="rgb(222,97,12)" fg:x="21800" fg:w="156"/><text x="63.7273%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (142 samples, 0.41%)</title><rect x="63.5180%" y="181" width="0.4135%" height="15" fill="rgb(219,213,19)" fg:x="21814" fg:w="142"/><text x="63.7680%" y="191.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (5 samples, 0.01%)</title><rect x="63.9344%" y="197" width="0.0146%" height="15" fill="rgb(252,169,30)" fg:x="21957" fg:w="5"/><text x="64.1844%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (5 samples, 0.01%)</title><rect x="63.9344%" y="181" width="0.0146%" height="15" fill="rgb(206,32,51)" fg:x="21957" fg:w="5"/><text x="64.1844%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.01%)</title><rect x="63.9548%" y="197" width="0.0116%" height="15" fill="rgb(250,172,42)" fg:x="21964" fg:w="4"/><text x="64.2048%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_object::rootAutorelease2 (5 samples, 0.01%)</title><rect x="63.9665%" y="197" width="0.0146%" height="15" fill="rgb(209,34,43)" fg:x="21968" fg:w="5"/><text x="64.2165%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_retain (10 samples, 0.03%)</title><rect x="63.9810%" y="197" width="0.0291%" height="15" fill="rgb(223,11,35)" fg:x="21973" fg:w="10"/><text x="64.2310%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (5 samples, 0.01%)</title><rect x="64.0189%" y="197" width="0.0146%" height="15" fill="rgb(251,219,26)" fg:x="21986" fg:w="5"/><text x="64.2689%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (5 samples, 0.01%)</title><rect x="64.0189%" y="181" width="0.0146%" height="15" fill="rgb(231,119,3)" fg:x="21986" fg:w="5"/><text x="64.2689%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (6 samples, 0.02%)</title><rect x="64.0334%" y="197" width="0.0175%" height="15" fill="rgb(216,97,11)" fg:x="21991" fg:w="6"/><text x="64.2834%" y="207.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (766 samples, 2.23%)</title><rect x="61.8292%" y="213" width="2.2304%" height="15" fill="rgb(223,59,9)" fg:x="21234" fg:w="766"/><text x="62.0792%" y="223.50">Q..</text></g><g><title>libsystem_kernel.dylib`kdebug_trace (7 samples, 0.02%)</title><rect x="64.0888%" y="213" width="0.0204%" height="15" fill="rgb(233,93,31)" fg:x="22010" fg:w="7"/><text x="64.3388%" y="223.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (6 samples, 0.02%)</title><rect x="64.1120%" y="213" width="0.0175%" height="15" fill="rgb(239,81,33)" fg:x="22018" fg:w="6"/><text x="64.3620%" y="223.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (799 samples, 2.33%)</title><rect x="61.8088%" y="229" width="2.3265%" height="15" fill="rgb(213,120,34)" fg:x="21227" fg:w="799"/><text x="62.0588%" y="239.50">c..</text></g><g><title>conway`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (829 samples, 2.41%)</title><rect x="61.7593%" y="245" width="2.4139%" height="15" fill="rgb(243,49,53)" fg:x="21210" fg:w="829"/><text x="62.0093%" y="255.50">co..</text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.03%)</title><rect x="64.1441%" y="229" width="0.0291%" height="15" fill="rgb(247,216,33)" fg:x="22029" fg:w="10"/><text x="64.3941%" y="239.50"></text></g><g><title>conway`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (911 samples, 2.65%)</title><rect x="61.5380%" y="261" width="2.6527%" height="15" fill="rgb(226,26,14)" fg:x="21134" fg:w="911"/><text x="61.7880%" y="271.50">co..</text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (933 samples, 2.72%)</title><rect x="61.5002%" y="277" width="2.7167%" height="15" fill="rgb(215,49,53)" fg:x="21121" fg:w="933"/><text x="61.7502%" y="287.50">co..</text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (939 samples, 2.73%)</title><rect x="61.4972%" y="293" width="2.7342%" height="15" fill="rgb(245,162,40)" fg:x="21120" fg:w="939"/><text x="61.7472%" y="303.50">co..</text></g><g><title>conway`wgpu::Surface::get_current_texture (951 samples, 2.77%)</title><rect x="61.4681%" y="309" width="2.7691%" height="15" fill="rgb(229,68,17)" fg:x="21110" fg:w="951"/><text x="61.7181%" y="319.50">co..</text></g><g><title>conway`wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister (4 samples, 0.01%)</title><rect x="64.2576%" y="261" width="0.0116%" height="15" fill="rgb(213,182,10)" fg:x="22068" fg:w="4"/><text x="64.5076%" y="271.50"></text></g><g><title>Metal`-[_MTLCommandQueue enqueueCommandBuffer:] (28 samples, 0.08%)</title><rect x="64.3100%" y="165" width="0.0815%" height="15" fill="rgb(245,125,30)" fg:x="22086" fg:w="28"/><text x="64.5600%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (27 samples, 0.08%)</title><rect x="64.3130%" y="149" width="0.0786%" height="15" fill="rgb(232,202,2)" fg:x="22087" fg:w="27"/><text x="64.5630%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (27 samples, 0.08%)</title><rect x="64.3130%" y="133" width="0.0786%" height="15" fill="rgb(237,140,51)" fg:x="22087" fg:w="27"/><text x="64.5630%" y="143.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (33 samples, 0.10%)</title><rect x="64.3100%" y="181" width="0.0961%" height="15" fill="rgb(236,157,25)" fg:x="22086" fg:w="33"/><text x="64.5600%" y="191.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (40 samples, 0.12%)</title><rect x="64.3100%" y="197" width="0.1165%" height="15" fill="rgb(219,209,0)" fg:x="22086" fg:w="40"/><text x="64.5600%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (42 samples, 0.12%)</title><rect x="64.3100%" y="213" width="0.1223%" height="15" fill="rgb(240,116,54)" fg:x="22086" fg:w="42"/><text x="64.5600%" y="223.50"></text></g><g><title>CoreFoundation`__CFStringHash (6 samples, 0.02%)</title><rect x="64.4702%" y="149" width="0.0175%" height="15" fill="rgb(216,10,36)" fg:x="22141" fg:w="6"/><text x="64.7202%" y="159.50"></text></g><g><title>CoreFoundation`____NSDictionaryI_new_block_invoke (4 samples, 0.01%)</title><rect x="64.4877%" y="149" width="0.0116%" height="15" fill="rgb(222,72,44)" fg:x="22147" fg:w="4"/><text x="64.7377%" y="159.50"></text></g><g><title>CoreFoundation`__NSDictionaryI_new (26 samples, 0.08%)</title><rect x="64.4440%" y="165" width="0.0757%" height="15" fill="rgb(232,159,9)" fg:x="22132" fg:w="26"/><text x="64.6940%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="64.5051%" y="149" width="0.0146%" height="15" fill="rgb(210,39,32)" fg:x="22153" fg:w="5"/><text x="64.7551%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.02%)</title><rect x="64.5313%" y="165" width="0.0204%" height="15" fill="rgb(216,194,45)" fg:x="22162" fg:w="7"/><text x="64.7813%" y="175.50"></text></g><g><title>CoreFoundation`+[NSDictionary dictionaryWithObjects:forKeys:count:] (43 samples, 0.13%)</title><rect x="64.4411%" y="181" width="0.1252%" height="15" fill="rgb(218,18,35)" fg:x="22131" fg:w="43"/><text x="64.6911%" y="191.50"></text></g><g><title>CoreFoundation`-[__NSCFBoolean boolValue] (5 samples, 0.01%)</title><rect x="64.5838%" y="165" width="0.0146%" height="15" fill="rgb(207,83,51)" fg:x="22180" fg:w="5"/><text x="64.8338%" y="175.50"></text></g><g><title>CoreFoundation`CFBooleanGetValue (5 samples, 0.01%)</title><rect x="64.5838%" y="149" width="0.0146%" height="15" fill="rgb(225,63,43)" fg:x="22180" fg:w="5"/><text x="64.8338%" y="159.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (8 samples, 0.02%)</title><rect x="64.6012%" y="149" width="0.0233%" height="15" fill="rgb(207,57,36)" fg:x="22186" fg:w="8"/><text x="64.8512%" y="159.50"></text></g><g><title>Metal`MTLDispatchListAppendBlock (10 samples, 0.03%)</title><rect x="64.6012%" y="165" width="0.0291%" height="15" fill="rgb(216,99,33)" fg:x="22186" fg:w="10"/><text x="64.8512%" y="175.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:options:] (22 samples, 0.06%)</title><rect x="64.5750%" y="181" width="0.0641%" height="15" fill="rgb(225,42,16)" fg:x="22177" fg:w="22"/><text x="64.8250%" y="191.50"></text></g><g><title>Metal`_MTLShouldRemapPresent (4 samples, 0.01%)</title><rect x="64.6391%" y="181" width="0.0116%" height="15" fill="rgb(220,201,45)" fg:x="22199" fg:w="4"/><text x="64.8891%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.03%)</title><rect x="64.6536%" y="181" width="0.0291%" height="15" fill="rgb(225,33,4)" fg:x="22204" fg:w="10"/><text x="64.9036%" y="191.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:] (89 samples, 0.26%)</title><rect x="64.4353%" y="197" width="0.2592%" height="15" fill="rgb(224,33,50)" fg:x="22129" fg:w="89"/><text x="64.6853%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer presentDrawable:] (94 samples, 0.27%)</title><rect x="64.4323%" y="213" width="0.2737%" height="15" fill="rgb(246,198,51)" fg:x="22128" fg:w="94"/><text x="64.6823%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="64.6944%" y="197" width="0.0116%" height="15" fill="rgb(205,22,4)" fg:x="22218" fg:w="4"/><text x="64.9444%" y="207.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStoragePoolCreateStorage (4 samples, 0.01%)</title><rect x="64.7439%" y="149" width="0.0116%" height="15" fill="rgb(206,3,8)" fg:x="22235" fg:w="4"/><text x="64.9939%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (13 samples, 0.04%)</title><rect x="64.7235%" y="165" width="0.0379%" height="15" fill="rgb(251,23,15)" fg:x="22228" fg:w="13"/><text x="64.9735%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (24 samples, 0.07%)</title><rect x="64.7119%" y="181" width="0.0699%" height="15" fill="rgb(252,88,28)" fg:x="22224" fg:w="24"/><text x="64.9619%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.02%)</title><rect x="64.7643%" y="165" width="0.0175%" height="15" fill="rgb(212,127,14)" fg:x="22242" fg:w="6"/><text x="65.0143%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.02%)</title><rect x="64.7643%" y="149" width="0.0175%" height="15" fill="rgb(247,145,37)" fg:x="22242" fg:w="6"/><text x="65.0143%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:] (32 samples, 0.09%)</title><rect x="64.7090%" y="197" width="0.0932%" height="15" fill="rgb(209,117,53)" fg:x="22223" fg:w="32"/><text x="64.9590%" y="207.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (6 samples, 0.02%)</title><rect x="64.8021%" y="197" width="0.0175%" height="15" fill="rgb(212,90,42)" fg:x="22255" fg:w="6"/><text x="65.0521%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.02%)</title><rect x="64.8021%" y="181" width="0.0175%" height="15" fill="rgb(218,164,37)" fg:x="22255" fg:w="6"/><text x="65.0521%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="64.8051%" y="165" width="0.0146%" height="15" fill="rgb(246,65,34)" fg:x="22256" fg:w="5"/><text x="65.0551%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBuffer] (41 samples, 0.12%)</title><rect x="64.7061%" y="213" width="0.1194%" height="15" fill="rgb(231,100,33)" fg:x="22222" fg:w="41"/><text x="64.9561%" y="223.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (5 samples, 0.01%)</title><rect x="64.8254%" y="213" width="0.0146%" height="15" fill="rgb(228,126,14)" fg:x="22263" fg:w="5"/><text x="65.0754%" y="223.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (5 samples, 0.01%)</title><rect x="64.8516%" y="181" width="0.0146%" height="15" fill="rgb(215,173,21)" fg:x="22272" fg:w="5"/><text x="65.1016%" y="191.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (4 samples, 0.01%)</title><rect x="64.8546%" y="165" width="0.0116%" height="15" fill="rgb(210,6,40)" fg:x="22273" fg:w="4"/><text x="65.1046%" y="175.50"></text></g><g><title>conway`metal::nsstring_from_str (6 samples, 0.02%)</title><rect x="64.8516%" y="197" width="0.0175%" height="15" fill="rgb(212,48,18)" fg:x="22272" fg:w="6"/><text x="65.1016%" y="207.50"></text></g><g><title>conway`metal::commandbuffer::CommandBufferRef::set_label (12 samples, 0.03%)</title><rect x="64.8458%" y="213" width="0.0349%" height="15" fill="rgb(230,214,11)" fg:x="22270" fg:w="12"/><text x="65.0958%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="64.8691%" y="197" width="0.0116%" height="15" fill="rgb(254,105,39)" fg:x="22278" fg:w="4"/><text x="65.1191%" y="207.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (204 samples, 0.59%)</title><rect x="64.3100%" y="229" width="0.5940%" height="15" fill="rgb(245,158,5)" fg:x="22086" fg:w="204"/><text x="64.5600%" y="239.50"></text></g><g><title>conway`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (213 samples, 0.62%)</title><rect x="64.2984%" y="245" width="0.6202%" height="15" fill="rgb(249,208,11)" fg:x="22082" fg:w="213"/><text x="64.5484%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="64.9070%" y="229" width="0.0116%" height="15" fill="rgb(210,39,28)" fg:x="22291" fg:w="4"/><text x="65.1570%" y="239.50"></text></g><g><title>conway`wgpu_core::hub::Storage&lt;T,I&gt;::remove (4 samples, 0.01%)</title><rect x="64.9215%" y="229" width="0.0116%" height="15" fill="rgb(211,56,53)" fg:x="22296" fg:w="4"/><text x="65.1715%" y="239.50"></text></g><g><title>conway`wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister (7 samples, 0.02%)</title><rect x="64.9186%" y="245" width="0.0204%" height="15" fill="rgb(226,201,30)" fg:x="22295" fg:w="7"/><text x="65.1686%" y="255.50"></text></g><g><title>conway`wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (6 samples, 0.02%)</title><rect x="64.9390%" y="245" width="0.0175%" height="15" fill="rgb(239,101,34)" fg:x="22302" fg:w="6"/><text x="65.1890%" y="255.50"></text></g><g><title>conway`wgpu_core::track::texture::TextureTracker&lt;A&gt;::remove (5 samples, 0.01%)</title><rect x="64.9565%" y="245" width="0.0146%" height="15" fill="rgb(226,209,5)" fg:x="22308" fg:w="5"/><text x="65.2065%" y="255.50"></text></g><g><title>conway`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (240 samples, 0.70%)</title><rect x="64.2780%" y="261" width="0.6988%" height="15" fill="rgb(250,105,47)" fg:x="22075" fg:w="240"/><text x="64.5280%" y="271.50"></text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (252 samples, 0.73%)</title><rect x="64.2518%" y="277" width="0.7338%" height="15" fill="rgb(230,72,3)" fg:x="22066" fg:w="252"/><text x="64.5018%" y="287.50"></text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::surface_present (254 samples, 0.74%)</title><rect x="64.2489%" y="293" width="0.7396%" height="15" fill="rgb(232,218,39)" fg:x="22065" fg:w="254"/><text x="64.4989%" y="303.50"></text></g><g><title>conway`wgpu::SurfaceTexture::present (260 samples, 0.76%)</title><rect x="64.2373%" y="309" width="0.7571%" height="15" fill="rgb(248,166,6)" fg:x="22061" fg:w="260"/><text x="64.4873%" y="319.50"></text></g><g><title>conway`wgpu_core::device::Device&lt;A&gt;::create_texture_view (4 samples, 0.01%)</title><rect x="65.0147%" y="245" width="0.0116%" height="15" fill="rgb(247,89,20)" fg:x="22328" fg:w="4"/><text x="65.2647%" y="255.50"></text></g><g><title>conway`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (15 samples, 0.04%)</title><rect x="65.0001%" y="261" width="0.0437%" height="15" fill="rgb(248,130,54)" fg:x="22323" fg:w="15"/><text x="65.2501%" y="271.50"></text></g><g><title>conway`wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (7 samples, 0.02%)</title><rect x="65.0438%" y="261" width="0.0204%" height="15" fill="rgb(234,196,4)" fg:x="22338" fg:w="7"/><text x="65.2938%" y="271.50"></text></g><g><title>conway`&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::texture_create_view (25 samples, 0.07%)</title><rect x="64.9972%" y="277" width="0.0728%" height="15" fill="rgb(250,143,31)" fg:x="22322" fg:w="25"/><text x="65.2472%" y="287.50"></text></g><g><title>conway`wgpu::Texture::create_view (29 samples, 0.08%)</title><rect x="64.9943%" y="309" width="0.0844%" height="15" fill="rgb(211,110,34)" fg:x="22321" fg:w="29"/><text x="65.2443%" y="319.50"></text></g><g><title>conway`&lt;T as wgpu::context::DynContext&gt;::texture_create_view (28 samples, 0.08%)</title><rect x="64.9972%" y="293" width="0.0815%" height="15" fill="rgb(215,124,48)" fg:x="22322" fg:w="28"/><text x="65.2472%" y="303.50"></text></g><g><title>conway`pixels::Pixels::render (5,953 samples, 17.33%)</title><rect x="47.7681%" y="325" width="17.3340%" height="15" fill="rgb(216,46,13)" fg:x="16405" fg:w="5953"/><text x="48.0181%" y="335.50">conway`pixels::Pixels::rend..</text></g><g><title>conway`wgpu::Device::create_command_encoder (4 samples, 0.01%)</title><rect x="65.1108%" y="325" width="0.0116%" height="15" fill="rgb(205,184,25)" fg:x="22361" fg:w="4"/><text x="65.3608%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (81 samples, 0.24%)</title><rect x="65.1749%" y="293" width="0.2359%" height="15" fill="rgb(228,1,10)" fg:x="22383" fg:w="81"/><text x="65.4249%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (81 samples, 0.24%)</title><rect x="65.1749%" y="277" width="0.2359%" height="15" fill="rgb(213,116,27)" fg:x="22383" fg:w="81"/><text x="65.4249%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (78 samples, 0.23%)</title><rect x="65.1836%" y="261" width="0.2271%" height="15" fill="rgb(241,95,50)" fg:x="22386" fg:w="78"/><text x="65.4336%" y="271.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (92 samples, 0.27%)</title><rect x="65.1457%" y="309" width="0.2679%" height="15" fill="rgb(238,48,32)" fg:x="22373" fg:w="92"/><text x="65.3957%" y="319.50"></text></g><g><title>conway`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="65.4165%" y="293" width="0.0204%" height="15" fill="rgb(235,113,49)" fg:x="22466" fg:w="7"/><text x="65.6665%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="65.4224%" y="277" width="0.0146%" height="15" fill="rgb(205,127,43)" fg:x="22468" fg:w="5"/><text x="65.6724%" y="287.50"></text></g><g><title>conway`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.03%)</title><rect x="65.4165%" y="309" width="0.0349%" height="15" fill="rgb(250,162,2)" fg:x="22466" fg:w="12"/><text x="65.6665%" y="319.50"></text></g><g><title>conway`winit::platform_impl::platform::app_state::AppState::queue_redraw (116 samples, 0.34%)</title><rect x="65.1370%" y="325" width="0.3378%" height="15" fill="rgb(220,13,41)" fg:x="22370" fg:w="116"/><text x="65.3870%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.01%)</title><rect x="65.4631%" y="309" width="0.0116%" height="15" fill="rgb(249,221,25)" fg:x="22482" fg:w="4"/><text x="65.7131%" y="319.50"></text></g><g><title>conway`conway::main::_{{closure}} (22,070 samples, 64.26%)</title><rect x="1.2259%" y="341" width="64.2635%" height="15" fill="rgb(215,208,19)" fg:x="421" fg:w="22070"/><text x="1.4759%" y="351.50">conway`conway::main::_{{closure}}</text></g><g><title>conway`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (22,092 samples, 64.33%)</title><rect x="1.1880%" y="357" width="64.3275%" height="15" fill="rgb(236,175,2)" fg:x="408" fg:w="22092"/><text x="1.4380%" y="367.50">conway`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::a..</text></g><g><title>conway`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (22,115 samples, 64.39%)</title><rect x="1.1502%" y="373" width="64.3945%" height="15" fill="rgb(241,52,2)" fg:x="395" fg:w="22115"/><text x="1.4002%" y="383.50">conway`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (6 samples, 0.02%)</title><rect x="65.5272%" y="357" width="0.0175%" height="15" fill="rgb(248,140,14)" fg:x="22504" fg:w="6"/><text x="65.7772%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.01%)</title><rect x="65.5476%" y="373" width="0.0146%" height="15" fill="rgb(253,22,42)" fg:x="22511" fg:w="5"/><text x="65.7976%" y="383.50"></text></g><g><title>conway`winit::platform_impl::platform::app_state::AppState::cleared (22,151 samples, 64.50%)</title><rect x="1.0715%" y="389" width="64.4993%" height="15" fill="rgb(234,61,47)" fg:x="368" fg:w="22151"/><text x="1.3215%" y="399.50">conway`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.01%)</title><rect x="65.5796%" y="389" width="0.0116%" height="15" fill="rgb(208,226,15)" fg:x="22522" fg:w="4"/><text x="65.8296%" y="399.50"></text></g><g><title>conway`winit::platform_impl::platform::observer::control_flow_end_handler (22,174 samples, 64.57%)</title><rect x="1.0308%" y="421" width="64.5663%" height="15" fill="rgb(217,221,4)" fg:x="354" fg:w="22174"/><text x="1.2808%" y="431.50">conway`winit::platform_impl::platform::observer::control_flow_end_handler</text></g><g><title>conway`std::panicking::try (22,169 samples, 64.55%)</title><rect x="1.0453%" y="405" width="64.5517%" height="15" fill="rgb(212,174,34)" fg:x="359" fg:w="22169"/><text x="1.2953%" y="415.50">conway`std::panicking::try</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (22,267 samples, 64.84%)</title><rect x="0.7862%" y="437" width="64.8371%" height="15" fill="rgb(253,83,4)" fg:x="270" fg:w="22267"/><text x="1.0362%" y="447.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (9 samples, 0.03%)</title><rect x="65.5971%" y="421" width="0.0262%" height="15" fill="rgb(250,195,49)" fg:x="22528" fg:w="9"/><text x="65.8471%" y="431.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (5 samples, 0.01%)</title><rect x="65.6262%" y="421" width="0.0146%" height="15" fill="rgb(241,192,25)" fg:x="22538" fg:w="5"/><text x="65.8762%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (5 samples, 0.01%)</title><rect x="65.6262%" y="405" width="0.0146%" height="15" fill="rgb(208,124,10)" fg:x="22538" fg:w="5"/><text x="65.8762%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (8 samples, 0.02%)</title><rect x="65.6233%" y="437" width="0.0233%" height="15" fill="rgb(222,33,0)" fg:x="22537" fg:w="8"/><text x="65.8733%" y="447.50"></text></g><g><title>CoreFoundation`_runLoopObserverWithBlockContext (6 samples, 0.02%)</title><rect x="65.6466%" y="437" width="0.0175%" height="15" fill="rgb(234,209,28)" fg:x="22545" fg:w="6"/><text x="65.8966%" y="447.50"></text></g><g><title>ViewBridge`0x7ff8178d0c8a (5 samples, 0.01%)</title><rect x="65.6699%" y="437" width="0.0146%" height="15" fill="rgb(224,11,23)" fg:x="22553" fg:w="5"/><text x="65.9199%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="65.6873%" y="437" width="0.0116%" height="15" fill="rgb(232,99,1)" fg:x="22559" fg:w="4"/><text x="65.9373%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (8 samples, 0.02%)</title><rect x="65.7077%" y="437" width="0.0233%" height="15" fill="rgb(237,95,45)" fg:x="22566" fg:w="8"/><text x="65.9577%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (22,336 samples, 65.04%)</title><rect x="0.7076%" y="453" width="65.0380%" height="15" fill="rgb(208,109,11)" fg:x="243" fg:w="22336"/><text x="0.9576%" y="463.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (5 samples, 0.01%)</title><rect x="65.7310%" y="437" width="0.0146%" height="15" fill="rgb(216,190,48)" fg:x="22574" fg:w="5"/><text x="65.9810%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (8 samples, 0.02%)</title><rect x="65.7514%" y="453" width="0.0233%" height="15" fill="rgb(251,171,36)" fg:x="22581" fg:w="8"/><text x="66.0014%" y="463.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (7 samples, 0.02%)</title><rect x="65.7543%" y="437" width="0.0204%" height="15" fill="rgb(230,62,22)" fg:x="22582" fg:w="7"/><text x="66.0043%" y="447.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (7 samples, 0.02%)</title><rect x="65.7543%" y="421" width="0.0204%" height="15" fill="rgb(225,114,35)" fg:x="22582" fg:w="7"/><text x="66.0043%" y="431.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (4 samples, 0.01%)</title><rect x="65.7630%" y="405" width="0.0116%" height="15" fill="rgb(215,118,42)" fg:x="22585" fg:w="4"/><text x="66.0130%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (4 samples, 0.01%)</title><rect x="65.7630%" y="389" width="0.0116%" height="15" fill="rgb(243,119,21)" fg:x="22585" fg:w="4"/><text x="66.0130%" y="399.50"></text></g><g><title>CoreFoundation`CFSetGetCount (4 samples, 0.01%)</title><rect x="65.8067%" y="437" width="0.0116%" height="15" fill="rgb(252,177,53)" fg:x="22600" fg:w="4"/><text x="66.0567%" y="447.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (4 samples, 0.01%)</title><rect x="69.3737%" y="421" width="0.0116%" height="15" fill="rgb(237,209,29)" fg:x="23825" fg:w="4"/><text x="69.6237%" y="431.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (4 samples, 0.01%)</title><rect x="69.4115%" y="389" width="0.0116%" height="15" fill="rgb(212,65,23)" fg:x="23838" fg:w="4"/><text x="69.6615%" y="399.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (6 samples, 0.02%)</title><rect x="69.4086%" y="405" width="0.0175%" height="15" fill="rgb(230,222,46)" fg:x="23837" fg:w="6"/><text x="69.6586%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (58 samples, 0.17%)</title><rect x="69.4465%" y="405" width="0.1689%" height="15" fill="rgb(215,135,32)" fg:x="23850" fg:w="58"/><text x="69.6965%" y="415.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (78 samples, 0.23%)</title><rect x="69.3911%" y="421" width="0.2271%" height="15" fill="rgb(246,101,22)" fg:x="23831" fg:w="78"/><text x="69.6411%" y="431.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (9 samples, 0.03%)</title><rect x="69.6357%" y="389" width="0.0262%" height="15" fill="rgb(206,107,13)" fg:x="23915" fg:w="9"/><text x="69.8857%" y="399.50"></text></g><g><title>CoreFoundation`CFSetGetValue (15 samples, 0.04%)</title><rect x="69.6357%" y="405" width="0.0437%" height="15" fill="rgb(250,100,44)" fg:x="23915" fg:w="15"/><text x="69.8857%" y="415.50"></text></g><g><title>CoreFoundation`__CFStringHash (5 samples, 0.01%)</title><rect x="69.6649%" y="389" width="0.0146%" height="15" fill="rgb(231,147,38)" fg:x="23925" fg:w="5"/><text x="69.9149%" y="399.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (23 samples, 0.07%)</title><rect x="69.6183%" y="421" width="0.0670%" height="15" fill="rgb(229,8,40)" fg:x="23909" fg:w="23"/><text x="69.8683%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (20 samples, 0.06%)</title><rect x="69.7027%" y="421" width="0.0582%" height="15" fill="rgb(221,135,30)" fg:x="23938" fg:w="20"/><text x="69.9527%" y="431.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (1,350 samples, 3.93%)</title><rect x="65.8387%" y="437" width="3.9309%" height="15" fill="rgb(249,193,18)" fg:x="22611" fg:w="1350"/><text x="66.0887%" y="447.50">Core..</text></g><g><title>CoreFoundation`__NSArrayM_new (6 samples, 0.02%)</title><rect x="69.7697%" y="437" width="0.0175%" height="15" fill="rgb(209,133,39)" fg:x="23961" fg:w="6"/><text x="70.0197%" y="447.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (5 samples, 0.01%)</title><rect x="69.7726%" y="421" width="0.0146%" height="15" fill="rgb(232,100,14)" fg:x="23962" fg:w="5"/><text x="70.0226%" y="431.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (5 samples, 0.01%)</title><rect x="69.7726%" y="405" width="0.0146%" height="15" fill="rgb(224,185,1)" fg:x="23962" fg:w="5"/><text x="70.0226%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (5 samples, 0.01%)</title><rect x="69.7726%" y="389" width="0.0146%" height="15" fill="rgb(223,139,8)" fg:x="23962" fg:w="5"/><text x="70.0226%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="69.7959%" y="437" width="0.0146%" height="15" fill="rgb(232,213,38)" fg:x="23970" fg:w="5"/><text x="70.0459%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (1,392 samples, 4.05%)</title><rect x="65.7747%" y="453" width="4.0532%" height="15" fill="rgb(207,94,22)" fg:x="22589" fg:w="1392"/><text x="66.0247%" y="463.50">Core..</text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (8 samples, 0.02%)</title><rect x="69.8570%" y="421" width="0.0233%" height="15" fill="rgb(219,183,54)" fg:x="23991" fg:w="8"/><text x="70.1070%" y="431.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (19 samples, 0.06%)</title><rect x="69.8279%" y="453" width="0.0553%" height="15" fill="rgb(216,185,54)" fg:x="23981" fg:w="19"/><text x="70.0779%" y="463.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (12 samples, 0.03%)</title><rect x="69.8483%" y="437" width="0.0349%" height="15" fill="rgb(254,217,39)" fg:x="23988" fg:w="12"/><text x="70.0983%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (76 samples, 0.22%)</title><rect x="69.8920%" y="437" width="0.2213%" height="15" fill="rgb(240,178,23)" fg:x="24003" fg:w="76"/><text x="70.1420%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (76 samples, 0.22%)</title><rect x="69.8920%" y="421" width="0.2213%" height="15" fill="rgb(218,11,47)" fg:x="24003" fg:w="76"/><text x="70.1420%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (73 samples, 0.21%)</title><rect x="69.9007%" y="405" width="0.2126%" height="15" fill="rgb(218,51,51)" fg:x="24006" fg:w="73"/><text x="70.1507%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (79 samples, 0.23%)</title><rect x="69.8861%" y="453" width="0.2300%" height="15" fill="rgb(238,126,27)" fg:x="24001" fg:w="79"/><text x="70.1361%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (12 samples, 0.03%)</title><rect x="70.1220%" y="453" width="0.0349%" height="15" fill="rgb(249,202,22)" fg:x="24082" fg:w="12"/><text x="70.3720%" y="463.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (8 samples, 0.02%)</title><rect x="70.1569%" y="453" width="0.0233%" height="15" fill="rgb(254,195,49)" fg:x="24094" fg:w="8"/><text x="70.4069%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (20 samples, 0.06%)</title><rect x="70.1802%" y="453" width="0.0582%" height="15" fill="rgb(208,123,14)" fg:x="24102" fg:w="20"/><text x="70.4302%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (55 samples, 0.16%)</title><rect x="70.2385%" y="453" width="0.1601%" height="15" fill="rgb(224,200,8)" fg:x="24122" fg:w="55"/><text x="70.4885%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`voucher_mach_msg_revert (8 samples, 0.02%)</title><rect x="70.4132%" y="453" width="0.0233%" height="15" fill="rgb(217,61,36)" fg:x="24182" fg:w="8"/><text x="70.6632%" y="463.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (24,029 samples, 69.97%)</title><rect x="0.4834%" y="469" width="69.9677%" height="15" fill="rgb(206,35,45)" fg:x="166" fg:w="24029"/><text x="0.7334%" y="479.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (24,076 samples, 70.10%)</title><rect x="0.3727%" y="485" width="70.1045%" height="15" fill="rgb(217,65,33)" fg:x="128" fg:w="24076"/><text x="0.6227%" y="495.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (6 samples, 0.02%)</title><rect x="70.4918%" y="453" width="0.0175%" height="15" fill="rgb(222,158,48)" fg:x="24209" fg:w="6"/><text x="70.7418%" y="463.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (4 samples, 0.01%)</title><rect x="70.4976%" y="437" width="0.0116%" height="15" fill="rgb(254,2,54)" fg:x="24211" fg:w="4"/><text x="70.7476%" y="447.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (24,089 samples, 70.14%)</title><rect x="0.3698%" y="501" width="70.1424%" height="15" fill="rgb(250,143,38)" fg:x="127" fg:w="24089"/><text x="0.6198%" y="511.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (8 samples, 0.02%)</title><rect x="70.4889%" y="485" width="0.0233%" height="15" fill="rgb(248,25,0)" fg:x="24208" fg:w="8"/><text x="70.7389%" y="495.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (7 samples, 0.02%)</title><rect x="70.4918%" y="469" width="0.0204%" height="15" fill="rgb(206,152,27)" fg:x="24209" fg:w="7"/><text x="70.7418%" y="479.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (24,120 samples, 70.23%)</title><rect x="0.2970%" y="533" width="70.2327%" height="15" fill="rgb(240,77,30)" fg:x="102" fg:w="24120"/><text x="0.5470%" y="543.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (24,120 samples, 70.23%)</title><rect x="0.2970%" y="517" width="70.2327%" height="15" fill="rgb(231,5,3)" fg:x="102" fg:w="24120"/><text x="0.5470%" y="527.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>AppKit`_DPSNextEvent (24,128 samples, 70.26%)</title><rect x="0.2766%" y="549" width="70.2559%" height="15" fill="rgb(207,226,32)" fg:x="95" fg:w="24128"/><text x="0.5266%" y="559.50">AppKit`_DPSNextEvent</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (24,139 samples, 70.29%)</title><rect x="0.2504%" y="565" width="70.2880%" height="15" fill="rgb(222,207,47)" fg:x="86" fg:w="24139"/><text x="0.5004%" y="575.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (24,210 samples, 70.49%)</title><rect x="0.0466%" y="597" width="70.4947%" height="15" fill="rgb(229,115,45)" fg:x="16" fg:w="24210"/><text x="0.2966%" y="607.50">conway`objc::rc::autorelease::autoreleasepool</text></g><g><title>AppKit`-[NSApplication run] (24,210 samples, 70.49%)</title><rect x="0.0466%" y="581" width="70.4947%" height="15" fill="rgb(224,191,6)" fg:x="16" fg:w="24210"/><text x="0.2966%" y="591.50">AppKit`-[NSApplication run]</text></g><g><title>conway`winit::event_loop::EventLoop&lt;T&gt;::run (24,217 samples, 70.52%)</title><rect x="0.0379%" y="629" width="70.5151%" height="15" fill="rgb(230,227,24)" fg:x="13" fg:w="24217"/><text x="0.2879%" y="639.50">conway`winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>conway`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (24,217 samples, 70.52%)</title><rect x="0.0379%" y="613" width="70.5151%" height="15" fill="rgb(228,80,19)" fg:x="13" fg:w="24217"/><text x="0.2879%" y="623.50">conway`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>conway`std::process::exit (4 samples, 0.01%)</title><rect x="70.5413%" y="597" width="0.0116%" height="15" fill="rgb(247,229,0)" fg:x="24226" fg:w="4"/><text x="70.7913%" y="607.50"></text></g><g><title>conway`std::sys::unix::os::exit (4 samples, 0.01%)</title><rect x="70.5413%" y="581" width="0.0116%" height="15" fill="rgb(237,194,15)" fg:x="24226" fg:w="4"/><text x="70.7913%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__exit (4 samples, 0.01%)</title><rect x="70.5413%" y="565" width="0.0116%" height="15" fill="rgb(219,203,20)" fg:x="24226" fg:w="4"/><text x="70.7913%" y="575.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (7 samples, 0.02%)</title><rect x="70.5646%" y="485" width="0.0204%" height="15" fill="rgb(234,128,8)" fg:x="24234" fg:w="7"/><text x="70.8146%" y="495.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (6 samples, 0.02%)</title><rect x="70.5675%" y="469" width="0.0175%" height="15" fill="rgb(248,202,8)" fg:x="24235" fg:w="6"/><text x="70.8175%" y="479.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (6 samples, 0.02%)</title><rect x="70.5675%" y="453" width="0.0175%" height="15" fill="rgb(206,104,37)" fg:x="24235" fg:w="6"/><text x="70.8175%" y="463.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (6 samples, 0.02%)</title><rect x="70.5675%" y="437" width="0.0175%" height="15" fill="rgb(223,8,27)" fg:x="24235" fg:w="6"/><text x="70.8175%" y="447.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (6 samples, 0.02%)</title><rect x="70.5675%" y="421" width="0.0175%" height="15" fill="rgb(216,217,28)" fg:x="24235" fg:w="6"/><text x="70.8175%" y="431.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (6 samples, 0.02%)</title><rect x="70.5675%" y="405" width="0.0175%" height="15" fill="rgb(249,199,1)" fg:x="24235" fg:w="6"/><text x="70.8175%" y="415.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (6 samples, 0.02%)</title><rect x="70.5675%" y="389" width="0.0175%" height="15" fill="rgb(240,85,17)" fg:x="24235" fg:w="6"/><text x="70.8175%" y="399.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (6 samples, 0.02%)</title><rect x="70.5675%" y="373" width="0.0175%" height="15" fill="rgb(206,108,45)" fg:x="24235" fg:w="6"/><text x="70.8175%" y="383.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (8 samples, 0.02%)</title><rect x="70.5646%" y="501" width="0.0233%" height="15" fill="rgb(245,210,41)" fg:x="24234" fg:w="8"/><text x="70.8146%" y="511.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (14 samples, 0.04%)</title><rect x="70.5646%" y="517" width="0.0408%" height="15" fill="rgb(206,13,37)" fg:x="24234" fg:w="14"/><text x="70.8146%" y="527.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (6 samples, 0.02%)</title><rect x="70.5879%" y="501" width="0.0175%" height="15" fill="rgb(250,61,18)" fg:x="24242" fg:w="6"/><text x="70.8379%" y="511.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (6 samples, 0.02%)</title><rect x="70.5879%" y="485" width="0.0175%" height="15" fill="rgb(235,172,48)" fg:x="24242" fg:w="6"/><text x="70.8379%" y="495.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (6 samples, 0.02%)</title><rect x="70.5879%" y="469" width="0.0175%" height="15" fill="rgb(249,201,17)" fg:x="24242" fg:w="6"/><text x="70.8379%" y="479.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (16 samples, 0.05%)</title><rect x="70.5646%" y="533" width="0.0466%" height="15" fill="rgb(219,208,6)" fg:x="24234" fg:w="16"/><text x="70.8146%" y="543.50"></text></g><g><title>conway`objc::rc::autorelease::autoreleasepool (19 samples, 0.06%)</title><rect x="70.5588%" y="597" width="0.0553%" height="15" fill="rgb(248,31,23)" fg:x="24232" fg:w="19"/><text x="70.8088%" y="607.50"></text></g><g><title>conway`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (18 samples, 0.05%)</title><rect x="70.5617%" y="581" width="0.0524%" height="15" fill="rgb(245,15,42)" fg:x="24233" fg:w="18"/><text x="70.8117%" y="591.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (18 samples, 0.05%)</title><rect x="70.5617%" y="565" width="0.0524%" height="15" fill="rgb(222,217,39)" fg:x="24233" fg:w="18"/><text x="70.8117%" y="575.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (18 samples, 0.05%)</title><rect x="70.5617%" y="549" width="0.0524%" height="15" fill="rgb(210,219,27)" fg:x="24233" fg:w="18"/><text x="70.8117%" y="559.50"></text></g><g><title>conway`winit::platform_impl::platform::view::new_view (4 samples, 0.01%)</title><rect x="70.6141%" y="597" width="0.0116%" height="15" fill="rgb(252,166,36)" fg:x="24251" fg:w="4"/><text x="70.8641%" y="607.50"></text></g><g><title>conway`winit::platform_impl::platform::view::init_with_winit (4 samples, 0.01%)</title><rect x="70.6141%" y="581" width="0.0116%" height="15" fill="rgb(245,132,34)" fg:x="24251" fg:w="4"/><text x="70.8641%" y="591.50"></text></g><g><title>AppKit`-[NSTextInputContext selectedKeyboardInputSource] (4 samples, 0.01%)</title><rect x="70.6141%" y="565" width="0.0116%" height="15" fill="rgb(236,54,3)" fg:x="24251" fg:w="4"/><text x="70.8641%" y="575.50"></text></g><g><title>HIToolbox`TSMCurrentKeyboardInputSourceRefCreate (4 samples, 0.01%)</title><rect x="70.6141%" y="549" width="0.0116%" height="15" fill="rgb(241,173,43)" fg:x="24251" fg:w="4"/><text x="70.8641%" y="559.50"></text></g><g><title>HIToolbox`isCreateCurrentKeyboardInputSourceRef (4 samples, 0.01%)</title><rect x="70.6141%" y="533" width="0.0116%" height="15" fill="rgb(215,190,9)" fg:x="24251" fg:w="4"/><text x="70.8641%" y="543.50"></text></g><g><title>HIToolbox`_HaveOnlyOneKeyboardInputSource (4 samples, 0.01%)</title><rect x="70.6141%" y="517" width="0.0116%" height="15" fill="rgb(242,101,16)" fg:x="24251" fg:w="4"/><text x="70.8641%" y="527.50"></text></g><g><title>HIToolbox`islGetInputSourceListWithAdditions (4 samples, 0.01%)</title><rect x="70.6141%" y="501" width="0.0116%" height="15" fill="rgb(223,190,21)" fg:x="24251" fg:w="4"/><text x="70.8641%" y="511.50"></text></g><g><title>HIToolbox`isPrefsCreateCacheFromEnabledAndDefaultInputSources (4 samples, 0.01%)</title><rect x="70.6141%" y="485" width="0.0116%" height="15" fill="rgb(215,228,25)" fg:x="24251" fg:w="4"/><text x="70.8641%" y="495.50"></text></g><g><title>conway`winit::platform_impl::platform::Window::new (26 samples, 0.08%)</title><rect x="70.5530%" y="629" width="0.0757%" height="15" fill="rgb(225,36,22)" fg:x="24230" fg:w="26"/><text x="70.8030%" y="639.50"></text></g><g><title>conway`winit::platform_impl::platform::window::UnownedWindow::new (26 samples, 0.08%)</title><rect x="70.5530%" y="613" width="0.0757%" height="15" fill="rgb(251,106,46)" fg:x="24230" fg:w="26"/><text x="70.8030%" y="623.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (5 samples, 0.01%)</title><rect x="70.6316%" y="581" width="0.0146%" height="15" fill="rgb(208,90,1)" fg:x="24257" fg:w="5"/><text x="70.8816%" y="591.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (5 samples, 0.01%)</title><rect x="70.6316%" y="565" width="0.0146%" height="15" fill="rgb(243,10,4)" fg:x="24257" fg:w="5"/><text x="70.8816%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (5 samples, 0.01%)</title><rect x="70.6316%" y="549" width="0.0146%" height="15" fill="rgb(212,137,27)" fg:x="24257" fg:w="5"/><text x="70.8816%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.01%)</title><rect x="70.6316%" y="533" width="0.0146%" height="15" fill="rgb(231,220,49)" fg:x="24257" fg:w="5"/><text x="70.8816%" y="543.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (5 samples, 0.01%)</title><rect x="70.6316%" y="517" width="0.0146%" height="15" fill="rgb(237,96,20)" fg:x="24257" fg:w="5"/><text x="70.8816%" y="527.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (5 samples, 0.01%)</title><rect x="70.6316%" y="501" width="0.0146%" height="15" fill="rgb(239,229,30)" fg:x="24257" fg:w="5"/><text x="70.8816%" y="511.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (5 samples, 0.01%)</title><rect x="70.6316%" y="485" width="0.0146%" height="15" fill="rgb(219,65,33)" fg:x="24257" fg:w="5"/><text x="70.8816%" y="495.50"></text></g><g><title>AppKit`+[NSAppearance _aquaAppearance] (5 samples, 0.01%)</title><rect x="70.6316%" y="469" width="0.0146%" height="15" fill="rgb(243,134,7)" fg:x="24257" fg:w="5"/><text x="70.8816%" y="479.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (4 samples, 0.01%)</title><rect x="70.6520%" y="581" width="0.0116%" height="15" fill="rgb(216,177,54)" fg:x="24264" fg:w="4"/><text x="70.9020%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.01%)</title><rect x="70.6520%" y="565" width="0.0116%" height="15" fill="rgb(211,160,20)" fg:x="24264" fg:w="4"/><text x="70.9020%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.01%)</title><rect x="70.6520%" y="549" width="0.0116%" height="15" fill="rgb(239,85,39)" fg:x="24264" fg:w="4"/><text x="70.9020%" y="559.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (4 samples, 0.01%)</title><rect x="70.6520%" y="533" width="0.0116%" height="15" fill="rgb(232,125,22)" fg:x="24264" fg:w="4"/><text x="70.9020%" y="543.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (4 samples, 0.01%)</title><rect x="70.6520%" y="517" width="0.0116%" height="15" fill="rgb(244,57,34)" fg:x="24264" fg:w="4"/><text x="70.9020%" y="527.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationGetCurrent (4 samples, 0.01%)</title><rect x="70.6520%" y="501" width="0.0116%" height="15" fill="rgb(214,203,32)" fg:x="24264" fg:w="4"/><text x="70.9020%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.01%)</title><rect x="70.6520%" y="485" width="0.0116%" height="15" fill="rgb(207,58,43)" fg:x="24264" fg:w="4"/><text x="70.9020%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.01%)</title><rect x="70.6520%" y="469" width="0.0116%" height="15" fill="rgb(215,193,15)" fg:x="24264" fg:w="4"/><text x="70.9020%" y="479.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdate (4 samples, 0.01%)</title><rect x="70.6520%" y="453" width="0.0116%" height="15" fill="rgb(232,15,44)" fg:x="24264" fg:w="4"/><text x="70.9020%" y="463.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (20 samples, 0.06%)</title><rect x="70.6287%" y="613" width="0.0582%" height="15" fill="rgb(212,3,48)" fg:x="24256" fg:w="20"/><text x="70.8787%" y="623.50"></text></g><g><title>AppKit`-[NSApplication init] (20 samples, 0.06%)</title><rect x="70.6287%" y="597" width="0.0582%" height="15" fill="rgb(218,128,7)" fg:x="24256" fg:w="20"/><text x="70.8787%" y="607.50"></text></g><g><title>AppKit`_NSInitializeAppContext (6 samples, 0.02%)</title><rect x="70.6694%" y="581" width="0.0175%" height="15" fill="rgb(226,216,39)" fg:x="24270" fg:w="6"/><text x="70.9194%" y="591.50"></text></g><g><title>dyld`start (24,276 samples, 70.69%)</title><rect x="0.0087%" y="725" width="70.6869%" height="15" fill="rgb(243,47,51)" fg:x="3" fg:w="24276"/><text x="0.2587%" y="735.50">dyld`start</text></g><g><title>conway`main (24,276 samples, 70.69%)</title><rect x="0.0087%" y="709" width="70.6869%" height="15" fill="rgb(241,183,40)" fg:x="3" fg:w="24276"/><text x="0.2587%" y="719.50">conway`main</text></g><g><title>conway`std::rt::lang_start_internal (24,276 samples, 70.69%)</title><rect x="0.0087%" y="693" width="70.6869%" height="15" fill="rgb(231,217,32)" fg:x="3" fg:w="24276"/><text x="0.2587%" y="703.50">conway`std::rt::lang_start_internal</text></g><g><title>conway`std::rt::lang_start::_{{closure}} (24,276 samples, 70.69%)</title><rect x="0.0087%" y="677" width="70.6869%" height="15" fill="rgb(229,61,38)" fg:x="3" fg:w="24276"/><text x="0.2587%" y="687.50">conway`std::rt::lang_start::_{{closure}}</text></g><g><title>conway`std::sys_common::backtrace::__rust_begin_short_backtrace (24,276 samples, 70.69%)</title><rect x="0.0087%" y="661" width="70.6869%" height="15" fill="rgb(225,210,5)" fg:x="3" fg:w="24276"/><text x="0.2587%" y="671.50">conway`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>conway`conway::main (24,276 samples, 70.69%)</title><rect x="0.0087%" y="645" width="70.6869%" height="15" fill="rgb(231,79,45)" fg:x="3" fg:w="24276"/><text x="0.2587%" y="655.50">conway`conway::main</text></g><g><title>conway`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (23 samples, 0.07%)</title><rect x="70.6287%" y="629" width="0.0670%" height="15" fill="rgb(224,100,7)" fg:x="24256" fg:w="23"/><text x="70.8787%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (17 samples, 0.05%)</title><rect x="70.6985%" y="725" width="0.0495%" height="15" fill="rgb(241,198,18)" fg:x="24280" fg:w="17"/><text x="70.9485%" y="735.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (7 samples, 0.02%)</title><rect x="70.7510%" y="725" width="0.0204%" height="15" fill="rgb(252,97,53)" fg:x="24298" fg:w="7"/><text x="71.0010%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__exit (4 samples, 0.01%)</title><rect x="70.7713%" y="725" width="0.0116%" height="15" fill="rgb(220,88,7)" fg:x="24305" fg:w="4"/><text x="71.0213%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (6 samples, 0.02%)</title><rect x="71.3974%" y="709" width="0.0175%" height="15" fill="rgb(213,176,14)" fg:x="24520" fg:w="6"/><text x="71.6474%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (3,033 samples, 8.83%)</title><rect x="71.4148%" y="709" width="8.8315%" height="15" fill="rgb(246,73,7)" fg:x="24526" fg:w="3033"/><text x="71.6648%" y="719.50">libsystem_ke..</text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (4 samples, 0.01%)</title><rect x="80.3220%" y="693" width="0.0116%" height="15" fill="rgb(245,64,36)" fg:x="27585" fg:w="4"/><text x="80.5720%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_drain_timers (6 samples, 0.02%)</title><rect x="80.3395%" y="677" width="0.0175%" height="15" fill="rgb(245,80,10)" fg:x="27591" fg:w="6"/><text x="80.5895%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (12 samples, 0.03%)</title><rect x="80.3337%" y="693" width="0.0349%" height="15" fill="rgb(232,107,50)" fg:x="27589" fg:w="12"/><text x="80.5837%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (6 samples, 0.02%)</title><rect x="80.3686%" y="693" width="0.0175%" height="15" fill="rgb(253,3,0)" fg:x="27601" fg:w="6"/><text x="80.6186%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_leave_deferred (9 samples, 0.03%)</title><rect x="81.4460%" y="677" width="0.0262%" height="15" fill="rgb(212,99,53)" fg:x="27971" fg:w="9"/><text x="81.6960%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (29 samples, 0.08%)</title><rect x="81.5159%" y="661" width="0.0844%" height="15" fill="rgb(249,111,54)" fg:x="27995" fg:w="29"/><text x="81.7659%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (50 samples, 0.15%)</title><rect x="81.4722%" y="677" width="0.1456%" height="15" fill="rgb(249,55,30)" fg:x="27980" fg:w="50"/><text x="81.7222%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_merge_evt (6 samples, 0.02%)</title><rect x="81.6003%" y="661" width="0.0175%" height="15" fill="rgb(237,47,42)" fg:x="28024" fg:w="6"/><text x="81.8503%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_drain (5 samples, 0.01%)</title><rect x="81.6265%" y="677" width="0.0146%" height="15" fill="rgb(211,20,18)" fg:x="28033" fg:w="5"/><text x="81.8765%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_workloop_poke_drain (9 samples, 0.03%)</title><rect x="81.6498%" y="677" width="0.0262%" height="15" fill="rgb(231,203,46)" fg:x="28041" fg:w="9"/><text x="81.8998%" y="687.50"></text></g><g><title>CoreFoundation`CFRelease (4 samples, 0.01%)</title><rect x="81.8973%" y="629" width="0.0116%" height="15" fill="rgb(237,142,3)" fg:x="28126" fg:w="4"/><text x="82.1473%" y="639.50"></text></g><g><title>Metal`__36-[MTLIOAccelDevice kickCleanupQueue]_block_invoke (8 samples, 0.02%)</title><rect x="81.9090%" y="629" width="0.0233%" height="15" fill="rgb(241,107,1)" fg:x="28130" fg:w="8"/><text x="82.1590%" y="639.50"></text></g><g><title>CoreFoundation`-[__NSArrayM countByEnumeratingWithState:objects:count:] (4 samples, 0.01%)</title><rect x="81.9497%" y="613" width="0.0116%" height="15" fill="rgb(229,83,13)" fg:x="28144" fg:w="4"/><text x="82.1997%" y="623.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable didPresentAtTime:] (4 samples, 0.01%)</title><rect x="81.9759%" y="613" width="0.0116%" height="15" fill="rgb(241,91,40)" fg:x="28153" fg:w="4"/><text x="82.2259%" y="623.50"></text></g><g><title>CoreFoundation`-[NSSet initWithArray:range:copyItems:] (7 samples, 0.02%)</title><rect x="82.0429%" y="549" width="0.0204%" height="15" fill="rgb(225,3,45)" fg:x="28176" fg:w="7"/><text x="82.2929%" y="559.50"></text></g><g><title>CoreFoundation`+[NSSet setWithArray:range:copyItems:] (14 samples, 0.04%)</title><rect x="82.0400%" y="565" width="0.0408%" height="15" fill="rgb(244,223,14)" fg:x="28175" fg:w="14"/><text x="82.2900%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.03%)</title><rect x="82.1128%" y="565" width="0.0320%" height="15" fill="rgb(224,124,37)" fg:x="28200" fg:w="11"/><text x="82.3628%" y="575.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInRange:inArray:range:] (42 samples, 0.12%)</title><rect x="82.0313%" y="581" width="0.1223%" height="15" fill="rgb(251,171,30)" fg:x="28172" fg:w="42"/><text x="82.2813%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSSingleObjectSetI dealloc] (4 samples, 0.01%)</title><rect x="82.1710%" y="533" width="0.0116%" height="15" fill="rgb(236,46,54)" fg:x="28220" fg:w="4"/><text x="82.4210%" y="543.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (9 samples, 0.03%)</title><rect x="82.1652%" y="549" width="0.0262%" height="15" fill="rgb(245,213,5)" fg:x="28218" fg:w="9"/><text x="82.4152%" y="559.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (14 samples, 0.04%)</title><rect x="82.1652%" y="581" width="0.0408%" height="15" fill="rgb(230,144,27)" fg:x="28218" fg:w="14"/><text x="82.4152%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (14 samples, 0.04%)</title><rect x="82.1652%" y="565" width="0.0408%" height="15" fill="rgb(220,86,6)" fg:x="28218" fg:w="14"/><text x="82.4152%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.01%)</title><rect x="82.1943%" y="549" width="0.0116%" height="15" fill="rgb(240,20,13)" fg:x="28228" fg:w="4"/><text x="82.4443%" y="559.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (75 samples, 0.22%)</title><rect x="82.0254%" y="597" width="0.2184%" height="15" fill="rgb(217,89,34)" fg:x="28170" fg:w="75"/><text x="82.2754%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.03%)</title><rect x="82.2147%" y="581" width="0.0291%" height="15" fill="rgb(229,13,5)" fg:x="28235" fg:w="10"/><text x="82.4647%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (149 samples, 0.43%)</title><rect x="82.2904%" y="533" width="0.4339%" height="15" fill="rgb(244,67,35)" fg:x="28261" fg:w="149"/><text x="82.5404%" y="543.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (160 samples, 0.47%)</title><rect x="82.2700%" y="549" width="0.4659%" height="15" fill="rgb(221,40,2)" fg:x="28254" fg:w="160"/><text x="82.5200%" y="559.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (4 samples, 0.01%)</title><rect x="82.7359%" y="549" width="0.0116%" height="15" fill="rgb(237,157,21)" fg:x="28414" fg:w="4"/><text x="82.9859%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (4 samples, 0.01%)</title><rect x="82.7359%" y="533" width="0.0116%" height="15" fill="rgb(222,94,11)" fg:x="28414" fg:w="4"/><text x="82.9859%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (5 samples, 0.01%)</title><rect x="82.7534%" y="549" width="0.0146%" height="15" fill="rgb(249,113,6)" fg:x="28420" fg:w="5"/><text x="83.0034%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (8 samples, 0.02%)</title><rect x="82.7680%" y="549" width="0.0233%" height="15" fill="rgb(238,137,36)" fg:x="28425" fg:w="8"/><text x="83.0180%" y="559.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (6 samples, 0.02%)</title><rect x="82.7738%" y="533" width="0.0175%" height="15" fill="rgb(210,102,26)" fg:x="28427" fg:w="6"/><text x="83.0238%" y="543.50"></text></g><g><title>libobjc.A.dylib`weak_entry_for_referent(weak_table_t*, objc_object*) (4 samples, 0.01%)</title><rect x="82.7796%" y="517" width="0.0116%" height="15" fill="rgb(218,30,30)" fg:x="28429" fg:w="4"/><text x="83.0296%" y="527.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (183 samples, 0.53%)</title><rect x="82.2671%" y="565" width="0.5329%" height="15" fill="rgb(214,67,26)" fg:x="28253" fg:w="183"/><text x="82.5171%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="82.8000%" y="565" width="0.0146%" height="15" fill="rgb(251,9,53)" fg:x="28436" fg:w="5"/><text x="83.0500%" y="575.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (197 samples, 0.57%)</title><rect x="82.2613%" y="581" width="0.5736%" height="15" fill="rgb(228,204,25)" fg:x="28251" fg:w="197"/><text x="82.5113%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_release (7 samples, 0.02%)</title><rect x="82.8145%" y="565" width="0.0204%" height="15" fill="rgb(207,153,8)" fg:x="28441" fg:w="7"/><text x="83.0645%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (203 samples, 0.59%)</title><rect x="82.2584%" y="597" width="0.5911%" height="15" fill="rgb(242,9,16)" fg:x="28250" fg:w="203"/><text x="82.5084%" y="607.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (6 samples, 0.02%)</title><rect x="82.8728%" y="565" width="0.0175%" height="15" fill="rgb(217,211,10)" fg:x="28461" fg:w="6"/><text x="83.1228%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (5 samples, 0.01%)</title><rect x="82.8757%" y="549" width="0.0146%" height="15" fill="rgb(219,228,52)" fg:x="28462" fg:w="5"/><text x="83.1257%" y="559.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (12 samples, 0.03%)</title><rect x="82.8670%" y="597" width="0.0349%" height="15" fill="rgb(231,92,29)" fg:x="28459" fg:w="12"/><text x="83.1170%" y="607.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (11 samples, 0.03%)</title><rect x="82.8699%" y="581" width="0.0320%" height="15" fill="rgb(232,8,23)" fg:x="28460" fg:w="11"/><text x="83.1199%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.02%)</title><rect x="82.9165%" y="597" width="0.0175%" height="15" fill="rgb(216,211,34)" fg:x="28476" fg:w="6"/><text x="83.1665%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (4 samples, 0.01%)</title><rect x="82.9456%" y="597" width="0.0116%" height="15" fill="rgb(236,151,0)" fg:x="28486" fg:w="4"/><text x="83.1956%" y="607.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (335 samples, 0.98%)</title><rect x="81.9963%" y="613" width="0.9755%" height="15" fill="rgb(209,168,3)" fg:x="28160" fg:w="335"/><text x="82.2463%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (24 samples, 0.07%)</title><rect x="82.9747%" y="613" width="0.0699%" height="15" fill="rgb(208,129,28)" fg:x="28496" fg:w="24"/><text x="83.2247%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.01%)</title><rect x="83.0533%" y="613" width="0.0116%" height="15" fill="rgb(229,78,22)" fg:x="28523" fg:w="4"/><text x="83.3033%" y="623.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (389 samples, 1.13%)</title><rect x="81.9352%" y="629" width="1.1327%" height="15" fill="rgb(228,187,13)" fg:x="28139" fg:w="389"/><text x="82.1852%" y="639.50"></text></g><g><title>Metal`__36-[MTLIOAccelDevice kickCleanupQueue]_block_invoke (4 samples, 0.01%)</title><rect x="83.0824%" y="613" width="0.0116%" height="15" fill="rgb(240,119,24)" fg:x="28533" fg:w="4"/><text x="83.3324%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (8 samples, 0.02%)</title><rect x="83.0795%" y="629" width="0.0233%" height="15" fill="rgb(209,194,42)" fg:x="28532" fg:w="8"/><text x="83.3295%" y="639.50"></text></g><g><title>Metal`__destroy_helper_block_e8_32o (4 samples, 0.01%)</title><rect x="83.1057%" y="613" width="0.0116%" height="15" fill="rgb(247,200,46)" fg:x="28541" fg:w="4"/><text x="83.3557%" y="623.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (6 samples, 0.02%)</title><rect x="83.1261%" y="597" width="0.0175%" height="15" fill="rgb(218,76,16)" fg:x="28548" fg:w="6"/><text x="83.3761%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (9 samples, 0.03%)</title><rect x="83.1465%" y="597" width="0.0262%" height="15" fill="rgb(225,21,48)" fg:x="28555" fg:w="9"/><text x="83.3965%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (19 samples, 0.06%)</title><rect x="83.1232%" y="613" width="0.0553%" height="15" fill="rgb(239,223,50)" fg:x="28547" fg:w="19"/><text x="83.3732%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_release (7 samples, 0.02%)</title><rect x="83.1785%" y="613" width="0.0204%" height="15" fill="rgb(244,45,21)" fg:x="28566" fg:w="7"/><text x="83.4285%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.03%)</title><rect x="83.2076%" y="613" width="0.0320%" height="15" fill="rgb(232,33,43)" fg:x="28576" fg:w="11"/><text x="83.4576%" y="623.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (49 samples, 0.14%)</title><rect x="83.1028%" y="629" width="0.1427%" height="15" fill="rgb(209,8,3)" fg:x="28540" fg:w="49"/><text x="83.3528%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="83.2484%" y="629" width="0.0262%" height="15" fill="rgb(214,25,53)" fg:x="28590" fg:w="9"/><text x="83.4984%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (475 samples, 1.38%)</title><rect x="81.8973%" y="645" width="1.3831%" height="15" fill="rgb(254,186,54)" fg:x="28126" fg:w="475"/><text x="82.1473%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_unote_update (4 samples, 0.01%)</title><rect x="83.2833%" y="645" width="0.0116%" height="15" fill="rgb(208,174,49)" fg:x="28602" fg:w="4"/><text x="83.5333%" y="655.50"></text></g><g><title>IOKit`__IONotificationPortSetDispatchQueue_block_invoke (7 samples, 0.02%)</title><rect x="83.6415%" y="613" width="0.0204%" height="15" fill="rgb(233,191,51)" fg:x="28725" fg:w="7"/><text x="83.8915%" y="623.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (4 samples, 0.01%)</title><rect x="83.6939%" y="597" width="0.0116%" height="15" fill="rgb(222,134,10)" fg:x="28743" fg:w="4"/><text x="83.9439%" y="607.50"></text></g><g><title>CoreFoundation`-[__NSArrayM getObjects:range:] (4 samples, 0.01%)</title><rect x="83.7085%" y="597" width="0.0116%" height="15" fill="rgb(230,226,20)" fg:x="28748" fg:w="4"/><text x="83.9585%" y="607.50"></text></g><g><title>IOKit`__IONotificationPortSetDispatchQueue_block_invoke (7 samples, 0.02%)</title><rect x="83.7230%" y="597" width="0.0204%" height="15" fill="rgb(251,111,25)" fg:x="28753" fg:w="7"/><text x="83.9730%" y="607.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObjects:count:atIndex:] (9 samples, 0.03%)</title><rect x="83.8308%" y="549" width="0.0262%" height="15" fill="rgb(224,40,46)" fg:x="28790" fg:w="9"/><text x="84.0808%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_good_size (6 samples, 0.02%)</title><rect x="83.8774%" y="549" width="0.0175%" height="15" fill="rgb(236,108,47)" fg:x="28806" fg:w="6"/><text x="84.1274%" y="559.50"></text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (29 samples, 0.08%)</title><rect x="83.8220%" y="565" width="0.0844%" height="15" fill="rgb(234,93,0)" fg:x="28787" fg:w="29"/><text x="84.0720%" y="575.50"></text></g><g><title>CoreFoundation`_NSIsNSArray (5 samples, 0.01%)</title><rect x="83.9065%" y="565" width="0.0146%" height="15" fill="rgb(224,213,32)" fg:x="28816" fg:w="5"/><text x="84.1565%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="83.9210%" y="565" width="0.0116%" height="15" fill="rgb(251,11,48)" fg:x="28821" fg:w="4"/><text x="84.1710%" y="575.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (47 samples, 0.14%)</title><rect x="83.8104%" y="581" width="0.1369%" height="15" fill="rgb(236,173,5)" fg:x="28783" fg:w="47"/><text x="84.0604%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSArrayM getObjects:range:] (4 samples, 0.01%)</title><rect x="83.9647%" y="581" width="0.0116%" height="15" fill="rgb(230,95,12)" fg:x="28836" fg:w="4"/><text x="84.2147%" y="591.50"></text></g><g><title>CoreFoundation`CFGetTypeID (5 samples, 0.01%)</title><rect x="84.0812%" y="549" width="0.0146%" height="15" fill="rgb(232,209,1)" fg:x="28876" fg:w="5"/><text x="84.3312%" y="559.50"></text></g><g><title>CoreFoundation`_CFRetain (4 samples, 0.01%)</title><rect x="84.1016%" y="549" width="0.0116%" height="15" fill="rgb(232,6,1)" fg:x="28883" fg:w="4"/><text x="84.3516%" y="559.50"></text></g><g><title>IOKit`io_connect_method (1,895 samples, 5.52%)</title><rect x="84.1190%" y="533" width="5.5179%" height="15" fill="rgb(210,224,50)" fg:x="28889" fg:w="1895"/><text x="84.3690%" y="543.50">IOKit`i..</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1,881 samples, 5.48%)</title><rect x="84.1598%" y="517" width="5.4771%" height="15" fill="rgb(228,127,35)" fg:x="28903" fg:w="1881"/><text x="84.4098%" y="527.50">libsyst..</text></g><g><title>IOAccelerator`IOAccelCommandQueueSubmitCommandBuffers (1,919 samples, 5.59%)</title><rect x="84.0666%" y="565" width="5.5877%" height="15" fill="rgb(245,102,45)" fg:x="28871" fg:w="1919"/><text x="84.3166%" y="575.50">IOAccel..</text></g><g><title>IOKit`IOConnectCallMethod (1,903 samples, 5.54%)</title><rect x="84.1132%" y="549" width="5.5412%" height="15" fill="rgb(214,1,49)" fg:x="28887" fg:w="1903"/><text x="84.3632%" y="559.50">IOKit`I..</text></g><g><title>libobjc.A.dylib`objc_retain (5 samples, 0.01%)</title><rect x="89.6718%" y="533" width="0.0146%" height="15" fill="rgb(226,163,40)" fg:x="30796" fg:w="5"/><text x="89.9218%" y="543.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (9 samples, 0.03%)</title><rect x="89.6660%" y="549" width="0.0262%" height="15" fill="rgb(239,212,28)" fg:x="30794" fg:w="9"/><text x="89.9160%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.04%)</title><rect x="89.6922%" y="549" width="0.0437%" height="15" fill="rgb(220,20,13)" fg:x="30803" fg:w="15"/><text x="89.9422%" y="559.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (27 samples, 0.08%)</title><rect x="89.6602%" y="565" width="0.0786%" height="15" fill="rgb(210,164,35)" fg:x="30792" fg:w="27"/><text x="89.9102%" y="575.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue submitCommandBuffers:count:] (1,974 samples, 5.75%)</title><rect x="83.9967%" y="581" width="5.7479%" height="15" fill="rgb(248,109,41)" fg:x="28847" fg:w="1974"/><text x="84.2467%" y="591.50">Metal`-..</text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="89.7534%" y="581" width="0.0116%" height="15" fill="rgb(238,23,50)" fg:x="30824" fg:w="4"/><text x="90.0034%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_release (5 samples, 0.01%)</title><rect x="89.7650%" y="581" width="0.0146%" height="15" fill="rgb(211,48,49)" fg:x="30828" fg:w="5"/><text x="90.0150%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (9 samples, 0.03%)</title><rect x="89.7941%" y="581" width="0.0262%" height="15" fill="rgb(223,36,21)" fg:x="30838" fg:w="9"/><text x="90.0441%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (8 samples, 0.02%)</title><rect x="89.7970%" y="565" width="0.0233%" height="15" fill="rgb(207,123,46)" fg:x="30839" fg:w="8"/><text x="90.0470%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.01%)</title><rect x="89.8203%" y="581" width="0.0116%" height="15" fill="rgb(240,218,32)" fg:x="30847" fg:w="4"/><text x="90.0703%" y="591.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (2,089 samples, 6.08%)</title><rect x="83.7580%" y="597" width="6.0828%" height="15" fill="rgb(252,5,43)" fg:x="28765" fg:w="2089"/><text x="84.0080%" y="607.50">Metal`-[..</text></g><g><title>Metal`__46-[_MTLCommandQueue initWithDevice:descriptor:]_block_invoke (11 samples, 0.03%)</title><rect x="89.8407%" y="597" width="0.0320%" height="15" fill="rgb(252,84,19)" fg:x="30854" fg:w="11"/><text x="90.0907%" y="607.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (5 samples, 0.01%)</title><rect x="89.8728%" y="597" width="0.0146%" height="15" fill="rgb(243,152,39)" fg:x="30865" fg:w="5"/><text x="90.1228%" y="607.50"></text></g><g><title>CoreFoundation`CFRetain (6 samples, 0.02%)</title><rect x="89.9485%" y="581" width="0.0175%" height="15" fill="rgb(234,160,15)" fg:x="30891" fg:w="6"/><text x="90.1985%" y="591.50"></text></g><g><title>CoreFoundation`CFRetain (7 samples, 0.02%)</title><rect x="89.9950%" y="549" width="0.0204%" height="15" fill="rgb(237,34,20)" fg:x="30907" fg:w="7"/><text x="90.2450%" y="559.50"></text></g><g><title>QuartzCore`CAImageQueueCollectable (17 samples, 0.05%)</title><rect x="89.9747%" y="565" width="0.0495%" height="15" fill="rgb(229,97,13)" fg:x="30900" fg:w="17"/><text x="90.2247%" y="575.50"></text></g><g><title>QuartzCore`layer_collectable_signal(_CAImageQueue*, void*) (.9508) (47 samples, 0.14%)</title><rect x="90.0271%" y="549" width="0.1369%" height="15" fill="rgb(234,71,50)" fg:x="30918" fg:w="47"/><text x="90.2771%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (43 samples, 0.13%)</title><rect x="90.0387%" y="533" width="0.1252%" height="15" fill="rgb(253,155,4)" fg:x="30922" fg:w="43"/><text x="90.2887%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (42 samples, 0.12%)</title><rect x="90.0416%" y="517" width="0.1223%" height="15" fill="rgb(222,185,37)" fg:x="30923" fg:w="42"/><text x="90.2916%" y="527.50"></text></g><g><title>QuartzCore`_XImageQueueCollectable (71 samples, 0.21%)</title><rect x="89.9659%" y="581" width="0.2067%" height="15" fill="rgb(251,177,13)" fg:x="30897" fg:w="71"/><text x="90.2159%" y="591.50"></text></g><g><title>QuartzCore`invoke_collectable_callback(void*) (50 samples, 0.15%)</title><rect x="90.0271%" y="565" width="0.1456%" height="15" fill="rgb(250,179,40)" fg:x="30918" fg:w="50"/><text x="90.2771%" y="575.50"></text></g><g><title>CoreFoundation`+[NSSet setWithArray:range:copyItems:] (4 samples, 0.01%)</title><rect x="90.2775%" y="501" width="0.0116%" height="15" fill="rgb(242,44,2)" fg:x="31004" fg:w="4"/><text x="90.5275%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.03%)</title><rect x="90.3037%" y="501" width="0.0262%" height="15" fill="rgb(216,177,13)" fg:x="31013" fg:w="9"/><text x="90.5537%" y="511.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInRange:inArray:range:] (22 samples, 0.06%)</title><rect x="90.2688%" y="517" width="0.0641%" height="15" fill="rgb(216,106,43)" fg:x="31001" fg:w="22"/><text x="90.5188%" y="527.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (8 samples, 0.02%)</title><rect x="90.3532%" y="485" width="0.0233%" height="15" fill="rgb(216,183,2)" fg:x="31030" fg:w="8"/><text x="90.6032%" y="495.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (16 samples, 0.05%)</title><rect x="90.3474%" y="517" width="0.0466%" height="15" fill="rgb(249,75,3)" fg:x="31028" fg:w="16"/><text x="90.5974%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (15 samples, 0.04%)</title><rect x="90.3503%" y="501" width="0.0437%" height="15" fill="rgb(219,67,39)" fg:x="31029" fg:w="15"/><text x="90.6003%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.02%)</title><rect x="90.3765%" y="485" width="0.0175%" height="15" fill="rgb(253,228,2)" fg:x="31038" fg:w="6"/><text x="90.6265%" y="495.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (57 samples, 0.17%)</title><rect x="90.2600%" y="533" width="0.1660%" height="15" fill="rgb(235,138,27)" fg:x="30998" fg:w="57"/><text x="90.5100%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.03%)</title><rect x="90.3998%" y="517" width="0.0262%" height="15" fill="rgb(236,97,51)" fg:x="31046" fg:w="9"/><text x="90.6498%" y="527.50"></text></g><g><title>CoreFoundation`-[__NSArrayM _mutate] (4 samples, 0.01%)</title><rect x="90.4289%" y="533" width="0.0116%" height="15" fill="rgb(240,80,30)" fg:x="31056" fg:w="4"/><text x="90.6789%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="90.4609%" y="517" width="0.0146%" height="15" fill="rgb(230,178,19)" fg:x="31067" fg:w="5"/><text x="90.7109%" y="527.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (10 samples, 0.03%)</title><rect x="90.4493%" y="533" width="0.0291%" height="15" fill="rgb(210,190,27)" fg:x="31063" fg:w="10"/><text x="90.6993%" y="543.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeAllObjects] (4 samples, 0.01%)</title><rect x="90.4784%" y="533" width="0.0116%" height="15" fill="rgb(222,107,31)" fg:x="31073" fg:w="4"/><text x="90.7284%" y="543.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (9 samples, 0.03%)</title><rect x="90.4930%" y="501" width="0.0262%" height="15" fill="rgb(216,127,34)" fg:x="31078" fg:w="9"/><text x="90.7430%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (9 samples, 0.03%)</title><rect x="90.4930%" y="485" width="0.0262%" height="15" fill="rgb(234,116,52)" fg:x="31078" fg:w="9"/><text x="90.7430%" y="495.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (14 samples, 0.04%)</title><rect x="90.4930%" y="517" width="0.0408%" height="15" fill="rgb(222,124,15)" fg:x="31078" fg:w="14"/><text x="90.7430%" y="527.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (15 samples, 0.04%)</title><rect x="90.4930%" y="533" width="0.0437%" height="15" fill="rgb(231,179,28)" fg:x="31078" fg:w="15"/><text x="90.7430%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (5 samples, 0.01%)</title><rect x="90.5774%" y="533" width="0.0146%" height="15" fill="rgb(226,93,45)" fg:x="31107" fg:w="5"/><text x="90.8274%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.03%)</title><rect x="90.5920%" y="533" width="0.0262%" height="15" fill="rgb(215,8,51)" fg:x="31112" fg:w="9"/><text x="90.8420%" y="543.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (141 samples, 0.41%)</title><rect x="90.2309%" y="549" width="0.4106%" height="15" fill="rgb(223,106,5)" fg:x="30988" fg:w="141"/><text x="90.4809%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (29 samples, 0.08%)</title><rect x="90.6415%" y="549" width="0.0844%" height="15" fill="rgb(250,191,5)" fg:x="31129" fg:w="29"/><text x="90.8915%" y="559.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (192 samples, 0.56%)</title><rect x="90.1814%" y="565" width="0.5591%" height="15" fill="rgb(242,132,44)" fg:x="30971" fg:w="192"/><text x="90.4314%" y="575.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (199 samples, 0.58%)</title><rect x="90.1727%" y="581" width="0.5794%" height="15" fill="rgb(251,152,29)" fg:x="30968" fg:w="199"/><text x="90.4227%" y="591.50"></text></g><g><title>CoreFoundation`CFRetain (5 samples, 0.01%)</title><rect x="90.7871%" y="565" width="0.0146%" height="15" fill="rgb(218,179,5)" fg:x="31179" fg:w="5"/><text x="91.0371%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_poll (5 samples, 0.01%)</title><rect x="90.8016%" y="549" width="0.0146%" height="15" fill="rgb(227,67,19)" fg:x="31184" fg:w="5"/><text x="91.0516%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (92 samples, 0.27%)</title><rect x="90.8016%" y="565" width="0.2679%" height="15" fill="rgb(233,119,31)" fg:x="31184" fg:w="92"/><text x="91.0516%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (87 samples, 0.25%)</title><rect x="90.8162%" y="549" width="0.2533%" height="15" fill="rgb(241,120,22)" fg:x="31189" fg:w="87"/><text x="91.0662%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="91.0724%" y="565" width="0.0116%" height="15" fill="rgb(224,102,30)" fg:x="31277" fg:w="4"/><text x="91.3224%" y="575.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (117 samples, 0.34%)</title><rect x="90.7521%" y="581" width="0.3407%" height="15" fill="rgb(210,164,37)" fg:x="31167" fg:w="117"/><text x="91.0021%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_internal (8 samples, 0.02%)</title><rect x="91.1219%" y="549" width="0.0233%" height="15" fill="rgb(226,191,16)" fg:x="31294" fg:w="8"/><text x="91.3719%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (220 samples, 0.64%)</title><rect x="91.0986%" y="581" width="0.6406%" height="15" fill="rgb(214,40,45)" fg:x="31286" fg:w="220"/><text x="91.3486%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (218 samples, 0.63%)</title><rect x="91.1044%" y="565" width="0.6348%" height="15" fill="rgb(244,29,26)" fg:x="31288" fg:w="218"/><text x="91.3544%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (204 samples, 0.59%)</title><rect x="91.1452%" y="549" width="0.5940%" height="15" fill="rgb(216,16,5)" fg:x="31302" fg:w="204"/><text x="91.3952%" y="559.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (642 samples, 1.87%)</title><rect x="89.8873%" y="597" width="1.8694%" height="15" fill="rgb(249,76,35)" fg:x="30870" fg:w="642"/><text x="90.1373%" y="607.50">Q..</text></g><g><title>IOAccelerator`ioAccelCommandQueueBlockFenceCallback (7 samples, 0.02%)</title><rect x="91.8470%" y="565" width="0.0204%" height="15" fill="rgb(207,11,44)" fg:x="31543" fg:w="7"/><text x="92.0970%" y="575.50"></text></g><g><title>CoreFoundation`CFRelease (4 samples, 0.01%)</title><rect x="91.8790%" y="549" width="0.0116%" height="15" fill="rgb(228,190,49)" fg:x="31554" fg:w="4"/><text x="92.1290%" y="559.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (4 samples, 0.01%)</title><rect x="91.9139%" y="533" width="0.0116%" height="15" fill="rgb(214,173,12)" fg:x="31566" fg:w="4"/><text x="92.1639%" y="543.50"></text></g><g><title>Foundation`-[NSConstantIntegerNumber intValue] (5 samples, 0.01%)</title><rect x="91.9634%" y="485" width="0.0146%" height="15" fill="rgb(218,26,35)" fg:x="31583" fg:w="5"/><text x="92.2134%" y="495.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryI objectForKey:] (8 samples, 0.02%)</title><rect x="91.9896%" y="469" width="0.0233%" height="15" fill="rgb(220,200,19)" fg:x="31592" fg:w="8"/><text x="92.2396%" y="479.50"></text></g><g><title>CoreFoundation`__CFStringHash (5 samples, 0.01%)</title><rect x="92.0129%" y="469" width="0.0146%" height="15" fill="rgb(239,95,49)" fg:x="31600" fg:w="5"/><text x="92.2629%" y="479.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable presentWithOptions:] (23 samples, 0.07%)</title><rect x="91.9780%" y="485" width="0.0670%" height="15" fill="rgb(235,85,53)" fg:x="31588" fg:w="23"/><text x="92.2280%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="92.0304%" y="469" width="0.0146%" height="15" fill="rgb(233,133,31)" fg:x="31606" fg:w="5"/><text x="92.2804%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (308 samples, 0.90%)</title><rect x="92.1702%" y="405" width="0.8968%" height="15" fill="rgb(218,25,20)" fg:x="31654" fg:w="308"/><text x="92.4202%" y="415.50"></text></g><g><title>IOKit`io_connect_method (314 samples, 0.91%)</title><rect x="92.1556%" y="421" width="0.9143%" height="15" fill="rgb(252,210,38)" fg:x="31649" fg:w="314"/><text x="92.4056%" y="431.50"></text></g><g><title>IOSurface`IOSurfaceClientSignalEvent (317 samples, 0.92%)</title><rect x="92.1527%" y="453" width="0.9230%" height="15" fill="rgb(242,134,21)" fg:x="31648" fg:w="317"/><text x="92.4027%" y="463.50"></text></g><g><title>IOKit`IOConnectCallMethod (316 samples, 0.92%)</title><rect x="92.1556%" y="437" width="0.9201%" height="15" fill="rgb(213,28,48)" fg:x="31649" fg:w="316"/><text x="92.4056%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (97 samples, 0.28%)</title><rect x="93.1078%" y="405" width="0.2824%" height="15" fill="rgb(250,196,2)" fg:x="31976" fg:w="97"/><text x="93.3578%" y="415.50"></text></g><g><title>IOKit`io_connect_method (103 samples, 0.30%)</title><rect x="93.0932%" y="421" width="0.2999%" height="15" fill="rgb(227,5,17)" fg:x="31971" fg:w="103"/><text x="93.3432%" y="431.50"></text></g><g><title>IOKit`IOConnectCallMethod (106 samples, 0.31%)</title><rect x="93.0903%" y="437" width="0.3087%" height="15" fill="rgb(221,226,24)" fg:x="31970" fg:w="106"/><text x="93.3403%" y="447.50"></text></g><g><title>CoreFoundation`CFArrayAppendValue (9 samples, 0.03%)</title><rect x="93.3989%" y="421" width="0.0262%" height="15" fill="rgb(211,5,48)" fg:x="32076" fg:w="9"/><text x="93.6489%" y="431.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (7 samples, 0.02%)</title><rect x="93.4048%" y="405" width="0.0204%" height="15" fill="rgb(219,150,6)" fg:x="32078" fg:w="7"/><text x="93.6548%" y="415.50"></text></g><g><title>IOSurface`_iosAddEventBlock (10 samples, 0.03%)</title><rect x="93.3989%" y="437" width="0.0291%" height="15" fill="rgb(251,46,16)" fg:x="32076" fg:w="10"/><text x="93.6489%" y="447.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (4 samples, 0.01%)</title><rect x="93.4368%" y="421" width="0.0116%" height="15" fill="rgb(220,204,40)" fg:x="32089" fg:w="4"/><text x="93.6868%" y="431.50"></text></g><g><title>IOSurface`IOSurfaceSharedEventNotifyEventListener (133 samples, 0.39%)</title><rect x="93.0757%" y="453" width="0.3873%" height="15" fill="rgb(211,85,2)" fg:x="31965" fg:w="133"/><text x="93.3257%" y="463.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (12 samples, 0.03%)</title><rect x="93.4281%" y="437" width="0.0349%" height="15" fill="rgb(229,17,7)" fg:x="32086" fg:w="12"/><text x="93.6781%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="93.4484%" y="421" width="0.0146%" height="15" fill="rgb(239,72,28)" fg:x="32093" fg:w="5"/><text x="93.6984%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="93.4688%" y="453" width="0.0146%" height="15" fill="rgb(230,47,54)" fg:x="32100" fg:w="5"/><text x="93.7188%" y="463.50"></text></g><g><title>QuartzCore`layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (480 samples, 1.40%)</title><rect x="92.0974%" y="469" width="1.3977%" height="15" fill="rgb(214,50,8)" fg:x="31629" fg:w="480"/><text x="92.3474%" y="479.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (5 samples, 0.01%)</title><rect x="93.5416%" y="421" width="0.0146%" height="15" fill="rgb(216,198,43)" fg:x="32125" fg:w="5"/><text x="93.7916%" y="431.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (17 samples, 0.05%)</title><rect x="93.5096%" y="453" width="0.0495%" height="15" fill="rgb(234,20,35)" fg:x="32114" fg:w="17"/><text x="93.7596%" y="463.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (12 samples, 0.03%)</title><rect x="93.5242%" y="437" width="0.0349%" height="15" fill="rgb(254,45,19)" fg:x="32119" fg:w="12"/><text x="93.7742%" y="447.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (21 samples, 0.06%)</title><rect x="93.5009%" y="469" width="0.0611%" height="15" fill="rgb(219,14,44)" fg:x="32111" fg:w="21"/><text x="93.7509%" y="479.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (523 samples, 1.52%)</title><rect x="92.0450%" y="485" width="1.5229%" height="15" fill="rgb(217,220,26)" fg:x="31611" fg:w="523"/><text x="92.2950%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="93.5678%" y="485" width="0.0146%" height="15" fill="rgb(213,158,28)" fg:x="32134" fg:w="5"/><text x="93.8178%" y="495.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (560 samples, 1.63%)</title><rect x="91.9576%" y="501" width="1.6306%" height="15" fill="rgb(252,51,52)" fg:x="31581" fg:w="560"/><text x="92.2076%" y="511.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryI dealloc] (6 samples, 0.02%)</title><rect x="93.6319%" y="453" width="0.0175%" height="15" fill="rgb(246,89,16)" fg:x="32156" fg:w="6"/><text x="93.8819%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.03%)</title><rect x="93.6639%" y="453" width="0.0291%" height="15" fill="rgb(216,158,49)" fg:x="32167" fg:w="10"/><text x="93.9139%" y="463.50"></text></g><g><title>Metal`__destroy_helper_block_e8_32o40o48o (28 samples, 0.08%)</title><rect x="93.6290%" y="469" width="0.0815%" height="15" fill="rgb(236,107,19)" fg:x="32155" fg:w="28"/><text x="93.8790%" y="479.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (31 samples, 0.09%)</title><rect x="93.6261%" y="485" width="0.0903%" height="15" fill="rgb(228,185,30)" fg:x="32154" fg:w="31"/><text x="93.8761%" y="495.50"></text></g><g><title>Metal`MTLDispatchListApply (607 samples, 1.77%)</title><rect x="91.9518%" y="517" width="1.7675%" height="15" fill="rgb(246,134,8)" fg:x="31579" fg:w="607"/><text x="92.2018%" y="527.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (40 samples, 0.12%)</title><rect x="93.6028%" y="501" width="0.1165%" height="15" fill="rgb(214,143,50)" fg:x="32146" fg:w="40"/><text x="93.8528%" y="511.50"></text></g><g><title>Metal`MTLTraceEnabled (5 samples, 0.01%)</title><rect x="93.7192%" y="517" width="0.0146%" height="15" fill="rgb(228,75,8)" fg:x="32186" fg:w="5"/><text x="93.9692%" y="527.50"></text></g><g><title>IOAccelerator`IOAccelInitCommPage (4 samples, 0.01%)</title><rect x="93.7222%" y="501" width="0.0116%" height="15" fill="rgb(207,175,4)" fg:x="32187" fg:w="4"/><text x="93.9722%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (10 samples, 0.03%)</title><rect x="93.7542%" y="517" width="0.0291%" height="15" fill="rgb(205,108,24)" fg:x="32198" fg:w="10"/><text x="94.0042%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (9 samples, 0.03%)</title><rect x="93.7571%" y="501" width="0.0262%" height="15" fill="rgb(244,120,49)" fg:x="32199" fg:w="9"/><text x="94.0071%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (5 samples, 0.01%)</title><rect x="93.7833%" y="517" width="0.0146%" height="15" fill="rgb(223,47,38)" fg:x="32208" fg:w="5"/><text x="94.0333%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_check_init_slow (4 samples, 0.01%)</title><rect x="93.7862%" y="501" width="0.0116%" height="15" fill="rgb(229,179,11)" fg:x="32209" fg:w="4"/><text x="94.0362%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (644 samples, 1.88%)</title><rect x="91.9343%" y="533" width="1.8752%" height="15" fill="rgb(231,122,1)" fg:x="31573" fg:w="644"/><text x="92.1843%" y="543.50">M..</text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (6 samples, 0.02%)</title><rect x="93.8532%" y="501" width="0.0175%" height="15" fill="rgb(245,119,9)" fg:x="32232" fg:w="6"/><text x="94.1032%" y="511.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (16 samples, 0.05%)</title><rect x="93.8707%" y="501" width="0.0466%" height="15" fill="rgb(241,163,25)" fg:x="32238" fg:w="16"/><text x="94.1207%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.01%)</title><rect x="93.9172%" y="501" width="0.0116%" height="15" fill="rgb(217,214,3)" fg:x="32254" fg:w="4"/><text x="94.1672%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_good_size (6 samples, 0.02%)</title><rect x="93.9347%" y="501" width="0.0175%" height="15" fill="rgb(240,86,28)" fg:x="32260" fg:w="6"/><text x="94.1847%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_good_size (4 samples, 0.01%)</title><rect x="93.9522%" y="501" width="0.0116%" height="15" fill="rgb(215,47,9)" fg:x="32266" fg:w="4"/><text x="94.2022%" y="511.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (53 samples, 0.15%)</title><rect x="93.8124%" y="517" width="0.1543%" height="15" fill="rgb(252,25,45)" fg:x="32218" fg:w="53"/><text x="94.0624%" y="527.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer device] (8 samples, 0.02%)</title><rect x="93.9930%" y="517" width="0.0233%" height="15" fill="rgb(251,164,9)" fg:x="32280" fg:w="8"/><text x="94.2430%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (196 samples, 0.57%)</title><rect x="94.0366%" y="485" width="0.5707%" height="15" fill="rgb(233,194,0)" fg:x="32295" fg:w="196"/><text x="94.2866%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (192 samples, 0.56%)</title><rect x="94.0483%" y="469" width="0.5591%" height="15" fill="rgb(249,111,24)" fg:x="32299" fg:w="192"/><text x="94.2983%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_retain (5 samples, 0.01%)</title><rect x="94.6627%" y="421" width="0.0146%" height="15" fill="rgb(250,223,3)" fg:x="32510" fg:w="5"/><text x="94.9127%" y="431.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (7 samples, 0.02%)</title><rect x="94.6598%" y="437" width="0.0204%" height="15" fill="rgb(236,178,37)" fg:x="32509" fg:w="7"/><text x="94.9098%" y="447.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (30 samples, 0.09%)</title><rect x="94.6452%" y="453" width="0.0874%" height="15" fill="rgb(241,158,50)" fg:x="32504" fg:w="30"/><text x="94.8952%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.05%)</title><rect x="94.6801%" y="437" width="0.0524%" height="15" fill="rgb(213,121,41)" fg:x="32516" fg:w="18"/><text x="94.9301%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.02%)</title><rect x="94.7355%" y="453" width="0.0204%" height="15" fill="rgb(240,92,3)" fg:x="32535" fg:w="7"/><text x="94.9855%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="94.7558%" y="453" width="0.0146%" height="15" fill="rgb(205,123,3)" fg:x="32542" fg:w="5"/><text x="95.0058%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (45 samples, 0.13%)</title><rect x="94.6423%" y="469" width="0.1310%" height="15" fill="rgb(205,97,47)" fg:x="32503" fg:w="45"/><text x="94.8923%" y="479.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (257 samples, 0.75%)</title><rect x="94.0308%" y="501" width="0.7483%" height="15" fill="rgb(247,152,14)" fg:x="32293" fg:w="257"/><text x="94.2808%" y="511.50"></text></g><g><title>libdispatch.dylib`dispatch_async (58 samples, 0.17%)</title><rect x="94.6103%" y="485" width="0.1689%" height="15" fill="rgb(248,195,53)" fg:x="32492" fg:w="58"/><text x="94.8603%" y="495.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (11 samples, 0.03%)</title><rect x="94.8257%" y="453" width="0.0320%" height="15" fill="rgb(226,201,16)" fg:x="32566" fg:w="11"/><text x="95.0757%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="94.8461%" y="437" width="0.0116%" height="15" fill="rgb(205,98,0)" fg:x="32573" fg:w="4"/><text x="95.0961%" y="447.50"></text></g><g><title>Metal`MTLDispatchListApply (17 samples, 0.05%)</title><rect x="94.8112%" y="485" width="0.0495%" height="15" fill="rgb(214,191,48)" fg:x="32561" fg:w="17"/><text x="95.0612%" y="495.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (16 samples, 0.05%)</title><rect x="94.8141%" y="469" width="0.0466%" height="15" fill="rgb(237,112,39)" fg:x="32562" fg:w="16"/><text x="95.0641%" y="479.50"></text></g><g><title>conway`&lt;X as block::IntoConcreteBlock&lt;(A,)&gt;&gt;::into_concrete_block::concrete_block_invoke_args1 (4 samples, 0.01%)</title><rect x="94.8694%" y="485" width="0.0116%" height="15" fill="rgb(247,203,27)" fg:x="32581" fg:w="4"/><text x="95.1194%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (41 samples, 0.12%)</title><rect x="94.7791%" y="501" width="0.1194%" height="15" fill="rgb(235,124,28)" fg:x="32550" fg:w="41"/><text x="95.0291%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandBuffer signalCommandBufferAvailable] (4 samples, 0.01%)</title><rect x="94.8985%" y="501" width="0.0116%" height="15" fill="rgb(208,207,46)" fg:x="32591" fg:w="4"/><text x="95.1485%" y="511.50"></text></g><g><title>Metal`MTLResourceListChunkFreeEntries(MTLResourceListChunk*) (8 samples, 0.02%)</title><rect x="95.0179%" y="453" width="0.0233%" height="15" fill="rgb(234,176,4)" fg:x="32632" fg:w="8"/><text x="95.2679%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_release (7 samples, 0.02%)</title><rect x="95.0412%" y="453" width="0.0204%" height="15" fill="rgb(230,133,28)" fg:x="32640" fg:w="7"/><text x="95.2912%" y="463.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (75 samples, 0.22%)</title><rect x="95.0150%" y="469" width="0.2184%" height="15" fill="rgb(211,137,40)" fg:x="32631" fg:w="75"/><text x="95.2650%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (59 samples, 0.17%)</title><rect x="95.0616%" y="453" width="0.1718%" height="15" fill="rgb(254,35,13)" fg:x="32647" fg:w="59"/><text x="95.3116%" y="463.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageReset (106 samples, 0.31%)</title><rect x="94.9393%" y="485" width="0.3087%" height="15" fill="rgb(225,49,51)" fg:x="32605" fg:w="106"/><text x="95.1893%" y="495.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageDealloc (140 samples, 0.41%)</title><rect x="94.9102%" y="501" width="0.4077%" height="15" fill="rgb(251,10,15)" fg:x="32595" fg:w="140"/><text x="95.1602%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (24 samples, 0.07%)</title><rect x="95.2479%" y="485" width="0.0699%" height="15" fill="rgb(228,207,15)" fg:x="32711" fg:w="24"/><text x="95.4979%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_push (6 samples, 0.02%)</title><rect x="95.3178%" y="501" width="0.0175%" height="15" fill="rgb(241,99,19)" fg:x="32735" fg:w="6"/><text x="95.5678%" y="511.50"></text></g><g><title>libdispatch.dylib`dispatch_semaphore_signal (8 samples, 0.02%)</title><rect x="95.3353%" y="501" width="0.0233%" height="15" fill="rgb(207,104,49)" fg:x="32741" fg:w="8"/><text x="95.5853%" y="511.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (8 samples, 0.02%)</title><rect x="95.3615%" y="501" width="0.0233%" height="15" fill="rgb(234,99,18)" fg:x="32750" fg:w="8"/><text x="95.6115%" y="511.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer didCompleteWithStartTime:endTime:error:] (475 samples, 1.38%)</title><rect x="94.0162%" y="517" width="1.3831%" height="15" fill="rgb(213,191,49)" fg:x="32288" fg:w="475"/><text x="94.2662%" y="527.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue device] (8 samples, 0.02%)</title><rect x="95.3994%" y="517" width="0.0233%" height="15" fill="rgb(210,226,19)" fg:x="32763" fg:w="8"/><text x="95.6494%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (16 samples, 0.05%)</title><rect x="95.4343%" y="517" width="0.0466%" height="15" fill="rgb(229,97,18)" fg:x="32775" fg:w="16"/><text x="95.6843%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (9 samples, 0.03%)</title><rect x="95.4809%" y="517" width="0.0262%" height="15" fill="rgb(211,167,15)" fg:x="32791" fg:w="9"/><text x="95.7309%" y="527.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (591 samples, 1.72%)</title><rect x="93.8095%" y="533" width="1.7209%" height="15" fill="rgb(210,169,34)" fg:x="32217" fg:w="591"/><text x="94.0595%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.02%)</title><rect x="95.5129%" y="517" width="0.0175%" height="15" fill="rgb(241,121,31)" fg:x="32802" fg:w="6"/><text x="95.7629%" y="527.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke (9 samples, 0.03%)</title><rect x="95.5449%" y="533" width="0.0262%" height="15" fill="rgb(232,40,11)" fg:x="32813" fg:w="9"/><text x="95.7949%" y="543.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke.19 (10 samples, 0.03%)</title><rect x="95.5711%" y="533" width="0.0291%" height="15" fill="rgb(205,86,26)" fg:x="32822" fg:w="10"/><text x="95.8211%" y="543.50"></text></g><g><title>libdispatch.dylib`dispatch_group_leave (4 samples, 0.01%)</title><rect x="95.6003%" y="533" width="0.0116%" height="15" fill="rgb(231,126,28)" fg:x="32832" fg:w="4"/><text x="95.8503%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.03%)</title><rect x="95.6148%" y="533" width="0.0320%" height="15" fill="rgb(219,221,18)" fg:x="32837" fg:w="11"/><text x="95.8648%" y="543.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (4 samples, 0.01%)</title><rect x="95.6643%" y="517" width="0.0116%" height="15" fill="rgb(211,40,0)" fg:x="32854" fg:w="4"/><text x="95.9143%" y="527.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt; &gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (19 samples, 0.06%)</title><rect x="95.7109%" y="485" width="0.0553%" height="15" fill="rgb(239,85,43)" fg:x="32870" fg:w="19"/><text x="95.9609%" y="495.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (25 samples, 0.07%)</title><rect x="95.6964%" y="501" width="0.0728%" height="15" fill="rgb(231,55,21)" fg:x="32865" fg:w="25"/><text x="95.9464%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (48 samples, 0.14%)</title><rect x="95.6760%" y="517" width="0.1398%" height="15" fill="rgb(225,184,43)" fg:x="32858" fg:w="48"/><text x="95.9260%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (16 samples, 0.05%)</title><rect x="95.7692%" y="501" width="0.0466%" height="15" fill="rgb(251,158,41)" fg:x="32890" fg:w="16"/><text x="96.0192%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_release (5 samples, 0.01%)</title><rect x="95.8187%" y="517" width="0.0146%" height="15" fill="rgb(234,159,37)" fg:x="32907" fg:w="5"/><text x="96.0687%" y="527.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`DYLD-STUB$$__bzero (4 samples, 0.01%)</title><rect x="95.8507%" y="485" width="0.0116%" height="15" fill="rgb(216,204,22)" fg:x="32918" fg:w="4"/><text x="96.1007%" y="495.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::terminate (6 samples, 0.02%)</title><rect x="95.8623%" y="485" width="0.0175%" height="15" fill="rgb(214,17,3)" fg:x="32922" fg:w="6"/><text x="96.1123%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.01%)</title><rect x="95.8652%" y="469" width="0.0146%" height="15" fill="rgb(212,111,17)" fg:x="32923" fg:w="5"/><text x="96.1152%" y="479.50"></text></g><g><title>CoreFoundation`_CFRelease (11 samples, 0.03%)</title><rect x="95.8944%" y="437" width="0.0320%" height="15" fill="rgb(221,157,24)" fg:x="32933" fg:w="11"/><text x="96.1444%" y="447.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (23 samples, 0.07%)</title><rect x="95.8944%" y="453" width="0.0670%" height="15" fill="rgb(252,16,13)" fg:x="32933" fg:w="23"/><text x="96.1444%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.02%)</title><rect x="95.9439%" y="437" width="0.0175%" height="15" fill="rgb(221,62,2)" fg:x="32950" fg:w="6"/><text x="96.1939%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.01%)</title><rect x="95.9613%" y="453" width="0.0146%" height="15" fill="rgb(247,87,22)" fg:x="32956" fg:w="5"/><text x="96.2113%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.01%)</title><rect x="95.9759%" y="453" width="0.0116%" height="15" fill="rgb(215,73,9)" fg:x="32961" fg:w="4"/><text x="96.2259%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_release (6 samples, 0.02%)</title><rect x="95.9875%" y="453" width="0.0175%" height="15" fill="rgb(207,175,33)" fg:x="32965" fg:w="6"/><text x="96.2375%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (42 samples, 0.12%)</title><rect x="95.8885%" y="469" width="0.1223%" height="15" fill="rgb(243,129,54)" fg:x="32931" fg:w="42"/><text x="96.1385%" y="479.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (52 samples, 0.15%)</title><rect x="95.8798%" y="485" width="0.1514%" height="15" fill="rgb(227,119,45)" fg:x="32928" fg:w="52"/><text x="96.1298%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.03%)</title><rect x="96.0429%" y="485" width="0.0262%" height="15" fill="rgb(205,109,36)" fg:x="32984" fg:w="9"/><text x="96.2929%" y="495.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (80 samples, 0.23%)</title><rect x="95.8390%" y="501" width="0.2329%" height="15" fill="rgb(205,6,39)" fg:x="32914" fg:w="80"/><text x="96.0890%" y="511.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer deleteContextStateDescriptor:] (5 samples, 0.01%)</title><rect x="96.0720%" y="501" width="0.0146%" height="15" fill="rgb(221,32,16)" fg:x="32994" fg:w="5"/><text x="96.3220%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (5 samples, 0.01%)</title><rect x="96.0895%" y="501" width="0.0146%" height="15" fill="rgb(228,144,50)" fg:x="33000" fg:w="5"/><text x="96.3395%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (99 samples, 0.29%)</title><rect x="95.8390%" y="517" width="0.2883%" height="15" fill="rgb(229,201,53)" fg:x="32914" fg:w="99"/><text x="96.0890%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.03%)</title><rect x="96.1302%" y="517" width="0.0291%" height="15" fill="rgb(249,153,27)" fg:x="33014" fg:w="10"/><text x="96.3802%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.01%)</title><rect x="96.1448%" y="501" width="0.0146%" height="15" fill="rgb(227,106,25)" fg:x="33019" fg:w="5"/><text x="96.3948%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (174 samples, 0.51%)</title><rect x="95.6556%" y="533" width="0.5067%" height="15" fill="rgb(230,65,29)" fg:x="32851" fg:w="174"/><text x="95.9056%" y="543.50"></text></g><g><title>IOAccelerator`ioAccelCommandQueueBlockFenceCallback (1,463 samples, 4.26%)</title><rect x="91.9081%" y="549" width="4.2600%" height="15" fill="rgb(221,57,46)" fg:x="31564" fg:w="1463"/><text x="92.1581%" y="559.50">IOAcc..</text></g><g><title>CoreFoundation`_CFArrayReplaceValues (6 samples, 0.02%)</title><rect x="96.2117%" y="517" width="0.0175%" height="15" fill="rgb(229,161,17)" fg:x="33042" fg:w="6"/><text x="96.4617%" y="527.50"></text></g><g><title>IOSurface`_iosRemoveEventBlock (17 samples, 0.05%)</title><rect x="96.1943%" y="533" width="0.0495%" height="15" fill="rgb(222,213,11)" fg:x="33036" fg:w="17"/><text x="96.4443%" y="543.50"></text></g><g><title>CoreFoundation`-[NSArray containsObject:] (8 samples, 0.02%)</title><rect x="96.3282%" y="517" width="0.0233%" height="15" fill="rgb(235,35,13)" fg:x="33082" fg:w="8"/><text x="96.5782%" y="527.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (7 samples, 0.02%)</title><rect x="96.3602%" y="517" width="0.0204%" height="15" fill="rgb(233,158,34)" fg:x="33093" fg:w="7"/><text x="96.6102%" y="527.50"></text></g><g><title>QuartzCore`CA::GenericContext::retain_context_with_id (4 samples, 0.01%)</title><rect x="96.4476%" y="501" width="0.0116%" height="15" fill="rgb(215,151,48)" fg:x="33123" fg:w="4"/><text x="96.6976%" y="511.50"></text></g><g><title>QuartzCore`CA::Context::retain_context_with_id (9 samples, 0.03%)</title><rect x="96.4709%" y="469" width="0.0262%" height="15" fill="rgb(229,84,14)" fg:x="33131" fg:w="9"/><text x="96.7209%" y="479.50"></text></g><g><title>QuartzCore`CA::GenericContext::retain_context_with_id (10 samples, 0.03%)</title><rect x="96.4709%" y="485" width="0.0291%" height="15" fill="rgb(229,68,14)" fg:x="33131" fg:w="10"/><text x="96.7209%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (152 samples, 0.44%)</title><rect x="96.5000%" y="485" width="0.4426%" height="15" fill="rgb(243,106,26)" fg:x="33141" fg:w="152"/><text x="96.7500%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (152 samples, 0.44%)</title><rect x="96.5000%" y="469" width="0.4426%" height="15" fill="rgb(206,45,38)" fg:x="33141" fg:w="152"/><text x="96.7500%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (145 samples, 0.42%)</title><rect x="96.5204%" y="453" width="0.4222%" height="15" fill="rgb(226,6,15)" fg:x="33148" fg:w="145"/><text x="96.7704%" y="463.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (168 samples, 0.49%)</title><rect x="96.4592%" y="501" width="0.4892%" height="15" fill="rgb(232,22,54)" fg:x="33127" fg:w="168"/><text x="96.7092%" y="511.50"></text></g><g><title>QuartzCore`x_hash_table_lookup (4 samples, 0.01%)</title><rect x="96.9513%" y="501" width="0.0116%" height="15" fill="rgb(229,222,32)" fg:x="33296" fg:w="4"/><text x="97.2013%" y="511.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (7 samples, 0.02%)</title><rect x="97.0358%" y="453" width="0.0204%" height="15" fill="rgb(228,62,29)" fg:x="33325" fg:w="7"/><text x="97.2858%" y="463.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (27 samples, 0.08%)</title><rect x="96.9805%" y="501" width="0.0786%" height="15" fill="rgb(251,103,34)" fg:x="33306" fg:w="27"/><text x="97.2305%" y="511.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (24 samples, 0.07%)</title><rect x="96.9892%" y="485" width="0.0699%" height="15" fill="rgb(233,12,30)" fg:x="33309" fg:w="24"/><text x="97.2392%" y="495.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (21 samples, 0.06%)</title><rect x="96.9979%" y="469" width="0.0611%" height="15" fill="rgb(238,52,0)" fg:x="33312" fg:w="21"/><text x="97.2479%" y="479.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (232 samples, 0.68%)</title><rect x="96.3923%" y="517" width="0.6755%" height="15" fill="rgb(223,98,5)" fg:x="33104" fg:w="232"/><text x="96.6423%" y="527.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (282 samples, 0.82%)</title><rect x="96.2642%" y="533" width="0.8211%" height="15" fill="rgb(228,75,37)" fg:x="33060" fg:w="282"/><text x="96.5142%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (14 samples, 0.04%)</title><rect x="97.0853%" y="533" width="0.0408%" height="15" fill="rgb(205,115,49)" fg:x="33342" fg:w="14"/><text x="97.3353%" y="543.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (4 samples, 0.01%)</title><rect x="97.1290%" y="533" width="0.0116%" height="15" fill="rgb(250,154,43)" fg:x="33357" fg:w="4"/><text x="97.3790%" y="543.50"></text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (335 samples, 0.98%)</title><rect x="96.1681%" y="549" width="0.9755%" height="15" fill="rgb(226,43,29)" fg:x="33027" fg:w="335"/><text x="96.4181%" y="559.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke (5 samples, 0.01%)</title><rect x="97.1435%" y="549" width="0.0146%" height="15" fill="rgb(249,228,39)" fg:x="33362" fg:w="5"/><text x="97.3935%" y="559.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke.19 (22 samples, 0.06%)</title><rect x="97.1581%" y="549" width="0.0641%" height="15" fill="rgb(216,79,43)" fg:x="33367" fg:w="22"/><text x="97.4081%" y="559.50"></text></g><g><title>QuartzCore`invocation function for block in layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (8 samples, 0.02%)</title><rect x="97.2221%" y="549" width="0.0233%" height="15" fill="rgb(228,95,12)" fg:x="33389" fg:w="8"/><text x="97.4721%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (12 samples, 0.03%)</title><rect x="97.2513%" y="549" width="0.0349%" height="15" fill="rgb(249,221,15)" fg:x="33399" fg:w="12"/><text x="97.5013%" y="559.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (6 samples, 0.02%)</title><rect x="97.3241%" y="517" width="0.0175%" height="15" fill="rgb(233,34,13)" fg:x="33424" fg:w="6"/><text x="97.5741%" y="527.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt; &gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (4 samples, 0.01%)</title><rect x="97.3299%" y="501" width="0.0116%" height="15" fill="rgb(214,103,39)" fg:x="33426" fg:w="4"/><text x="97.5799%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (10 samples, 0.03%)</title><rect x="97.3241%" y="533" width="0.0291%" height="15" fill="rgb(251,126,39)" fg:x="33424" fg:w="10"/><text x="97.5741%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (4 samples, 0.01%)</title><rect x="97.3415%" y="517" width="0.0116%" height="15" fill="rgb(214,216,36)" fg:x="33430" fg:w="4"/><text x="97.5915%" y="527.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (29 samples, 0.08%)</title><rect x="97.2920%" y="549" width="0.0844%" height="15" fill="rgb(220,221,8)" fg:x="33413" fg:w="29"/><text x="97.5420%" y="559.50"></text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (1,896 samples, 5.52%)</title><rect x="91.8673%" y="565" width="5.5208%" height="15" fill="rgb(240,216,3)" fg:x="31550" fg:w="1896"/><text x="92.1173%" y="575.50">IOKit`I..</text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (4 samples, 0.01%)</title><rect x="97.3881%" y="565" width="0.0116%" height="15" fill="rgb(232,218,17)" fg:x="33446" fg:w="4"/><text x="97.6381%" y="575.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (1,914 samples, 5.57%)</title><rect x="91.8295%" y="581" width="5.5732%" height="15" fill="rgb(229,163,45)" fg:x="31537" fg:w="1914"/><text x="92.0795%" y="591.50">IOKit`_..</text></g><g><title>libdispatch.dylib`_voucher_create_with_mach_voucher (5 samples, 0.01%)</title><rect x="97.4027%" y="581" width="0.0146%" height="15" fill="rgb(231,110,42)" fg:x="33451" fg:w="5"/><text x="97.6527%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_internal (17 samples, 0.05%)</title><rect x="97.4726%" y="549" width="0.0495%" height="15" fill="rgb(208,170,48)" fg:x="33475" fg:w="17"/><text x="97.7226%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (597 samples, 1.74%)</title><rect x="97.4172%" y="581" width="1.7383%" height="15" fill="rgb(239,116,25)" fg:x="33456" fg:w="597"/><text x="97.6672%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (593 samples, 1.73%)</title><rect x="97.4289%" y="565" width="1.7267%" height="15" fill="rgb(219,200,50)" fg:x="33460" fg:w="593"/><text x="97.6789%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (561 samples, 1.63%)</title><rect x="97.5221%" y="549" width="1.6335%" height="15" fill="rgb(245,200,0)" fg:x="33492" fg:w="561"/><text x="97.7721%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (7 samples, 0.02%)</title><rect x="99.1556%" y="581" width="0.0204%" height="15" fill="rgb(245,119,33)" fg:x="34053" fg:w="7"/><text x="99.4056%" y="591.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (2,552 samples, 7.43%)</title><rect x="91.7712%" y="597" width="7.4309%" height="15" fill="rgb(231,125,12)" fg:x="31517" fg:w="2552"/><text x="92.0212%" y="607.50">libdispatc..</text></g><g><title>libsystem_kernel.dylib`mig_reply_setup (9 samples, 0.03%)</title><rect x="99.1760%" y="581" width="0.0262%" height="15" fill="rgb(216,96,41)" fg:x="34060" fg:w="9"/><text x="99.4260%" y="591.50"></text></g><g><title>libdispatch.dylib`voucher_create_with_mach_msg (5 samples, 0.01%)</title><rect x="99.2022%" y="597" width="0.0146%" height="15" fill="rgb(248,43,45)" fg:x="34069" fg:w="5"/><text x="99.4522%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (12 samples, 0.03%)</title><rect x="99.2167%" y="597" width="0.0349%" height="15" fill="rgb(217,222,7)" fg:x="34074" fg:w="12"/><text x="99.4667%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_release (8 samples, 0.02%)</title><rect x="99.2517%" y="597" width="0.0233%" height="15" fill="rgb(233,28,6)" fg:x="34086" fg:w="8"/><text x="99.5017%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (15 samples, 0.04%)</title><rect x="99.2779%" y="597" width="0.0437%" height="15" fill="rgb(231,218,15)" fg:x="34095" fg:w="15"/><text x="99.5279%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5,377 samples, 15.66%)</title><rect x="83.6706%" y="613" width="15.6568%" height="15" fill="rgb(226,171,48)" fg:x="28735" fg:w="5377"/><text x="83.9206%" y="623.50">libdispatch.dylib`_dispa..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (5,435 samples, 15.83%)</title><rect x="83.5221%" y="629" width="15.8256%" height="15" fill="rgb(235,201,9)" fg:x="28684" fg:w="5435"/><text x="83.7721%" y="639.50">libdispatch.dylib`_dispa..</text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.02%)</title><rect x="99.3303%" y="613" width="0.0175%" height="15" fill="rgb(217,80,15)" fg:x="34113" fg:w="6"/><text x="99.5803%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (5,517 samples, 16.06%)</title><rect x="83.3183%" y="645" width="16.0644%" height="15" fill="rgb(219,152,8)" fg:x="28614" fg:w="5517"/><text x="83.5683%" y="655.50">libdispatch.dylib`_dispat..</text></g><g><title>libdispatch.dylib`_dispatch_kq_unote_update (12 samples, 0.03%)</title><rect x="99.3478%" y="629" width="0.0349%" height="15" fill="rgb(243,107,38)" fg:x="34119" fg:w="12"/><text x="99.5978%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (6,068 samples, 17.67%)</title><rect x="81.7488%" y="661" width="17.6688%" height="15" fill="rgb(231,17,5)" fg:x="28075" fg:w="6068"/><text x="81.9988%" y="671.50">libdispatch.dylib`_dispatch..</text></g><g><title>libdispatch.dylib`_os_object_release_internal_n (7 samples, 0.02%)</title><rect x="99.3973%" y="645" width="0.0204%" height="15" fill="rgb(209,25,54)" fg:x="34136" fg:w="7"/><text x="99.6473%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_pop (19 samples, 0.06%)</title><rect x="99.4176%" y="661" width="0.0553%" height="15" fill="rgb(219,0,2)" fg:x="34143" fg:w="19"/><text x="99.6676%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (14 samples, 0.04%)</title><rect x="99.4322%" y="645" width="0.0408%" height="15" fill="rgb(246,9,5)" fg:x="34148" fg:w="14"/><text x="99.6822%" y="655.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (5 samples, 0.01%)</title><rect x="99.4584%" y="629" width="0.0146%" height="15" fill="rgb(226,159,4)" fg:x="34157" fg:w="5"/><text x="99.7084%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (45 samples, 0.13%)</title><rect x="99.4730%" y="661" width="0.1310%" height="15" fill="rgb(219,175,34)" fg:x="34162" fg:w="45"/><text x="99.7230%" y="671.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (36 samples, 0.10%)</title><rect x="99.4992%" y="645" width="0.1048%" height="15" fill="rgb(236,10,46)" fg:x="34171" fg:w="36"/><text x="99.7492%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (4 samples, 0.01%)</title><rect x="99.6040%" y="661" width="0.0116%" height="15" fill="rgb(240,211,16)" fg:x="34207" fg:w="4"/><text x="99.8540%" y="671.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (4 samples, 0.01%)</title><rect x="99.6186%" y="661" width="0.0116%" height="15" fill="rgb(205,3,43)" fg:x="34212" fg:w="4"/><text x="99.8686%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (4 samples, 0.01%)</title><rect x="99.6302%" y="661" width="0.0116%" height="15" fill="rgb(245,7,22)" fg:x="34216" fg:w="4"/><text x="99.8802%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (6,174 samples, 17.98%)</title><rect x="81.6760%" y="677" width="17.9775%" height="15" fill="rgb(239,132,32)" fg:x="28050" fg:w="6174"/><text x="81.9260%" y="687.50">libdispatch.dylib`_dispatch_..</text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPush (4 samples, 0.01%)</title><rect x="99.6418%" y="661" width="0.0116%" height="15" fill="rgb(228,202,34)" fg:x="34220" fg:w="4"/><text x="99.8918%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_push (14 samples, 0.04%)</title><rect x="99.6535%" y="677" width="0.0408%" height="15" fill="rgb(254,200,22)" fg:x="34224" fg:w="14"/><text x="99.9035%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (7 samples, 0.02%)</title><rect x="99.7146%" y="677" width="0.0204%" height="15" fill="rgb(219,10,39)" fg:x="34245" fg:w="7"/><text x="99.9646%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_wakeup (10 samples, 0.03%)</title><rect x="99.7379%" y="677" width="0.0291%" height="15" fill="rgb(226,210,39)" fg:x="34253" fg:w="10"/><text x="99.9879%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (9,962 samples, 29.01%)</title><rect x="70.7917%" y="725" width="29.0074%" height="15" fill="rgb(208,219,16)" fg:x="24312" fg:w="9962"/><text x="71.0417%" y="735.50">libsystem_pthread.dylib`start_wqthread</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (6,713 samples, 19.55%)</title><rect x="80.2522%" y="709" width="19.5469%" height="15" fill="rgb(216,158,51)" fg:x="27561" fg:w="6713"/><text x="80.5022%" y="719.50">libsystem_pthread.dylib`_pthrea..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (6,667 samples, 19.41%)</title><rect x="80.3861%" y="693" width="19.4130%" height="15" fill="rgb(233,14,44)" fg:x="27607" fg:w="6667"/><text x="80.6361%" y="703.50">libdispatch.dylib`_dispatch_wo..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="99.7758%" y="677" width="0.0233%" height="15" fill="rgb(237,97,39)" fg:x="34266" fg:w="8"/><text x="100.0258%" y="687.50"></text></g><g><title>SkyLight`CGSEventLogEvent (6 samples, 0.02%)</title><rect x="99.8311%" y="533" width="0.0175%" height="15" fill="rgb(218,198,43)" fg:x="34285" fg:w="6"/><text x="100.0811%" y="543.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (6 samples, 0.02%)</title><rect x="99.8311%" y="517" width="0.0175%" height="15" fill="rgb(231,104,20)" fg:x="34285" fg:w="6"/><text x="100.0811%" y="527.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (6 samples, 0.02%)</title><rect x="99.8311%" y="501" width="0.0175%" height="15" fill="rgb(254,36,13)" fg:x="34285" fg:w="6"/><text x="100.0811%" y="511.50"></text></g><g><title>libsystem_c.dylib`snprintf (5 samples, 0.01%)</title><rect x="99.8340%" y="485" width="0.0146%" height="15" fill="rgb(248,14,50)" fg:x="34286" fg:w="5"/><text x="100.0840%" y="495.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (5 samples, 0.01%)</title><rect x="99.8340%" y="469" width="0.0146%" height="15" fill="rgb(217,107,29)" fg:x="34286" fg:w="5"/><text x="100.0840%" y="479.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (5 samples, 0.01%)</title><rect x="99.8340%" y="453" width="0.0146%" height="15" fill="rgb(251,169,33)" fg:x="34286" fg:w="5"/><text x="100.0840%" y="463.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (5 samples, 0.01%)</title><rect x="99.8340%" y="437" width="0.0146%" height="15" fill="rgb(217,108,32)" fg:x="34286" fg:w="5"/><text x="100.0840%" y="447.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (7 samples, 0.02%)</title><rect x="99.8661%" y="517" width="0.0204%" height="15" fill="rgb(219,66,42)" fg:x="34297" fg:w="7"/><text x="100.1161%" y="527.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (7 samples, 0.02%)</title><rect x="99.8661%" y="501" width="0.0204%" height="15" fill="rgb(206,180,7)" fg:x="34297" fg:w="7"/><text x="100.1161%" y="511.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (6 samples, 0.02%)</title><rect x="99.8690%" y="485" width="0.0175%" height="15" fill="rgb(208,226,31)" fg:x="34298" fg:w="6"/><text x="100.1190%" y="495.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (33 samples, 0.10%)</title><rect x="99.8282%" y="565" width="0.0961%" height="15" fill="rgb(218,26,49)" fg:x="34284" fg:w="33"/><text x="100.0782%" y="575.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (33 samples, 0.10%)</title><rect x="99.8282%" y="549" width="0.0961%" height="15" fill="rgb(233,197,48)" fg:x="34284" fg:w="33"/><text x="100.0782%" y="559.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (26 samples, 0.08%)</title><rect x="99.8486%" y="533" width="0.0757%" height="15" fill="rgb(252,181,51)" fg:x="34291" fg:w="26"/><text x="100.0986%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (13 samples, 0.04%)</title><rect x="99.8864%" y="517" width="0.0379%" height="15" fill="rgb(253,90,19)" fg:x="34304" fg:w="13"/><text x="100.1364%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (13 samples, 0.04%)</title><rect x="99.8864%" y="501" width="0.0379%" height="15" fill="rgb(215,171,30)" fg:x="34304" fg:w="13"/><text x="100.1364%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (13 samples, 0.04%)</title><rect x="99.8864%" y="485" width="0.0379%" height="15" fill="rgb(214,222,9)" fg:x="34304" fg:w="13"/><text x="100.1364%" y="495.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (44 samples, 0.13%)</title><rect x="99.8049%" y="629" width="0.1281%" height="15" fill="rgb(223,3,22)" fg:x="34276" fg:w="44"/><text x="100.0549%" y="639.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (44 samples, 0.13%)</title><rect x="99.8049%" y="613" width="0.1281%" height="15" fill="rgb(225,196,46)" fg:x="34276" fg:w="44"/><text x="100.0549%" y="623.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (42 samples, 0.12%)</title><rect x="99.8107%" y="597" width="0.1223%" height="15" fill="rgb(209,110,37)" fg:x="34278" fg:w="42"/><text x="100.0607%" y="607.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (42 samples, 0.12%)</title><rect x="99.8107%" y="581" width="0.1223%" height="15" fill="rgb(249,89,12)" fg:x="34278" fg:w="42"/><text x="100.0607%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (45 samples, 0.13%)</title><rect x="99.8049%" y="645" width="0.1310%" height="15" fill="rgb(226,27,33)" fg:x="34276" fg:w="45"/><text x="100.0549%" y="655.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (17 samples, 0.05%)</title><rect x="99.9389%" y="645" width="0.0495%" height="15" fill="rgb(213,82,22)" fg:x="34322" fg:w="17"/><text x="100.1889%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (16 samples, 0.05%)</title><rect x="99.9418%" y="629" width="0.0466%" height="15" fill="rgb(248,140,0)" fg:x="34323" fg:w="16"/><text x="100.1918%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (16 samples, 0.05%)</title><rect x="99.9418%" y="613" width="0.0466%" height="15" fill="rgb(228,106,3)" fg:x="34323" fg:w="16"/><text x="100.1918%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (15 samples, 0.04%)</title><rect x="99.9447%" y="597" width="0.0437%" height="15" fill="rgb(209,23,37)" fg:x="34324" fg:w="15"/><text x="100.1947%" y="607.50"></text></g><g><title>all (34,343 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(241,93,50)" fg:x="0" fg:w="34343"/><text x="0.2500%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (69 samples, 0.20%)</title><rect x="99.7991%" y="725" width="0.2009%" height="15" fill="rgb(253,46,43)" fg:x="34274" fg:w="69"/><text x="100.0491%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (69 samples, 0.20%)</title><rect x="99.7991%" y="709" width="0.2009%" height="15" fill="rgb(226,206,43)" fg:x="34274" fg:w="69"/><text x="100.0491%" y="719.50"></text></g><g><title>AppKit`_NSEventThread (69 samples, 0.20%)</title><rect x="99.7991%" y="693" width="0.2009%" height="15" fill="rgb(217,54,7)" fg:x="34274" fg:w="69"/><text x="100.0491%" y="703.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (69 samples, 0.20%)</title><rect x="99.7991%" y="677" width="0.2009%" height="15" fill="rgb(223,5,52)" fg:x="34274" fg:w="69"/><text x="100.0491%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (69 samples, 0.20%)</title><rect x="99.7991%" y="661" width="0.2009%" height="15" fill="rgb(206,52,46)" fg:x="34274" fg:w="69"/><text x="100.0491%" y="671.50"></text></g></svg></svg>